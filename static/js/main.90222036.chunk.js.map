{"version":3,"sources":["util/reducerManager.ts","store/constant/paramsConfig.ts","constant/localStorage.ts","store/constant/client.ts","store/constant/notification.ts","store/constant/telematicHistory.ts","store/constant/car.ts","store/constant/mailingTemplate.ts","util/localStorage.ts","util/cssVariables.ts","store/constant/user.ts","components/newInput/fieldWrapper.module.css","store/constant/ticket.ts","store/constant/cssVariable.ts","store/constant/configTypeCatalog.ts","store/constant/dealer.ts","store/constant/mailingHistory.ts","constant/theme.ts","store/constant/valuesCatalog.ts","img/minibus.jpg","components/newInput/input.module.css","store/reducer sync //.ts$","store/reducer/car.ts","store/reducer/client.ts","store/reducer/configTypeCatalog.ts","store/reducer/cssVariable.ts","store/reducer/dealer.ts","store/reducer/mailingHistory.ts","store/reducer/mailingTemplate.ts","store/reducer/notification.ts","store/reducer/paramsConfig.ts","store/reducer/telematicHistory.ts","store/reducer/ticket.ts","store/reducer/user.ts","store/reducer/valuesCatalog.ts","store/action/cssVariable.ts","index/redux/allReducers.ts","index/redux/apiMiddleware.ts","index/redux/store.ts","index/notificationLayer.tsx","util/route-constant/getListForEveryLocation.ts","util/route-constant/setPreviousRoute.ts","index/route/history.ts","components/svg/infoFilledIcon.tsx","components/svg/mailFilledIcon.tsx","components/svg/phoneFilledIcon.tsx","components/svg/searchFilledIcon.tsx","components/svg/starFilledIcon.tsx","components/svg/userFilledIcon.tsx","constant/routes.tsx","components/breadcrumbs/_breadcrumbs.tsx","fakeResponse/index.ts","fakeResponse/user.ts","store/action/user.ts","components/svg/notificationFilledIcon.tsx","store/action/notification.ts","components/button/icons/loading.tsx","components/button/index.tsx","components/svg/loadingFilledIcon.tsx","components/svg/visibleFilledIcon.tsx","store/action/paramsConfig.ts","components/svg/keyOutlinedIcon.tsx","components/svg/accumulatorOutlinedIcon.tsx","components/svg/airbagOutlinedIcon.tsx","components/svg/coolantOutlinedIcon.tsx","components/svg/generatorOutlinedIcon.tsx","components/svg/brakeFluidOutlinedIcon.tsx","constant/lastTelemetry.tsx","components/svg/closeOutlinedIcon.tsx","components/popup/_popup.tsx","template/popup.viewParamConfig/fieldComponent.tsx","template/popup.viewParamConfig/_popup.viewParamsConfig.tsx","util/paramsConfig.ts","template/notification/list.tsx","template/notification/_notification.tsx","template/header/_header.tsx","components/svg/arrowFilledIcon.tsx","components/svg/circle.tsx","components/IconInCircle/_iconInCircle.tsx","helper/permission.ts","hook/useSetCSSVariable/util.ts","hook/useSetCSSVariable/index.ts","hook/useCarousel/util.ts","hook/useCarousel/CarouselState.ts","hook/useCarousel/CarouselStateManager.ts","hook/useCarousel/useCarousel.ts","template/popupLicense/_popupLicense.tsx","components/svg/arrowOutlinedIcon.tsx","components/select/icons/close.tsx","components/select/icons/loading.tsx","components/select/index.tsx","template/themeSetter/themeSetter.tsx","components/sider/_sider.tsx","page/notFound/_notFound.tsx","components/skelet/_skelet.tsx","page/main/tab.about/_tab.about.tsx","store/action/dealer.ts","page/main/tab.search/header.tsx","components/svg/postMessageIcon.tsx","helper/animation.ts","store/action/car.ts","template/empty/_empty.tsx","template/collapseHeader/_collapseHeader.tsx","components/svg/fileOutlinedIcon.tsx","components/svg/lampStatusOutlinedIcon.tsx","store/action/telematicHistory.ts","components/chartWrapper/_chartWrapper.tsx","components/datepicker/icons/close.tsx","components/datepicker/_datepicker.tsx","components/telematicTable/_telematicTable.tsx","page/main/tab.search/car/parameter.tsx","page/main/tab.search/car/panelContent.telematicRecord.tsx","page/main/tab.search/car/panelContent.mainInfo.tsx","page/main/tab.search/car/panelContent.parameters.tsx","components/textarea/index.tsx","store/action/mailingTemplate.ts","util/reduxActions.ts","page/main/tab.search/popup.sendMessage.tsx","page/main/tab.search/car/_car.tsx","components/svg/settingsFilledIcon.tsx","components/pagination/perPage.tsx","components/pagination/_pagination.tsx","components/checkboxButton/icons/loading.tsx","components/checkboxButton/icons/check.tsx","components/checkboxButton/index.tsx","template/checkAll/_checkAll.tsx","template/paginationSection/_paginationSection.tsx","util/listManager.ts","components/svg/downloadFilledIcon.tsx","components/newInput/useStateBoolean.ts","components/newInput/focusHOC.tsx","components/newInput/fieldWrapper.tsx","components/newInput/stateManager.tsx","components/newInput/close.tsx","components/newInput/index.ts","components/newInput/input.tsx","components/input/icons/close.tsx","components/input/icons/loading.tsx","components/input/index.tsx","components/svg/plusOutlinedIcon.tsx","components/svg/closeCircleOutlined.tsx","helper/validate.ts","store/action/configTypeCatalog.ts","page/main/tab.search/popup.saveTemplate.tsx","page/main/tab.search/list.car/filter.tsx","store/action/valuesCatalog.ts","page/main/tab.search/util.ts","page/main/tab.search/list.car/card.tsx","page/main/tab.search/list.car/_list.car.tsx","hook/delayRender.ts","fakeResponse/customers.ts","store/action/customers.ts","page/main/tab.search/list.client/filter.tsx","components/svg/saveOutlinedIcon.tsx","page/main/tab.search/list.client/listItem.tsx","page/main/tab.search/list.client/_list.client.tsx","page/main/tab.search/_tab.search.tsx","page/main/tab.feedback/dialog/block.bottom.tsx","page/main/tab.feedback/dialog/_dialog.tsx","store/action/ticket.ts","page/main/tab.feedback/list/_list.tsx","page/main/tab.feedback/_tab.feedback.tsx","components/table/index.tsx","components/svg/pencilFilledIcon.tsx","page/main/tab.paramsConfig/list/columns.tsx","page/main/tab.paramsConfig/list/filter.tsx","page/main/tab.paramsConfig/list/_list.tsx","components/field/index.tsx","components/refillableList/index.tsx","page/main/tab.paramsConfig/one/_one.tsx","page/main/tab.paramsConfig/apply.tsx","page/main/tab.paramsConfig/_tab.paramsConfig.tsx","constant/keyValue.ts","page/main/tab.mailing/list.template/columns.tsx","page/main/tab.mailing/list.template/filter.tsx","page/main/tab.mailing/list.template/_list.template.tsx","store/action/mailingHistory.ts","page/main/tab.mailing/list.history/popup.mailingList.tsx","page/main/tab.mailing/list.history/columns.tsx","helper/parse.ts","page/main/tab.mailing/list.history/filter.tsx","page/main/tab.mailing/list.history/_list.history.tsx","store/selector.tsx","page/main/tab.mailing/one/_one.tsx","page/main/tab.mailing/_tab.mailing.tsx","page/main/tab.notifications/list/columns.tsx","page/main/tab.notifications/list/filter.tsx","page/main/tab.notifications/list/_list.tsx","page/main/tab.notifications/_tab.notification.tsx","page/main/tab.users/list/columns.tsx","page/main/tab.users/list/_list.tsx","components/svg/keyFilledIcon.tsx","page/main/tab.users/user/_user.tsx","page/main/tab.users/_tab.users.tsx","page/main/_main.tsx","components/svg/lockFilledIcon.tsx","components/svg/invisibleFilledIcon.tsx","components/visibilitySwitcher/_visibilitySwitcher.tsx","page/login/_login.tsx","index/route/protectedRoute.tsx","index/route/util.setPageTitle.ts","util/route-constant/getCurrent.ts","index/route/index.tsx","index/index.tsx","index/helper.setThemeOnce.ts","store/constant/auth.ts","store/reducer/auth.ts","util/combine.ts","store/constant/telematicRecord.ts","store/reducer/telematicRecord.ts"],"names":["ReducerManager","constants","initialState","reducers","state","reduce","s","a","i","length","type","RESET_ALL","newState","set","action","SET","payload","error","getList","GET_LIST","START","abortController","loading","list","FAIL","body","errorDescription","SUCCESS","content","totalElements","filter","query","get","GET","GET_CURRENT","entity","refreshList","REFRESH_LIST","update","UPDATE","remove","this","getInitial","push","page","size","CREATE","REFRESH_FULL_ACTIVE_LIST","TOKEN","THEME_NAME","DEFAULT_THEME_NAME","IS_SIDER_COLLAPSED","GET_CAR_LIST","PUT_CLINT","GET_NEWEST_LIST","READ","GET_ONE","GET_CARD","REMOVE","itemName","defaultValue","localStorage","getItem","setCurrentThemeName","themeName","setItem","getCurrentThemeName","store","getAll","theme","TOGGLE_ACTIVE","module","exports","DefaultTheme","name","primary","primaryLighten1","color","lighten","toString","primaryLighten2","primaryLighten3","primaryLighten4","primaryLighten5","primaryLighten6","primaryLighten7","primaryDarken1","darken","primaryDarken2","primaryDarken3","primaryDarken4","primaryDarken5","primaryDarken6","primaryDarken7","colorOnPrimaryBg","primaryTransparent2","black","white","gray","red","lightGray","darkGray","colorDim","background","blurBackground","bg","bgDark","primaryBackdrop","siderBg","marginXxs","marginXs","marginS","margin","marginL","formItemHeight","formItemBorderColor","formItemColor","formItemPlaceholderColor","formItemBg","borderColor","checkboxCheckedBorder","checkboxHoverBg","checkboxBg","checkboxPlaceholderColor","checkboxIconColor","checkboxCheckedBg","checkboxCheckedHoverBg","checkboxCheckedIconColor","checkboxCheckedPlaceholderColor","appPageSwitchAnimation","siderCollapsedWidth","headerHeight","siderUncollapsedWidth","carImageWidth","carImageHeight","DarkTheme","skeletonBg","skeletonColor","outlineColor","checkboxUncheckedbg","lightBackground","defaultTheme","darkTheme","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","reducerManager","CONSTANTS","Card","getCard","checkList","filterCollapseActiveKeys","CarList","getCarList","answer","cloneDeep","index","findIndex","item","initState","doNotAskOnRemove","newestList","isActive","fullActiveList","refreshFullActiveList","telematicHistory","active","getOne","setTheme","document","setAttribute","value","setCSSVariable","key","style","setProperty","createRootReducer","combineReducers","r","require","allReducers","forEach","replace","default","importAllReducers","ERRORS_RU","props","messages","api","APIMiddleware","headers","Headers","Authorization","onFail","response","err","statusText","includes","toast","setTimeout","composeEnhancer","compose","configureStore","preloadedState","createStore","applyMiddleware","middlewareQuery","APIMiddlewareFakeResponse","enabled","reduxAPIMiddlewareConfig","config","middleware","NotificationLayer","children","className","getListForEveryLocation","ROUTES","pathnameArg","pathname","window","location","routesResult","route","isPartOf","sort","b","PATH","previous","current","history","createBrowserHistory","MemoSvgComponent","React","width","height","viewBox","fill","xmlns","d","routes","LOGIN","APP","ABOUT","SEARCH","SEARCH_CAR","SEARCH_CLIENT","SEARCH_CAR_CAR","SEARCH_CLIENT_CAR","FEEDBACK","FEEDBACK_DIALOG","PARAMS_CONFIG_CREATE","PARAMS_CONFIG_EDIT","PARAMS_CONFIG_VIEW","PARAMS_CONFIG_APPLY","PARAMS_CONFIG_LIST","MAILING","MAILING_HISTORY","MAILING_TEMPLATE_LIST","MAILING_TEMPLATE","MAILING_TEMPLATE_CREATE","NOTIFICATION","USER","USER_LIST","Route","path","app","appAbout","appEvent","appEventEdit","appEventView","appEventCreate","appEventApply","appFeedback","appFeedbackDialog","appMailing","appMailingTemplateList","appMailingTemplate","appMailingTemplateCreate","appMailingHistory","appNotification","appSearch","appSearchCar","appSearchCarCar","appSearchClient","appSearchClientCar","appUserList","appUser","ICON","LABEL","redirect","Breadcrumbs","iRoute","isCurrentPage","to","REDIRECT_PATH","NAME","fakeResponse","responseInit","Response","JSON","stringify","users","collaboratorId","username","firstName","lastName","middleName","password","dealerId","academyId","permissions","hireDate","role","usersFilter","offset","slice","stageActionTypes","url","method","getCurrent","onSuccess","toggleActive","Accept","onStage","fillRule","read","qs","skipNulls","addQueryPrefix","getListByParams","getNewestList","memo","ariaLabel","tabIndex","onClick","svgProps","cx","aria-label","ButtonApp","href","icon","wide","disabled","useHistory","additionalClassNames","create","updateAlsoLocaly","args","getState","paramsConfigState","dispatch","clipRule","MALFUNCTIONS","ignitionStatus","label","short","attentionStatus","mil","criticalFault","powerStatus","airbagFired","coolantLevelLow","generatorMalfunction","breakFluidLowLevel","PERIODS","odometer","onboardPowerVoltage","remainingMileage","fuelConsumption","speedGps","speedCan","fuelLevel","coolantTemp","engineOilPressure","CLIENT_PARAMS","carCount","connectionDate","contractNumber","email","fullNameOfLegalEntity","legalEntityName","phone","supplementaryAgreementNumber","tariffName","CAR_PARAMETER","issueYear","engineModification","fuelSystemType","fuelSystemTypeExternal","fuelTankVolume","gasTankVolume","modelModification","stateNumber","CAR_PARAMS","brand","model","regionId","vehiclePassport","vin","Pupup","title","onClose","isOpen","top","SwitchTransition","CSSTransition","timeout","classNames","unmountOnExit","node","getElementById","padding","marginLeft","LeftField","colon","value1","Boolean","prototype","hasOwnProperty","call","isRange","minValue","maxValue","label1","PopupSaveTemplate","stateRef","setStateRef","useState","setIsOpen","useSelector","undefined","isCar","configType","lastTelemetry","params","carParams","clientParams","carParameter","entries","k","v","apply","NavigateParamsConfig","NotificationList","setIsNotificationVisible","isTab","dsp","useDispatch","openPopup","useRef","applyLoadingId","setApplyLoadingId","viewLoadingId","setViewLoadingId","notificationState","isLoading","currentList","border","iNotif","isRead","cursor","configId","onMouseOver","notificationActions","String","message","navigateToSearch","dateStr","createdAt","DateTime","fromISO","toFormat","Notification","isApply","ParamsConfig","find","p","doAction","actionParamsConfig","paramsConfigActions","isNotificationVisible","unreadList","useMemo","concat","useEffect","addEventListener","onClickOutside","removeEventListener","setInterval","useCallback","target","closest","Header","userState","userActions","isCurrent","buildName","clear","IconInCircle","c","Permission","permissionName","_permissionName","_cache","token","PERMISSIONS","PERMISSION_DEALER_DATA","PERMISSION_DEALER_CLIENTS","PERMISSION_DEALER_CARS","PERMISSION_MANAGEMENT","PERMISSION_MAILINGS","PERMISSION_SERVICE_STATION_SCHEDULE","PERMISSION_CLIENT_FEEDBACK","PERMISSION_PARAMS_CONFIG","ref","settings","el","prefix","postfix","useCSSVariables","animate","timing","draw","duration","start","performance","now","requestAnimationFrame","animation","time","timeFraction","progress","CarouselState","setVariable","translateX","slideAmount","slide","minSwipeVelosity","maxSwipeVelosity","minDeltaPercentSwipe","_translateX","velocity","diff","getAnimationVelocity","tf","swipeOrDoNot","deltaPercentX","dir","isSwipeByVelocity","isSwipeByDeltaPercent","isLastSlide","isFirstSlide","n","velocityAr","destination","velosity","Math","abs","CarouselStateManager","slideDefault","minDeltaSwipe","swipeStart","data","smooth","calculateTranslateX","deltaPercent","x","swipeListener","is","end","swipeEnd","touch","setActiveSlide","transition","useCarousel","PopupLicense","onAccept","maxWidth","SelectApp","optionLabelProp","clearIcon","allowClear","notFoundContent","inputIcon","transform","menuItemSelectedIcon","ThemeSetter","cssVariableState","minWidth","options","themes","onChange","cssVariableActions","useLocation","menu","memoMenu","togglePopupLicense","carousel","setSiderCSSVariable","useSetCSSVariable","siderRef","isSiderCollapsed","menuItem","PAYLOAD","NotFound","SklList","arr","defaultAmount","amountLocal","parseInt","Array","skl","Skelet","load","row","original","AboutTab","dealerState","geolocation","split","lo","la","parseFloat","address","phones","join","mail","marginBottom","overflow","defaultState","center","zoom","geometry","SearchHeader","isCarActiveTab","marginRight","getCollapsedHeight","opacity","skipOpacityTransition","_","event","propertyName","collapseMotion","motionName","onEnterStart","onEnterActive","scrollHeight","onLeaveStart","offsetHeight","onLeaveActive","onEnterEnd","onLeaveEnd","motionDeadline","leavedClassName","delayListItem","amount","ms","uuid","requestFilter","Empty","CollapseHeader","noArrow","carUuid","ChartWrapper","handleChangeGraphController","graphRef","graphNotRender","setGraphNotRender","graph","Chart","labels","datasets","responsive","legend","display","scales","xAxes","ticks","fontColor","yAxes","gridLines","DatePickerApp","minDate","maxDate","additionalClassName","dayPlaceholder","monthPlaceholder","yearPlaceholder","locale","calendarIcon","date","fromJSDate","toUTC","toJSDate","string","TelematicTable","telematicResult","telematicResultFiltered","setTelematicResultFiltered","minDateValue","maxDateValue","currentDateValue","endTime","Date","setDate","getDate","setSeconds","getSeconds","checkDatePeriod","activationDate","sequenceNumber","TelematicsParams","isAirbagFiredHistory","isBreakFluidLowLevelHistory","isCoolantLevelLowHistory","isGeneratorMalfunctionHistory","isLamp1213History","isLamp623History","isLamp624History","ParameterPanelContent","initialValues","telemanticKey","telematicData","setTelematicData","setTelematicResult","graphController","setGraphController","soloData","getInfo","graphControllerFunction","onSubmit","render","handleSubmit","form","input","meta","getFieldState","touched","searchValues","someHistoty","carUUID","reverse","REDUX_API_MIDDLEWARE","TelematicRecordPanelContent","Car","TelematicRecord","minus","month","telematigRecordIsOpen","setTelematigRecordIsOpen","telematicRecordList","text","dateCreated","iTelematicRecord","telematicRecordId","telematicHistoryActions","getTelematicHistory","buff","MainInfoPanelContent","mainInfoList","iMainInfo","TextareaApp","onFocus","onBlur","loadable","autoComplete","textareaProps","focused","setFocused","MailingTemplate","createCRUDBody","stateName","onEnd","configs","MailingTemplatesCRUD","configIds","PopupSendMessage","mailingTemplateState","mailingTemplateActions","placeholder","change","m","Panel","Collapse","SearchCar","useParams","setPopupSendMessageOpenRef","carState","carActions","customers","legalEntity","openMotion","motion","defaultActiveKey","header","y","rx","PerPage","Pagination","pageCount","onPerPageChange","perPage","onPageChange","pageRangeDisplayed","marginPagesDisplayed","selected","nextLabel","fontSize","previousLabel","stroke","CheckboxButtonApp","checked","skeleton","inputProps","CheckAll","PaginationSection","checkAll","paginationProps","setIsModalOpen","typeOfParent","checkAllIsChecked","setCheckAllIsChecked","listElems","elem","checkListElems","useListManager","listManager","ListManager","actions","initial","reset","search","dispatchAction","onSizeChange","onFilterChange","f","parsedSearch","querySelector","scrollTo","behavior","request","REDIRECT","abort","onStart","ceil","isFormFilterEmpty","result","parse","ignoreQueryPrefix","decoder","str","qsDecoder","test","isEmpty","formFilter","forcePage","useBooleanState","setState","setTrue","setFalse","toggle","FocusHOC","WrappedComponent","isFocused","setFocus","unsetFocus","FieldWrapper","filled","styles","isMouseDown","setIsMouseDown","focusArea","onMouseDown","onMouseUp","css","field_wrapper","msnd_animated","field_wrapper__wide","field_wrapper__focused","field_wrapper__filled","msnd_placeholder","StateManager","element","clearable","Icon","cloneElement","ev","Event","bubbles","dispatchEvent","Input","restProps","inputStyle","focusAreaStyles","inputClassName","focusAreaClassNames","msnd_input","msnd_close_icon","InputApp","forwardRef","chameleon","refInput","combinedRef","useMergedRef","setUpdate","LoadingComponent","CloseComponent","data-icon","aria-hidden","required","validateEmail","emailList","currentEmailIndex","currentEmail","mails","formState","setFormState","configTypeCatalogState","configTypeCatalogActions","updateForm","validate","isEqual","emails","isNotifyByEmail","catalogConfigTypeId","newConfigType","values","modifiedValue","responseBody","createParamConfig","isEventTrackerConfig","isNotifyInProfile","isSendPushNotifications","onKeyPress","preventDefault","addMail","old","splice","deleteMail","CarSearchFilter","setPopupSaveTemplateOpenRef","valuesCatalogState","catalogGroupByParameterType","ISSUE_YEAR","paramConfig","initialize","paramConfigId","isSearchTemplate","resetFieldState","getBrand","getModel","headerClass","BRAND","MODEL","buildCarTitle","CarListItem","malfunction","isMalfunction","setCar","src","minibusSrc","alt","ic","SearchCarList","changeCollapseActiveKey","checkBoxesOnAnotherPageList","setCheckBoxesOnAnotherPageList","activeKey","iCar","delayRender","renderDelay","setRenderDelay","customerList","tariff","cars","customerFilter","clientState","ClientListFilter","collapseOverflow","setCollapseOverflow","formatConnectionDate","onCalendarOpen","onCalendarClose","dt","plus","day","ClientListItem","Client","isExpanded","setIsExpanded","setIsLoading","clientActions","pristine","SearchClientList","setModalOpenRef","iClient","isCarPrevious","isPrevious","isClient","locationAnimationKey","exact","component","appear","enter","exit","ClientList","DialogBottomBlock","console","log","innerRef","html","tagName","FeedbackDialog","overflowX","isDialog","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","getRowProps","cells","cell","getCellProps","accessor","Cell","changing","setChanging","catalogConfigType","MailingTemplateFilter","SoloList","useDelayRender","FieldApp","Children","count","checkOneChildern","child","only","isValidElement","RefillableList","fieldArrayProps","fields","setInitial","submit","isCreate","catalogTypeIdOptions","paramConfigActions","mutators","arrayMutators","ApplyParamsConfig","msg","configTypeCatalog","Apply","mode","One","ROLES","PORTAL_ADMIN","DEALER_ADMIN","OPERATOR","CLIENT","CLIENT_DRIVER","NOT_SET","ROLE_DEALER_OPERATOR","MAILING_TYPE","AUTOMATIC","MANUAL","getFullYear","endDate","PopupRemove","formatString","mailingHistoryState","MailingHistoryActions","fform","selector","mailingType","startDate","paramComfigList","sortBy","obj","selectAllParamsConfigs","isParamsConfigLoading","isCheckboxAllParamsConfigsChecked","ParamConfig","onParamConfigCheckboxChange","isParamsConfigChecked","newConfigs","currentTarget","P","newParamsConfigList","isTemplate","RegExp","isHistory","CreateTemplate","Template","History","CONFIG_TYPE","isApplyLoading","setIsApplyLoading","CAR","NotificationFilterList","configTypeList","configTypeActions","iP","status","clipPath","Users","dealerInfo","setDealerInfo","searchByClients","setSearchByClients","searchByCars","setSearchByCars","events","setEvents","newsletters","setNewsletters","feedback","setFeedback","User","smth","appPath","About","Feedback","Mailing","Search","VisibilitySwitcher","isVisible","LoginPage","logging","authState","isPasswordVisible","setIsPasswordVisible","htmlFor","changePasswordVisibility","ProtectedRoute","setPageTitle","getСurrent","RouterManager","RouteList","setPreviousRoute","Login","Main","App","onload","ReactDOM","combine","initS","fn"],"mappings":"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","file":"static/js/main.90222036.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { StageActionTypes } from '@savchenko91/rc-redux-api-mw'\n\n// eslint-disable-next-line import/prefer-default-export\nexport class ReducerManager {\n  constants: {\n    SET?: string\n    RESET_ALL?: string\n    CREATE?: StageActionTypes\n    GET_LIST?: StageActionTypes\n    GET_CURRENT?: StageActionTypes\n    GET?: StageActionTypes\n    UPDATE?: StageActionTypes\n    REMOVE?: StageActionTypes\n    REFRESH_LIST?: StageActionTypes\n  }\n\n  reducers: ((s: any, a: any) => void | any)[]\n\n  state: any\n\n  // eslint-disable-next-line prettier/prettier\n  constructor(\n    constants: ReducerManager['constants'],\n    initialState?: Record<string, unknown>,\n    reducers?: ((...arg: any) => any)[],\n  ) {\n    this.constants = { ...constants, RESET_ALL: 'RESET_ALL' }\n\n    this.reducers = reducers || []\n    this.state = {}\n    this.getInitial(initialState)\n  }\n\n  public reduce = (s = this.state, a: any): any => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    for (let i = 0; i < this.reducers.length; i += 1) {\n      if (a.type === this.constants.RESET_ALL) return this.state\n\n      const newState = this.reducers[i](s, a)\n      if (newState) return newState\n    }\n\n    return s\n  }\n\n  private getInitial(initialState: any) {\n    if (this.constants.SET) {\n      this.reducers.push(this.set as any)\n      this.state = initialState\n    }\n    if (this.constants.GET) {\n      this.reducers.push(this.get as any)\n\n      this.state = {\n        entity: null,\n        abortController: null,\n        ...this.state,\n        ...initialState,\n\n        loading: {\n          ...this.state?.loading,\n          ...initialState?.loading,\n          get: false,\n        },\n      }\n    }\n    if (this.constants.UPDATE) {\n      this.reducers.push(this.update as any)\n\n      this.state = {\n        ...this.state,\n        ...initialState,\n\n        loading: {\n          ...this.state?.loading,\n          ...initialState?.loading,\n          update: false,\n        },\n      }\n    }\n    if (this.constants.REFRESH_LIST) {\n      this.reducers.push(this.refreshList as any)\n\n      this.state = {\n        ...this.state,\n        ...initialState,\n\n        loading: {\n          ...this.state?.loading,\n          ...initialState?.loading,\n          refreshList: false,\n        },\n      }\n    }\n    if (this.constants.GET_LIST) {\n      this.reducers.push(this.getList as any)\n\n      this.state = {\n        list: [],\n\n        totalElements: 0,\n\n        ...this.state,\n        ...initialState,\n\n        filter: {\n          page: 0,\n          size: 10,\n          ...this.state?.filter,\n          ...initialState?.filter,\n        },\n\n        loading: {\n          ...this.state?.loading,\n          ...initialState?.loading,\n          getList: false,\n        },\n      }\n    }\n  }\n\n  private set = (state: any, action: any) => {\n    switch (action.type) {\n      case this.constants?.SET:\n        return {\n          ...state,\n          ...action.payload,\n          error: '',\n        }\n    }\n  }\n\n  private getList = (state: any, action: any) => {\n    switch (action.type) {\n      case this.constants?.GET_LIST?.START:\n        return {\n          ...state,\n          abortController: action.payload.abortController,\n          loading: {\n            ...state.loading,\n            getList: true,\n          },\n\n          error: '',\n\n          list: [],\n        }\n      case this.constants?.GET_LIST?.FAIL:\n        return {\n          ...state,\n\n          loading: {\n            ...state.loading,\n            getList: false,\n          },\n\n          error: action.payload?.body?.errorDescription || '',\n        }\n      case this.constants?.GET_LIST?.SUCCESS:\n        return {\n          ...state,\n\n          loading: {\n            ...state.loading,\n            getList: false,\n          },\n\n          error: '',\n\n          list: action.payload.body?.content,\n\n          totalElements: action.payload.body?.totalElements || 0,\n\n          filter: action.payload?.action?.query || state.filter,\n        }\n    }\n  }\n\n  private get = (state: any, action: any) => {\n    switch (action.type) {\n      case this.constants?.GET?.START:\n      case this.constants?.GET_CURRENT?.START:\n        return {\n          ...state,\n\n          abortController: action.payload.abortController,\n          error: '',\n\n          entity: null,\n\n          loading: {\n            ...state.loading,\n            get: true,\n          },\n        }\n      case this.constants?.GET?.FAIL:\n      case this.constants?.GET_CURRENT?.FAIL:\n        return {\n          ...state,\n\n          loading: {\n            ...state.loading,\n            get: false,\n          },\n\n          error: action.payload?.body?.errorDescription || '',\n        }\n      case this.constants?.GET?.SUCCESS:\n      case this.constants?.GET_CURRENT?.SUCCESS:\n        return {\n          ...state,\n\n          error: '',\n\n          loading: {\n            ...state.loading,\n            get: false,\n          },\n\n          entity: action.payload.body || null,\n        }\n    }\n  }\n\n  private create(state: any, action: any) {\n    switch (action.type) {\n      case this.constants?.CREATE?.START:\n        return {\n          ...state,\n          error: '',\n          loading: {\n            ...state.loading,\n            // create: 'Создание шаблона рассылки',\n          },\n        }\n      case this.constants?.CREATE?.FAIL:\n        return {\n          ...state,\n          error: action.payload?.body?.errorDescription || '',\n          loading: {\n            ...state.loading,\n            // create: false,\n          },\n        }\n      case this.constants?.CREATE?.SUCCESS:\n        return {\n          ...state,\n          error: '',\n          loading: {\n            ...state.loading,\n            // create: false,\n          },\n        }\n    }\n  }\n\n  // ------------------------------------\n  // Refresh list\n  // ------------------------------------\n\n  private refreshList = (state: any, action: any) => {\n    switch (action.type) {\n      case this.constants?.REFRESH_LIST?.START:\n        action.payload.action.query = state.filter\n\n        return {\n          ...state,\n          error: '',\n          loading: {\n            ...state.loading,\n            refreshList: true,\n          },\n        }\n      case this.constants?.REFRESH_LIST?.FAIL:\n        return {\n          ...state,\n          error: action.payload?.body?.errorDescription || '',\n          loading: {\n            ...state.loading,\n            refreshList: false,\n          },\n        }\n      case this.constants?.REFRESH_LIST?.SUCCESS:\n        return {\n          ...state,\n          list: action.payload.body?.content || { ...state.list },\n          error: '',\n          totalElements: action.payload.body?.totalElements || 0,\n          filter: action.payload?.action?.query || state.filter,\n          loading: {\n            ...state.loading,\n            refreshList: false,\n          },\n        }\n    }\n  }\n\n  private remove(state: any, action: any) {\n    switch (action.type) {\n      case this.constants?.UPDATE?.START:\n        return {\n          ...state,\n          error: '',\n          loading: {\n            ...state.loading,\n            // remove: true,\n          },\n        }\n      case this.constants?.UPDATE?.FAIL:\n        return {\n          ...state,\n          error: action.payload?.body?.error || '',\n          loading: {\n            ...state.loading,\n            // remove: false,\n          },\n        }\n      case this.constants?.UPDATE?.SUCCESS:\n        return {\n          ...state,\n          error: '',\n          loading: {\n            ...state.loading,\n            // remove: false,\n          },\n        }\n    }\n  }\n\n  private update = (state: any, action: any) => {\n    switch (action.type) {\n      case this.constants?.UPDATE?.START:\n        return {\n          ...state,\n\n          error: '',\n\n          loading: {\n            ...state.loading,\n            remove: true,\n          },\n        }\n      case this.constants?.UPDATE?.FAIL:\n        return {\n          ...state,\n\n          error: action.payload?.body?.errorDescription || '',\n\n          loading: {\n            ...state.loading,\n\n            remove: false,\n          },\n        }\n      case this.constants?.UPDATE?.SUCCESS:\n        return {\n          ...state,\n\n          error: '',\n\n          loading: {\n            ...state.loading,\n            remove: false,\n          },\n        }\n    }\n  }\n}\n","export const SET = 'PARAMS_CONFIG.SET'\n\nexport const GET_LIST = {\n  START: 'PARAMS_CONFIG | GET_LIST | START',\n  SUCCESS: 'PARAMS_CONFIG | GET_LIST | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | GET_LIST | FAIL',\n}\n\nexport const REFRESH_LIST = {\n  START: 'PARAMS_CONFIG | REFRESH_LIST | START',\n  SUCCESS: 'PARAMS_CONFIG | REFRESH_LIST | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | REFRESH_LIST | FAIL',\n}\n\nexport const REFRESH_FULL_ACTIVE_LIST = {\n  START: 'PARAMS_CONFIG | REFRESH_FULL_ACTIVE_LIST | START',\n  SUCCESS: 'PARAMS_CONFIG | REFRESH_FULL_ACTIVE_LIST | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | REFRESH_FULL_ACTIVE_LIST | FAIL',\n}\n\nexport const GET = {\n  START: 'PARAMS_CONFIG | GET | START',\n  SUCCESS: 'PARAMS_CONFIG | GET | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | GET | FAIL',\n}\n\nexport const CREATE = {\n  START: 'PARAMS_CONFIG | CREATE | START',\n  SUCCESS: 'PARAMS_CONFIG | CREATE | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | CREATE | FAIL',\n}\n\nexport const UPDATE = {\n  START: 'PARAMS_CONFIG | UPDATE | START',\n  SUCCESS: 'PARAMS_CONFIG | UPDATE | SUCCESS',\n  FAIL: 'PARAMS_CONFIG | UPDATE | FAIL',\n}\n","export const TOKEN = 'token'\n\nexport const ROLE = 'role'\n\nexport const REFRESH_TOKEN = 'refresh_token'\n\nexport const REFRESH_TOKEN_EXPIRES = 'refresh_token_expires'\n\nexport const TOKEN_EXPIRES = 'token_expires'\n\nexport const PERMISSION = 'permission'\n\nexport const THEME_NAME = 'themeName'\n\nexport const DEFAULT_THEME_NAME = 'defaultTheme'\n\nexport const IS_SIDER_COLLAPSED = 'isSiderCollapsed'\n","export const GET = {\n  START: 'CLIENT/GET/START',\n  SUCCESS: 'CLIENT/GET/SUCCESS',\n  FAIL: 'CLIENT/GET/FAIL',\n}\n\nexport const GET_LIST = {\n  START: 'CLIENT/GET_LIST/START',\n  SUCCESS: 'CLIENT/GET_LIST/SUCCESS',\n  FAIL: 'CLIENT/GET_LIST/FAIL',\n}\n\nexport const GET_CAR_LIST = {\n  START: 'CLIENT/GET_CAR_LIST/START',\n  SUCCESS: 'CLIENT/GET_CAR_LIST/SUCCESS',\n  FAIL: 'CLIENT/GET_CAR_LIST/FAIL',\n}\n\nexport const PUT_CLINT = {\n  START: 'CLIENT/PUT/START',\n  SUCCESS: 'CLIENT/PUT/SUCCESS',\n  FAIL: 'CLIENT/PUT/FAIL',\n}\n\nexport const SET = 'CLIENT.SET'\n","export const SET = 'NOTIFICATION | SET'\n\nexport const GET_LIST = {\n  START: 'NOTIFICATION | GET_LIST | START',\n  SUCCESS: 'NOTIFICATION | GET_LIST | SUCCESS',\n  FAIL: 'NOTIFICATION | GET_LIST | FAIL',\n}\n\nexport const GET_NEWEST_LIST = {\n  START: 'NOTIFICATION | GET_NEWEST_LIST | START',\n  SUCCESS: 'NOTIFICATION | GET_NEWEST_LIST | SUCCESS',\n  FAIL: 'NOTIFICATION | GET_NEWEST_LIST | FAIL',\n}\n\nexport const READ = {\n  START: 'NOTIFICATION | READ | START',\n  SUCCESS: 'NOTIFICATION | READ | SUCCESS',\n  FAIL: 'NOTIFICATION | READ | FAIL',\n}\n\nexport const REFRESH_LIST = {\n  START: 'NOTIFICATION | REFRESH_LIST | START',\n  SUCCESS: 'NOTIFICATION | REFRESH_LIST | SUCCESS',\n  FAIL: 'NOTIFICATION | REFRESH_LIST | FAIL',\n}\n","export const SET = 'TELEMATIC_HISTORY.SET'\n\nexport const GET_ONE = {\n  START: 'TELEMATIC_HISTORY/GET_ONE/START',\n  SUCCESS: 'TELEMATIC_HISTORY/GET_ONE/SUCCESS',\n  FAIL: 'TELEMATIC_HISTORY/GET_ONE/FAIL',\n}\n","export const SET = 'CAR | SET'\n\nexport const GET = {\n  START: 'CAR | GET | START',\n  SUCCESS: 'CAR | GET | SUCCESS',\n  FAIL: 'CAR | GET | FAIL',\n}\n\nexport const GET_CARD = {\n  START: 'CAR | GET_CARD | START',\n  SUCCESS: 'CAR | GET_CARD | SUCCESS',\n  FAIL: 'CAR | GET_CARD | FAIL',\n}\n\nexport const GET_LIST = {\n  START: 'CAR | GET_LIST | START',\n  SUCCESS: 'CAR | GET_LIST | SUCCESS',\n  FAIL: 'CAR | GET_LIST | FAIL',\n}\n","export const SET = 'MAILING_TEMPLATE | SET'\n\nexport const CREATE = {\n  START: 'MAILING_TEMPLATE | CREATE | START',\n  SUCCESS: 'MAILING_TEMPLATE | CREATE | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | CREATE | FAIL',\n}\n\nexport const GET = {\n  START: 'MAILING_TEMPLATE | GET | START',\n  SUCCESS: 'MAILING_TEMPLATE | GET | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | GET | FAIL',\n}\n\nexport const GET_LIST = {\n  START: 'MAILING_TEMPLATE | GET_LIST | START',\n  SUCCESS: 'MAILING_TEMPLATE | GET_LIST | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | GET_LIST | FAIL',\n}\n\nexport const REFRESH_LIST = {\n  START: 'MAILING_TEMPLATE | REFRESH_LIST | START',\n  SUCCESS: 'MAILING_TEMPLATE | REFRESH_LIST | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | REFRESH_LIST | FAIL',\n}\n\nexport const REMOVE = {\n  START: 'MAILING_TEMPLATE | REMOVE | START',\n  SUCCESS: 'MAILING_TEMPLATE | REMOVE | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | REMOVE | FAIL',\n}\n\nexport const UPDATE = {\n  START: 'MAILING_TEMPLATE | UPDATE | START',\n  SUCCESS: 'MAILING_TEMPLATE | UPDATE | SUCCESS',\n  FAIL: 'MAILING_TEMPLATE | UPDATE | FAIL',\n}\n","export function get<DefaultValue>(itemName: string, defaultValue?: DefaultValue): DefaultValue {\n  const value = localStorage.getItem(itemName) || defaultValue\n\n  return value as DefaultValue\n}\n","import theme from '@/constant/theme'\nimport { THEME_NAME, DEFAULT_THEME_NAME, IS_SIDER_COLLAPSED } from '@/constant/localStorage'\n\nimport * as store from '@/util/localStorage'\n\nexport function getCurrentTheme(): Record<string, string | number> {\n  return theme[store.get(THEME_NAME, DEFAULT_THEME_NAME)]\n}\n\nexport function setCurrentThemeName(themeName: string): void {\n  localStorage.setItem(THEME_NAME, themeName)\n}\n\nexport function getCurrentThemeName(): string {\n  return store.get(THEME_NAME, DEFAULT_THEME_NAME)\n}\n\nexport function getFromLocalStorage(): Record<string, string | number | boolean> {\n  return {\n    [IS_SIDER_COLLAPSED]: store.get(IS_SIDER_COLLAPSED) === 'true',\n  }\n}\n\nexport function getAll(): Record<string, string | number | boolean> {\n  return {\n    ...getCurrentTheme(),\n    ...getFromLocalStorage(),\n  }\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const GET = {\n  START: 'GET_USER/START',\n  SUCCESS: 'GET_USER/SUCCESS',\n  FAIL: 'GET_USER/FAIL',\n}\n\nexport const GET_LIST = {\n  START: 'GET_USER_LIST/START',\n  SUCCESS: 'GET_USER_LIST/SUCCESS',\n  FAIL: 'GET_USER_LIST/FAIL',\n}\n\nexport const TOGGLE_ACTIVE = {\n  START: 'USER/TOGGLE_ACTIVE/START',\n  SUCCESS: 'USER/TOGGLE_ACTIVE/SUCCESS',\n  FAIL: 'USER/TOGGLE_ACTIVE/FAIL',\n}\n\nexport const SET = 'SET_USER'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field_wrapper\":\"fieldWrapper_field_wrapper__3I-yd\",\"field_wrapper__focused\":\"fieldWrapper_field_wrapper__focused__c6m7U\",\"msnd_placeholder\":\"fieldWrapper_msnd_placeholder__2EFnc\",\"field_wrapper__filled\":\"fieldWrapper_field_wrapper__filled__2VdJM\",\"field_wrapper__wide\":\"fieldWrapper_field_wrapper__wide__30Sz5\",\"msnd_animated\":\"fieldWrapper_msnd_animated__3VHtY\"};","export const GET = {\n  START: 'TICKET/GET/START',\n  SUCCESS: 'TICKET/GET/SUCCESS',\n  FAIL: 'TICKET/GET/FAIL',\n}\n\nexport const SET = 'TICKET.SET'\n\nexport const GET_LIST = {\n  START: 'TICKET/GET_LIST/START',\n  SUCCESS: 'TICKET/GET_LIST/SUCCESS',\n  FAIL: 'TICKET/GET_LIST/FAIL',\n}\n","// eslint-disable-next-line import/prefer-default-export\nexport const SET = 'CSS_VARIABLE | SET'\n","export const SET = 'CONFIG_TYPE_CATALOG.SET'\n\nexport const GET_LIST = {\n  START: 'CONFIG_TYPE_CATALOG/GET_LIST/START',\n  SUCCESS: 'CONFIG_TYPE_CATALOG/GET_LIST/SUCCESS',\n  FAIL: 'CONFIG_TYPE_CATALOG/GET_LIST/FAIL',\n}\n\nexport const CREATE = {\n  START: 'CONFIG_TYPE_CATALOG/CREATE/START',\n  SUCCESS: 'CONFIG_TYPE_CATALOG/CREATE/SUCCESS',\n  FAIL: 'CONFIG_TYPE_CATALOG/CREATE/FAIL',\n}\n","export const SET = 'DEALER.SET'\n\nexport const GET = {\n  START: 'DEALER/GET/START',\n  SUCCESS: 'DEALER/GET/SUCCESS',\n  FAIL: 'DEALER/GET/FAIL',\n}\n\nexport const GET_CURRENT = {\n  START: 'GET_CURRENT/GET/START',\n  SUCCESS: 'GET_CURRENT/GET/SUCCESS',\n  FAIL: 'GET_CURRENT/GET/FAIL',\n}\n\nexport const GET_LIST = {\n  START: 'DEALER/GET_LIST/START',\n  SUCCESS: 'DEALER/GET_LIST/SUCCESS',\n  FAIL: 'DEALER/GET_LIST/FAIL',\n}\n","export const GET_LIST = {\n  START: 'MAILING_HISTORY/GET_LIST/START',\n  SUCCESS: 'MAILING_HISTORY/GET_LIST/SUCCESS',\n  FAIL: 'MAILING_HISTORY/GET_LIST/FAIL',\n}\n\nexport const SET = 'MAILING_HISTORY.SET'\n","/* eslint-disable max-classes-per-file */\nimport color from 'color'\n\nclass DefaultTheme {\n  [key: string]: string | number\n\n  constructor() {\n    // Color\n    this.name = 'Светлая тема'\n\n    this.primary = '#50ACD5'\n    this.primaryLighten1 = color(this.primary).lighten(0.1).toString()\n    this.primaryLighten2 = color(this.primary).lighten(0.2).toString()\n    this.primaryLighten3 = color(this.primary).lighten(0.3).toString()\n    this.primaryLighten4 = color(this.primary).lighten(0.4).toString()\n    this.primaryLighten5 = color(this.primary).lighten(0.5).toString()\n    this.primaryLighten6 = color(this.primary).lighten(0.6).toString()\n    this.primaryLighten7 = color(this.primary).lighten(0.7).toString()\n    this.primaryDarken1 = color(this.primary).darken(0.1).toString()\n    this.primaryDarken2 = color(this.primary).darken(0.2).toString()\n    this.primaryDarken3 = color(this.primary).darken(0.3).toString()\n    this.primaryDarken4 = color(this.primary).darken(0.4).toString()\n    this.primaryDarken5 = color(this.primary).darken(0.5).toString()\n    this.primaryDarken6 = color(this.primary).darken(0.6).toString()\n    this.primaryDarken7 = color(this.primary).darken(0.7).toString()\n\n    this.colorOnPrimaryBg = 'white'\n    this.primaryTransparent2 = '#50add533'\n    this.black = '#1B2731'\n    this.white = '#FFFFFF'\n    this.gray = '#CFD2D6'\n    this.red = '#ff5c5c'\n    this.lightGray = '#EEEDEE'\n    this.darkGray = '#868E98'\n\n    this.color = '#1B2731'\n    this.colorDim = this.darkGray\n\n    // Backgrounds\n    this.background = 'white'\n    this.blurBackground = '#ffffffd3'\n    this.bg = 'rgb(245 245 245)'\n    this.bgDark = '#101115'\n    this.primaryBackdrop = '#50acd5b3'\n\n    // Sider\n\n    this.siderBg = '#101115'\n\n    // margin\n\n    this.marginXxs = 0.5\n    this.marginXs = 1\n    this.marginS = 2\n    this.margin = 4\n    this.marginL = 8\n\n    // Form item\n    this.formItemHeight = '4rem'\n    this.formItemBorderColor = '#CFD2D6'\n    this.formItemColor = '000'\n    this.formItemPlaceholderColor = 'gray'\n    this.formItemBg = 'white'\n\n    // todo remove\n    this.borderColor = '#CFD2D6'\n\n    // todo unused\n    this.checkboxCheckedBorder = this.primary\n    this.checkboxHoverBg = this.primaryLighten6\n    this.checkboxBg = 'transparent'\n    this.checkboxPlaceholderColor = this.primaryDarken3\n    this.checkboxIconColor = this.primary\n\n    this.checkboxCheckedBg = this.primaryLighten1\n    this.checkboxCheckedHoverBg = this.primaryLighten2\n    this.checkboxCheckedIconColor = this.white\n    this.checkboxCheckedPlaceholderColor = this.white\n    // Animation\n    this.appPageSwitchAnimation = 100\n\n    this.siderCollapsedWidth = 8\n    this.headerHeight = 8\n    this.siderUncollapsedWidth = 24\n\n    // Other\n    this.carImageWidth = 27\n    this.carImageHeight = 27 / 1.6\n  }\n}\n\nclass DarkTheme extends DefaultTheme {\n  constructor() {\n    super()\n\n    this.name = 'Темная тема'\n    this.skeletonBg = '#243848'\n    this.skeletonColor = '#3b5062'\n    this.outlineColor = 'yellow'\n    // this.primary= 'green'\n    this.blurBackground = '#1a2731d9'\n\n    this.checkboxUncheckedbg = '#2f4250'\n    this.lightBackground = '#2f4250'\n\n    // Form item\n    this.formItemColor = 'lightgray'\n    this.formItemPlaceholderColor = '#34647c'\n    this.formItemBorderColor = '#34647c'\n    this.formItemBg = this.black\n\n    this.checkboxCheckedBg = this.primaryDarken3\n    this.checkboxHoverBg = '#2f4a5f'\n    this.checkboxPlaceholderColor = this.formItemPlaceholderColor\n\n    // todo remove\n    this.borderColor = '#34647c'\n\n    this.siderBg = color('#2f4250').darken(0.5).toString()\n\n    this.color = '#dedede'\n\n    this.background = this.black\n  }\n}\n\nconst theme = {\n  defaultTheme: new DefaultTheme(),\n  darkTheme: new DarkTheme(),\n}\n\nexport default theme\n","export const GET = {\n  START: 'GET_BMI/GET/START',\n  SUCCESS: 'GET_BMI/GET/SUCCESS',\n  FAIL: 'GET_BMI/GET/FAIL',\n}\n\nexport const SET = 'SET_BMI'\n","module.exports = __webpack_public_path__ + \"static/media/minibus.3de15e25.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"msnd_input\":\"input_msnd_input__1kd_4\",\"msnd_close_icon\":\"input_msnd_close_icon__29ovJ\"};","var map = {\n\t\"./auth.ts\": 265,\n\t\"./car.ts\": 174,\n\t\"./client.ts\": 175,\n\t\"./configTypeCatalog.ts\": 176,\n\t\"./cssVariable.ts\": 177,\n\t\"./dealer.ts\": 178,\n\t\"./mailingHistory.ts\": 179,\n\t\"./mailingTemplate.ts\": 180,\n\t\"./notification.ts\": 181,\n\t\"./paramsConfig.ts\": 182,\n\t\"./telematicHistory.ts\": 183,\n\t\"./telematicRecord.ts\": 267,\n\t\"./ticket.ts\": 184,\n\t\"./user.ts\": 185,\n\t\"./valuesCatalog.ts\": 186\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 173;","import { CarCardModel } from '@/type/model'\nimport { CarState } from '@/type/state'\nimport { Errorable } from '@/type/type'\nimport { ReducerManager } from '@/util/reducerManager'\nimport { StageAction } from '@savchenko91/rc-redux-api-mw'\n\nimport * as CONSTANTS from '../constant/car'\n\nconst reducerManager = new ReducerManager(\n  CONSTANTS,\n  {\n    Card: null,\n    loading: {\n      getCard: false,\n    },\n    checkList: [],\n    filterCollapseActiveKeys: ['main'],\n  },\n  [\n    function getCard(state: CarState, action: StageAction<CarCardModel & Errorable>): CarState | void {\n      switch (action.type) {\n        case CONSTANTS.GET_CARD?.START:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getCard: true,\n            },\n\n            error: '',\n          }\n        case CONSTANTS.GET_CARD?.FAIL:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getCard: false,\n            },\n\n            error: action.payload?.body?.error || '',\n          }\n        case CONSTANTS.GET_CARD?.SUCCESS:\n          return {\n            ...state,\n            loading: {\n              ...state.loading,\n              getCard: false,\n            },\n\n            error: '',\n\n            Card: action.payload.body || null,\n          }\n      }\n    },\n  ],\n)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\nimport { ClientModel } from '@/type/model'\nimport { get, cloneDeep } from 'lodash'\nimport * as CONSTANTS from '../constant/client'\n\nconst reducerManager = new ReducerManager(\n  CONSTANTS,\n  {\n    checkList: [],\n    filterCollapseActiveKeys: ['main'],\n    CarList: {},\n  },\n  [\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, func-names\n    function getCarList(state: any, action: any) {\n      switch (action.type) {\n        case CONSTANTS.GET_CAR_LIST?.START:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getCarList: true,\n            },\n\n            error: '',\n          }\n        case CONSTANTS.GET_CAR_LIST?.FAIL:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getCarList: false,\n            },\n\n            error: action.payload?.body?.error || '',\n          }\n        case CONSTANTS.GET_CAR_LIST?.SUCCESS:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getCarList: false,\n            },\n\n            error: '',\n\n            CarList: { [action.payload.action.payload]: action.payload.body?.content, ...state.CarList },\n          }\n        case CONSTANTS.PUT_CLINT?.SUCCESS:\n          const answer: ClientModel = get(action, 'payload.body', {})\n          const list = cloneDeep(state.list)\n          const index = list.findIndex((item: ClientModel) => item.id === answer.id)\n          if (index !== -1) list[index] = answer\n          return {\n            ...state,\n            list,\n          }\n      }\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ] as any,\n)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/configTypeCatalog'\n\n//\n\nconst reducerManager = new ReducerManager(CONSTANTS)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\nimport { getAll } from '@/util/cssVariables'\n\nimport * as CONSTANTS from '../constant/cssVariable'\n\nexport const initState = getAll()\n\nconst reducerManager = new ReducerManager(CONSTANTS, initState)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/dealer'\n\nconst reducerManager = new ReducerManager(CONSTANTS)\n\nexport default reducerManager.reduce\n","import { MailingHistoryState } from '@/type/state.d'\n\nimport { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/mailingHistory'\n\nconst initialState: Partial<MailingHistoryState> = {\n  doNotAskOnRemove: false,\n}\n\nconst reducerManager = new ReducerManager(CONSTANTS, initialState)\n\nexport default reducerManager.reduce\n","import { MailingTemplateState } from '@/type/state.d'\n\nimport { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/mailingTemplate'\n\nconst initialState: Partial<MailingTemplateState> = {\n  doNotAskOnRemove: false,\n}\n\nconst reducerManager = new ReducerManager(CONSTANTS, initialState)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/notification'\n\nconst reducerManager = new ReducerManager(\n  CONSTANTS,\n  {\n    newestList: [],\n    loading: {\n      newestList: false,\n    },\n  },\n  [\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, func-names\n    function getCarList(state: any, action: any) {\n      switch (action.type) {\n        case CONSTANTS.GET_NEWEST_LIST?.START:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              newestList: true,\n            },\n\n            error: '',\n          }\n        case CONSTANTS.GET_NEWEST_LIST?.FAIL:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              newestList: false,\n            },\n\n            error: action.payload?.body?.error || '',\n          }\n        case CONSTANTS.GET_NEWEST_LIST?.SUCCESS:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              newestList: false,\n            },\n\n            error: '',\n\n            newestList: action.payload?.body.content,\n          }\n      }\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ] as any,\n)\n\nexport default reducerManager.reduce\n","// import { MailingHistoryState } from '@/type/state.d'\n\nimport { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/paramsConfig'\n\nconst reducerManager = new ReducerManager(\n  CONSTANTS,\n  {\n    filter: {\n      isActive: true,\n    },\n    fullActiveList: [],\n    loading: {\n      refreshFullActiveList: false,\n    },\n  },\n  [\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function getFullActiveList(state: any, action: any) {\n      switch (action.type) {\n        case CONSTANTS.REFRESH_FULL_ACTIVE_LIST?.START:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              refreshFullActiveList: true,\n            },\n\n            error: '',\n          }\n        case CONSTANTS.REFRESH_FULL_ACTIVE_LIST?.FAIL:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              refreshFullActiveList: false,\n            },\n\n            error: action.payload?.body?.error || '',\n          }\n        case CONSTANTS.REFRESH_FULL_ACTIVE_LIST?.SUCCESS:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              refreshFullActiveList: false,\n            },\n\n            error: '',\n\n            fullActiveList: action.payload.body?.content,\n          }\n      }\n    },\n  ],\n)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/telematicHistory'\n\nconst reducerManager = new ReducerManager(\n  CONSTANTS,\n  {\n    telematicHistory: {},\n    active: null,\n    loading: {\n      getOne: false,\n    },\n  },\n  [\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, func-names\n    function getOne(state: any, action: any) {\n      switch (action.type) {\n        case CONSTANTS.GET_ONE?.START:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getOne: true,\n            },\n\n            error: '',\n          }\n        case CONSTANTS.GET_ONE?.FAIL:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getOne: false,\n            },\n\n            error: action.payload?.body?.error || '',\n          }\n        case CONSTANTS.GET_ONE?.SUCCESS:\n          return {\n            ...state,\n\n            loading: {\n              ...state.loading,\n              getOne: false,\n            },\n\n            error: '',\n\n            telematicHistory: { ...state.telematicHistory, ...action.payload.body },\n          }\n      }\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ] as any,\n)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/ticket'\n\n//\n\nconst reducerManager = new ReducerManager(CONSTANTS)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/user'\n\nconst reducerManager = new ReducerManager(CONSTANTS)\n\nexport default reducerManager.reduce\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/valuesCatalog'\n\nconst reducerManager = new ReducerManager(CONSTANTS, {})\n//\nexport default reducerManager.reduce\n","import { AnyAction } from 'redux'\n\nimport * as CONSTANTS from '@/store/constant/cssVariable'\n\nimport { CSSVariableState } from '@/type/state'\n\nimport { getAll, setCurrentThemeName } from '@/util/cssVariables'\n\nexport const set = (payload: Partial<CSSVariableState>): AnyAction => {\n  const keys = Object.keys(payload)\n\n  for (let i = 0; i < keys.length; i += 1) {\n    const value = payload[keys[i] as keyof CSSVariableState]\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    value && setCSSVariable(keys[i], value.toString())\n  }\n\n  return {\n    type: CONSTANTS.SET,\n    payload,\n  }\n}\n\nexport const setTheme = (themeName: string): AnyAction => {\n  setCurrentThemeName(themeName)\n\n  const theme = getAll()\n\n  const keys = Object.keys(theme)\n\n  document.body.setAttribute('style', '')\n\n  for (let i = 0; i < keys.length; i += 1) {\n    const value = theme[keys[i] as keyof CSSVariableState]\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    value && setCSSVariable(keys[i], value.toString())\n  }\n\n  return {\n    type: CONSTANTS.SET,\n    payload: theme,\n  }\n}\n\nconst setCSSVariable = (key: string, value: number | string) => {\n  document.body.style.setProperty(`--${key}`, value.toString())\n}\n","import { Reducer, combineReducers } from 'redux'\n\n// import produce from 'immer'\n\n// import { combineReducers } from 'redux-immer'\n\nimport { RootState } from '@/type/state'\n\nfunction importAllReducers(): Record<keyof RootState, Reducer> {\n  const r = require.context('@/store/reducer', true, /\\.ts$/)\n\n  const allReducers: Record<string, Reducer> = {}\n\n  r.keys().forEach((key) => {\n    allReducers[`${key.replace('.ts', '').replace('./', '')}State`] = r(key).default\n  })\n\n  return allReducers\n}\n\nconst createRootReducer = (): Reducer<RootState> => combineReducers(importAllReducers())\n\nexport default createRootReducer\n","import { toast, ToastOptions } from 'react-toastify'\n\nimport APIMiddleware from '@savchenko91/rc-redux-api-mw'\n\nimport { TOKEN } from '@/constant/localStorage'\n\nconst ERRORS_RU = {\n  'Internal Server Error': 'Ошибка сервера: обратитесь к администрации портала, если ошибка не исчезнет',\n  'Not Found': 'Ошибка: Обратитесь к администрации портала',\n  'TypeError: Failed to fetch': 'Ошибка: Не удалось сделать запрос. Проверьте интернет соединение',\n}\n\nconst props: ToastOptions = {\n  type: 'error',\n}\n\nlet messages: string[] = []\n\nconst api = new APIMiddleware({\n  headers: () => {\n    return new Headers({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${localStorage.getItem(TOKEN)}`,\n    })\n  },\n  async onFail({ body, response, error }) {\n    const err =\n      (body as Record<'errorDescription' | 'error', string>)?.errorDescription ||\n      (body as Record<'errorDescription' | 'error', string>)?.error ||\n      ERRORS_RU[(error || response?.statusText) as keyof typeof ERRORS_RU] ||\n      error ||\n      response?.statusText\n\n    if (!err) return\n\n    if (!messages.includes(err)) {\n      toast(err, props)\n    }\n\n    messages.push(err)\n\n    setTimeout(() => {\n      messages = []\n    }, 1000)\n  },\n})\n\nexport default api\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { applyMiddleware, compose, createStore, Store } from 'redux'\nimport middlewareQuery from '@savchenko91/rc-redux-api-mw-query'\nimport APIMiddlewareFakeResponse from '@savchenko91/rc-redux-api-mw-fake-response'\n\nimport { RootState } from '@/type/state'\n\nimport createRootReducer from './allReducers'\n\nimport api from './apiMiddleware'\n\nconst isDevelopment = process.env.NODE_ENV === 'development'\n\nconst composeEnhancer = (isDevelopment && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nfunction configureStore(preloadedState?: RootState): Store {\n  const store = createStore(\n    createRootReducer(),\n    preloadedState,\n    composeEnhancer(\n      applyMiddleware(\n        middlewareQuery(),\n        APIMiddlewareFakeResponse({\n          enabled: true,\n          reduxAPIMiddlewareConfig: api.config,\n        }),\n        api.middleware(),\n      ),\n    ),\n  )\n\n  return store\n}\n\nexport default configureStore()\n","import React, { FC } from 'react'\n\nimport { ToastContainer } from 'react-toastify'\n\nconst NotificationLayer: FC = ({ children }): JSX.Element => {\n  return (\n    <>\n      {children}\n      <div className=\"NotificationLayer fs20\">\n        <ToastContainer />\n      </div>\n    </>\n  )\n}\n\nexport default NotificationLayer\n","import { Route } from './route'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getListForEveryLocation(ROUTES: any, pathnameArg?: string): Route[] {\n  const pathname = pathnameArg || window.location.pathname\n\n  const routesResult: Route[] = []\n\n  const keys = Object.keys(ROUTES)\n\n  for (let i = 0; i < keys.length; i += 1) {\n    const route = ROUTES[keys[i]]\n\n    if (route.isPartOf(pathname)) routesResult.push(route)\n  }\n\n  routesResult.sort((a, b) => (a.PATH.length > b.PATH.length ? 1 : -1))\n\n  return routesResult\n}\n","import { Routes } from './route'\n\nlet previous = ''\nlet current = ''\n\nconst setPreviousRoute = (routes: Routes): void => {\n  const { pathname } = window.location\n\n  const keys = Object.keys(routes)\n\n  if (current === pathname) return\n\n  previous = current\n  current = pathname\n\n  for (let i = 0; i < keys.length; i += 1) {\n    const iRoute = routes[keys[i]]\n\n    iRoute.isPrevious = new RegExp(`${iRoute.PATH}$`).test(previous)\n  }\n}\n\nexport { setPreviousRoute }\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory()\n\nexport default history\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 4 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M2 .788c-1.07 0-1.939.87-1.939 1.94 0 1.07.87 1.939 1.939 1.939 1.07 0 1.939-.87 1.939-1.939 0-1.07-.87-1.94-1.939-1.94zM2 7.576c-.803 0-1.455.65-1.455 1.454v8.728a1.455 1.455 0 002.91 0V9.03c0-.803-.652-1.454-1.455-1.454z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 15 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M7.934 7.386a.844.844 0 01-.443.124.844.844 0 01-.443-.124L0 3.103v5.693A2.21 2.21 0 002.214 11h10.572A2.21 2.21 0 0015 8.796V3.103L7.934 7.386z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M12.786 0H2.214C1.169 0 .284.74.07 1.728L7.509 6.24l7.42-4.512A2.198 2.198 0 0012.786 0z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M12.895 9.218c-.864 0-1.71-.135-2.511-.4-.392-.134-.836-.03-1.093.232l-1.59 1.2c-1.823-.973-2.99-2.14-3.95-3.95l1.167-1.552c.294-.294.4-.724.274-1.127a8 8 0 01-.403-2.516C4.79.495 4.294 0 3.684 0H1.105C.495 0 0 .496 0 1.105 0 8.215 5.785 14 12.895 14c.61 0 1.105-.496 1.105-1.105v-2.572c0-.61-.496-1.105-1.105-1.105z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M5.734 11.474c1.18 0 2.27-.36 3.182-.967l3.294 3.294a.685.685 0 00.955 0l.641-.64a.685.685 0 000-.956l-3.305-3.283c.607-.91.967-2.001.967-3.182A5.743 5.743 0 005.734.006 5.743 5.743 0 000 5.74a5.736 5.736 0 005.734 5.734zm0-9.22A3.488 3.488 0 019.219 5.74a3.488 3.488 0 01-3.485 3.485A3.488 3.488 0 012.249 5.74a3.488 3.488 0 013.485-3.485z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M7.494.361c.16-.481.853-.481 1.012 0l1.524 4.608a.531.531 0 00.506.36h4.931c.515 0 .73.648.313.946l-3.99 2.847a.517.517 0 00-.193.584l1.524 4.608c.159.481-.402.881-.819.584l-3.99-2.848a.54.54 0 00-.625 0l-3.99 2.848c-.416.297-.977-.103-.818-.584l1.524-4.608a.517.517 0 00-.193-.584L.22 6.275c-.417-.298-.202-.946.313-.946h4.931c.23 0 .435-.145.506-.36L7.494.36z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 11 14\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path d=\"M5.5 6.847c1.608 0 2.912-1.533 2.912-3.424C8.412 1.533 7.984 0 5.5 0 3.017 0 2.588 1.533 2.588 3.423c0 1.891 1.304 3.424 2.912 3.424zM0 12.074c0-.032 0-.115 0 0zM11 12.164c0-.219 0-.031 0 0zM10.993 11.936c-.054-3.294-.498-3.532-3.899-4.126 0 0-.478.59-1.594.59s-1.594-.59-1.594-.59C.542 8.397.07 8.622.009 11.829c-.005.262-.008.275-.008.245v.346S.811 14 5.5 14c4.69 0 5.499-1.58 5.499-1.58v-.256c0 .019-.003-.017-.006-.228z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React from 'react'\n\nimport Route from '@savchenko91/rc-route-constant'\n\nimport InfoIcon from '@/components/svg/infoFilledIcon'\nimport MailIcon from '@/components/svg/mailFilledIcon'\nimport PhoneIcon from '@/components/svg/phoneFilledIcon'\nimport SearchIcon from '@/components/svg/searchFilledIcon'\nimport StarIcon from '@/components/svg/starFilledIcon'\nimport UserIcon from '@/components/svg/userFilledIcon'\n\nexport interface Payload {\n  ICON: React.ReactElement\n  LABEL: string\n}\n\nclass Routes {\n  // public readonly ROOT: Route\n\n  public readonly LOGIN: Route\n\n  public readonly APP: Route\n\n  public readonly ABOUT: Route<Payload>\n\n  public readonly SEARCH: Route<Payload>\n\n  public readonly SEARCH_CAR: Route\n\n  public readonly SEARCH_CLIENT: Route\n\n  public readonly SEARCH_CAR_CAR: Route\n\n  public readonly SEARCH_CLIENT_CAR: Route\n\n  public readonly FEEDBACK: Route<Payload>\n\n  public readonly FEEDBACK_DIALOG: Route\n\n  public readonly PARAMS_CONFIG_CREATE: Route\n\n  public readonly PARAMS_CONFIG_EDIT: Route\n\n  public readonly PARAMS_CONFIG_VIEW: Route\n\n  public readonly PARAMS_CONFIG_APPLY: Route\n\n  public readonly PARAMS_CONFIG_LIST: Route<Payload>\n\n  public readonly MAILING: Route<Payload>\n\n  public readonly MAILING_HISTORY: Route\n\n  public readonly MAILING_TEMPLATE_LIST: Route\n\n  public readonly MAILING_TEMPLATE: Route\n\n  public readonly MAILING_TEMPLATE_CREATE: Route\n\n  public readonly NOTIFICATION: Route\n\n  public readonly USER: Route\n\n  public readonly USER_LIST: Route<Payload>\n\n  constructor() {\n    // Root\n\n    // this.ROOT = new Route('root', '/')\n\n    // Login\n\n    this.LOGIN = /*                              */ new Route({ name: 'Логин', path: '/my-pet-project/login' })\n\n    // App\n\n    const app = '/my-pet-project/'\n\n    this.APP = /*                                */ new Route({ name: 'Дилер', path: app })\n\n    const appAbout = `${app}about`\n\n    const appEvent = `${app}params-config`\n    const appEventEdit = `${appEvent}/:id/edit`\n    const appEventView = `${appEvent}/:id/view`\n    const appEventCreate = `${appEvent}/create`\n    const appEventApply = `${appEvent}/:id/apply`\n\n    const appFeedback = `${app}feedback`\n    const appFeedbackDialog = `${app}feedback/dialog`\n\n    const appMailing = `${app}mailing`\n    const appMailingTemplateList = `${appMailing}/templates`\n    const appMailingTemplate = `${appMailingTemplateList}/:id/edit`\n    const appMailingTemplateCreate = `${appMailingTemplateList}/create`\n    const appMailingHistory = `${appMailing}/history`\n\n    const appNotification = `${app}notification`\n\n    const appSearch = `${app}search`\n    const appSearchCar = `${appSearch}/cars`\n    const appSearchCarCar = `${appSearchCar}/:uuid`\n    const appSearchClient = `${appSearch}/clients`\n    const appSearchClientCar = `${appSearchClient}/:uuid`\n\n    const appUserList = `${app}users`\n    const appUser = `${appUserList}/:id`\n\n    // About\n\n    this.ABOUT = /*                              */ new Route({\n      name: 'О дилере',\n      path: appAbout,\n      payload: {\n        ICON: <InfoIcon />,\n        LABEL: 'about',\n      },\n    })\n\n    // Search\n\n    this.SEARCH_CAR = /*                         */ new Route({ name: 'Автомобили', path: appSearchCar })\n\n    this.SEARCH_CAR_CAR = /*                     */ new Route({ name: 'Карточка ТС', path: appSearchCarCar })\n\n    this.SEARCH_CLIENT = /*                      */ new Route({ name: 'Клиенты', path: appSearchClient })\n\n    this.SEARCH_CLIENT_CAR = /*                  */ new Route({ name: 'Карточка ТС', path: appSearchClientCar })\n\n    this.SEARCH = /*                             */ new Route({\n      name: 'Поиск',\n      path: appSearch,\n      redirect: this.SEARCH_CLIENT,\n      payload: {\n        ICON: <SearchIcon />,\n        LABEL: 'search',\n      },\n    })\n\n    // Feedback\n\n    this.FEEDBACK = /*                           */ new Route({\n      name: 'Обратная связь',\n      path: appFeedback,\n      payload: {\n        ICON: <PhoneIcon />,\n        LABEL: 'feedback',\n      },\n    })\n\n    this.FEEDBACK_DIALOG = /*                    */ new Route({ name: 'Чат', path: appFeedbackDialog })\n\n    // Events\n\n    this.PARAMS_CONFIG_LIST = /*                 */ new Route({\n      name: 'События',\n      path: appEvent,\n      payload: {\n        ICON: <StarIcon />,\n        LABEL: 'params-config-list',\n      },\n    })\n\n    this.PARAMS_CONFIG_VIEW = /*                 */ new Route({ name: 'Редактирование', path: appEventView })\n\n    this.PARAMS_CONFIG_EDIT = /*                 */ new Route({ name: 'Редактирование', path: appEventEdit })\n\n    this.PARAMS_CONFIG_CREATE = /*               */ new Route({ name: 'Создание', path: appEventCreate })\n\n    this.PARAMS_CONFIG_APPLY = /*                */ new Route({ name: 'Применить', path: appEventApply })\n\n    // Mailing\n\n    this.MAILING_TEMPLATE_LIST = /*              */ new Route({ name: 'Шаблоны', path: appMailingTemplateList })\n\n    this.MAILING_TEMPLATE_CREATE = /*            */ new Route({ name: 'Создание', path: appMailingTemplateCreate })\n\n    this.MAILING_TEMPLATE = /*                   */ new Route({ name: 'Редактирование', path: appMailingTemplate })\n\n    this.MAILING_HISTORY = /*                    */ new Route({ name: 'История рассылок', path: appMailingHistory })\n\n    this.MAILING = /*                            */ new Route({\n      name: 'Рассылка',\n      path: appMailing,\n      redirect: this.MAILING_TEMPLATE_LIST,\n      payload: {\n        ICON: <MailIcon />,\n        LABEL: 'mailing',\n      },\n    })\n\n    // Notification\n\n    this.NOTIFICATION = /*                       */ new Route({ name: 'Уведомления', path: appNotification })\n\n    // User\n\n    this.USER_LIST = /*                          */ new Route({\n      name: 'Пользователи',\n      path: appUserList,\n      payload: {\n        ICON: <UserIcon />,\n        LABEL: 'user-list',\n      },\n    })\n\n    this.USER = /*                               */ new Route({ name: 'Доступы', path: appUser })\n  }\n}\n\n// ------------------------------------\n// Используй default экспорт если необходимы автоподсказки\n// ------------------------------------\n\nexport { Routes }\n\nconst routes = new Routes()\n\nexport default routes\n","import './breadcrumbs.less'\n\nimport React, { FC } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Route from '@/util/route-constant'\n\ntype BreadcrumbsProps = {\n  routes: Route[]\n}\n\nconst Breadcrumbs: FC<BreadcrumbsProps> = ({ routes }): JSX.Element => {\n  return (\n    <ol className=\"Breadcrumbs\">\n      {routes.map((iRoute, i) => {\n        const isCurrentPage = i === routes.length - 1\n\n        return (\n          <Link key={iRoute.PATH} to={isCurrentPage ? window.location.pathname : iRoute.REDIRECT_PATH}>\n            <li>{iRoute.NAME}</li>\n          </Link>\n        )\n      })}\n    </ol>\n  )\n}\n\nexport default Breadcrumbs\n","function fakeResponse(body: Record<string, unknown>): Response {\n  const headers = {\n    'Content-Type': 'application/json',\n  }\n\n  const responseInit = {\n    headers,\n  }\n\n  return new Response(JSON.stringify(body), responseInit)\n}\n\nexport default fakeResponse\n","import { PageableRow } from '@/type/type'\n\nconst users = {\n  content: [\n    {\n      collaboratorId: '6543470533889176581',\n      username: 'belyaev',\n      firstName: 'Роман',\n      lastName: 'Беляев',\n      middleName: 'Сергеевич',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2018-04-12T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6899250713136486758',\n      username: 'Prokopenko',\n      firstName: 'Алексей',\n      lastName: 'Прокопенко',\n      middleName: 'Анатольевич',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2020-11-26T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6743485401271766320',\n      username: 'baranov',\n      firstName: 'Александр',\n      lastName: 'Баранов',\n      middleName: 'Вячеславович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2019-10-03T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6650393237999351130',\n      username: 'tur',\n      firstName: 'Игорь',\n      lastName: 'Тур',\n      middleName: 'Олегович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2019-01-25T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6432122678870086899',\n      username: 'amanov',\n      firstName: 'Сергей',\n      lastName: 'Аманов',\n      middleName: 'Борисович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2013-11-05T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6471172250555199022',\n      username: 'morozovsd',\n      firstName: 'Станислав',\n      lastName: 'Морозов',\n      middleName: 'Дмитриевич',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2015-04-06T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6935289748736911682',\n      username: 'tretyakovv',\n      firstName: 'Виталий',\n      lastName: 'Третьяков',\n      middleName: 'Александрович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2021-03-03T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6002834611861087413',\n      username: 'miheev1',\n      firstName: 'Игорь',\n      lastName: 'Михеев',\n      middleName: 'Викторович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2009-07-14T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6603266860128472046',\n      username: 'resnyanskiy',\n      firstName: 'Максим',\n      lastName: 'Реснянский',\n      middleName: 'Владимирович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2018-09-21T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6603551978009951917',\n      username: 'mityukov',\n      firstName: 'Сергей',\n      lastName: 'Митюков',\n      middleName: 'Викторович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060240461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2018-09-21T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n    {\n      collaboratorId: '6603551978009951517',\n      username: 'fdgdfg',\n      firstName: 'Андрей',\n      lastName: 'Пупкин',\n      middleName: 'Викторович',\n      password: null,\n      dealerId: 66,\n      academyId: '3325543060222461249',\n      permissions: [\n        'PERMISSION_DEALER_DATA',\n        'PERMISSION_DEALER_CLIENTS',\n        'PERMISSION_DEALER_CARS',\n        'PERMISSION_MAILINGS',\n        'PERMISSION_PARAMS_CONFIG',\n      ],\n      hireDate: '2018-09-21T00:00:00',\n      role: 'ROLE_DEALER_OPERATOR',\n      enabled: true,\n    },\n  ],\n  totalElements: 14,\n}\n\nexport function usersFilter(query: PageableRow): typeof users {\n  const offset = query.page * query.size\n\n  const content = users.content.slice(offset, offset + query.size)\n\n  return {\n    content,\n    totalElements: users.content.length,\n  }\n}\n\nexport default users\n","import { REDUX_API_MIDDLEWARE as type, APIAction, OnFail, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport fakeResponse from '@/fakeResponse'\nimport { usersFilter } from '@/fakeResponse/user'\nimport { Content, Id, UserModel } from '@/type/model.d'\nimport { Action, PageableRow } from '@/type/type'\nimport { OnStage } from '@/type/transfer'\n\nimport * as CONSTANTS from '../constant/user'\n\nexport const get = (id: string): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/users/${id}`,\n  method: 'get',\n})\n\nexport const getCurrent = (onSuccess?: OnSuccess): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/users/current`,\n  method: 'get',\n  onSuccess,\n})\n\nexport const toggleActive = (\n  id: Id,\n  action: 'block' | 'enable',\n  onSuccess?: OnSuccess,\n  onFail?: OnFail,\n): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.TOGGLE_ACTIVE,\n  url: `/api/users/block/${action}/${id}`,\n  method: 'PATCH',\n  onSuccess,\n  onFail,\n  headers: {\n    Accept: '*/*',\n  },\n})\n\nexport const getList = (\n  query: PageableRow,\n  onStage?: OnStage<Content<UserModel[]>>,\n): APIAction<Content<UserModel[]>> => {\n  return {\n    fakeResponse: fakeResponse(usersFilter(query)),\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/users`,\n    method: 'get',\n    type,\n    query,\n    ...onStage,\n  }\n}\n\nexport const set = (payload: unknown): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg height=\"1em\" viewBox=\"0 0 20 20\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M10 19c-1.354 0-2.5-.7-2.5-2h5c0 1.3-1.146 2-2.5 2zm5.996-7c0 1.5 2.004 1.5 2.004 2.5 0 .5 0 1.5-2.104 1.5H3.984C2 16 2 15 2 14.5c0-1 1.984-1 2-2.5V9c0-4 2.097-6.5 5-6.9V2c0-.6.5-1 1-1s1 .4 1 1v.1c2.903.4 4.996 2.9 4.996 6.9z\"\n          fill=\"currentColor\"\n          fillRule=\"evenodd\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import qs from 'qs'\n\nimport { REDUX_API_MIDDLEWARE as type, APIAction, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport { Action, PageableRow, PageableRowWithParams } from '@/type/type.d'\nimport { NotificationState } from '@/type/state'\nimport { Id } from '@/type/model'\n\nimport * as CONSTANTS from '../constant/notification'\n\nexport const set = (payload: Partial<NotificationState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const read = (id: Id, onSuccess: OnSuccess): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.READ,\n    url: `/api/notifications/${id}`,\n    method: 'PATCH',\n    onSuccess,\n    headers: {\n      Accept: '*/*',\n    },\n  }\n}\n\nexport const getList = (query: PageableRow): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/notifications${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n  }\n}\n\nexport const getListByParams = (query: PageableRowWithParams): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/notifications${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n  }\n}\n\nexport const getNewestList = (): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_NEWEST_LIST,\n    url: '/api/notifications',\n    method: 'get',\n  }\n}\n\nexport const refreshList = (): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: '/api/notifications',\n    method: 'get',\n  }\n}\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppLoadingCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg\n        className=\"rotateRight\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 399.389 399.389\"\n        width=\"14px\"\n        height=\"14px\"\n        {...svgProps}\n      >\n        <path d=\"M340.896 58.489C303.18 20.773 253.031.001 199.693.001c-53.34 0-103.487 20.771-141.204 58.488C20.772 96.207 0 146.355 0 199.694c0 53.34 20.772 103.489 58.49 141.206 37.717 37.717 87.864 58.488 141.204 58.488 53.339 0 103.486-20.771 141.205-58.488 37.717-37.717 58.49-87.865 58.49-141.206-.002-53.339-20.776-103.487-58.493-141.205zM77.457 199.694c0-67.401 54.835-122.236 122.236-122.236S321.93 132.293 321.93 199.694s-54.836 122.237-122.237 122.237S77.457 267.096 77.457 199.694zm250.604 128.369c-34.289 34.287-79.877 53.17-128.368 53.17v-41.147c77.413 0 140.389-62.979 140.389-140.391 0-77.412-62.979-140.391-140.389-140.391-4.593 0-9.134.229-13.615.662V18.655c4.508-.332 9.049-.5 13.615-.5 48.491 0 94.079 18.883 128.368 53.171 34.289 34.289 53.172 79.878 53.172 128.368-.001 48.493-18.883 94.082-53.172 128.369z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable react/button-has-type */\n\nimport './index.less'\n\nimport './app.less'\n\nimport React, { FC } from 'react'\n\nimport cx from 'clsx'\n\nimport { useHistory } from 'react-router-dom'\n\nimport Loading from './icons/loading'\n\ntype ButtonAppProps = React.ButtonHTMLAttributes<Element> & {\n  className?: string\n  href?: string\n  type?: 'button' | 'submit' | 'reset'\n  icon?: boolean\n  wide?: boolean\n  loading?: boolean\n}\n\nconst ButtonApp: FC<ButtonAppProps> = ({\n  className,\n  children,\n  href,\n  onClick,\n  type = 'button',\n  icon,\n  wide,\n  disabled,\n  loading,\n  ...props\n}): JSX.Element => {\n  const history = useHistory()\n\n  const additionalClassNames = cx(icon && 'icon', wide && 'wide', disabled && 'disabled')\n\n  return (\n    <button\n      type={type}\n      className={cx('ButtonApp nowrap', className, additionalClassNames)}\n      onClick={onButtonClick}\n      {...props}\n    >\n      {(() => {\n        if (loading) {\n          if (icon) {\n            return <Loading />\n          }\n\n          return (\n            <>\n              <Loading />\n              {children}\n            </>\n          )\n        }\n\n        return children\n      })()}\n    </button>\n  )\n\n  function onButtonClick(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    onClick?.(e)\n\n    if (href) history.push(href)\n  }\n}\n\nexport default ButtonApp\n","import * as React from 'react'\n\nimport cx from 'clsx'\n\nfunction SvgComponent({ className, ...props }: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className={cx('IconWrapperUI rotateRight loadingIcon', className)}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.1em\" height=\"1.1em\" viewBox=\"0 0 399.387 399.387\" {...props}>\n        <path\n          fill=\"currentColor\"\n          d=\"M340.896 58.488C303.18 20.771 253.033 0 199.694 0 146.353 0 96.207 20.771 58.491 58.488 20.772 96.206 0 146.354 0 199.693c0 53.342 20.772 103.489 58.491 141.206 37.716 37.717 87.863 58.488 141.203 58.488 53.337 0 103.486-20.771 141.203-58.488 37.719-37.718 58.49-87.865 58.49-141.206 0-53.338-20.772-103.486-58.491-141.205zM199.694 77.457c67.402 0 122.236 54.835 122.236 122.236s-54.834 122.236-122.236 122.236S77.457 267.094 77.457 199.693 132.292 77.457 199.694 77.457zm128.367 250.605c-34.289 34.287-79.877 53.17-128.367 53.17-48.491 0-94.079-18.883-128.367-53.17-34.289-34.287-53.173-79.877-53.173-128.37h41.148c0 77.411 62.979 140.391 140.392 140.391 77.412 0 140.39-62.979 140.39-140.391 0-77.412-62.979-140.391-140.39-140.391-4.594 0-9.134.229-13.615.662v-41.31c4.508-.332 9.049-.5 13.615-.5 48.49 0 94.078 18.883 128.367 53.171 34.289 34.289 53.172 79.878 53.172 128.368-.001 48.494-18.883 94.083-53.172 128.37z\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 469.333 469.333\" width=\"1em\" height=\"1em\" {...props}>\n        <path\n          fill=\"currentColor\"\n          d=\"M234.667 170.667c-35.307 0-64 28.693-64 64s28.693 64 64 64 64-28.693 64-64-28.694-64-64-64z\"\n        />\n        <path\n          fill=\"currentColor\"\n          d=\"M234.667 74.667C128 74.667 36.907 141.013 0 234.667c36.907 93.653 128 160 234.667 160 106.773 0 197.76-66.347 234.667-160-36.907-93.654-127.894-160-234.667-160zm0 266.666c-58.88 0-106.667-47.787-106.667-106.667S175.787 128 234.667 128s106.667 47.787 106.667 106.667-47.787 106.666-106.667 106.666z\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import qs from 'qs'\n\nimport { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { OnStage } from '@/type/transfer.d'\nimport { PageableRow, Action } from '@/type/type.d'\nimport { Content, ParamsConfigModel, Id } from '@/type/model'\nimport { ParamsConfigState, RootState } from '@/type/state'\n\nimport * as CONSTANTS from '../constant/paramsConfig'\n\nexport const set = (payload: Partial<ParamsConfigState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const get = (id: Id, onStage?: OnStage<ParamsConfigModel>): APIAction<ParamsConfigModel> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET,\n    url: `/api/params-config/${id}`,\n    method: 'get',\n    ...onStage,\n  }\n}\ntype GetListFilter = PageableRow & { isActive?: boolean }\n\nexport const getList = (\n  query: GetListFilter = { size: 1000, page: 0, isActive: true },\n  onStage?: OnStage<Content<ParamsConfigModel[]>>,\n): APIAction<Content<ParamsConfigModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/params-config${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n    ...onStage,\n  }\n}\n\nexport const refreshList = (\n  query: GetListFilter = { size: 1000, page: 0, isActive: true },\n  onStage?: OnStage<Content<ParamsConfigModel[]>>,\n): APIAction<Content<ParamsConfigModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.REFRESH_LIST,\n    url: `/api/params-config${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n    ...onStage,\n  }\n}\n\nexport const refreshFullActiveList = (\n  onStage?: OnStage<Content<ParamsConfigModel[]>>,\n): APIAction<Content<ParamsConfigModel[]>> => {\n  const query = { page: 0, size: 10_000, isActive: true }\n\n  return {\n    type,\n    stageActionTypes: CONSTANTS.REFRESH_FULL_ACTIVE_LIST,\n    url: `/api/params-config${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n    ...onStage,\n  }\n}\n\nexport const create = (body: Partial<ParamsConfigState>, onStage: OnStage): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.CREATE,\n    url: '/api/params-config',\n    method: 'post',\n    body,\n    ...onStage,\n  }\n}\n\nexport const update = (body: Partial<ParamsConfigModel>, onStage: OnStage): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.UPDATE,\n  url: `/api/params-config/${body.id}`,\n  body,\n  method: 'put',\n  ...onStage,\n})\n\nexport const updateAlsoLocaly = (body: ParamsConfigModel, onStage: OnStage): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.UPDATE,\n  url: `/api/params-config/${body.id}`,\n  body,\n  method: 'put',\n  onSuccess(args) {\n    const { store } = args\n\n    const { list } = (store.getState() as RootState).paramsConfigState\n\n    store.dispatch(set({ list: list.map((i) => (i.id.toString() === body.id.toString() ? body : i)) }))\n\n    onStage?.onSuccess?.(args)\n  },\n})\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M11.079 2.377a1.605 1.605 0 00-2.271.01L2.378 8.87c-.625.63-.621 1.647.008 2.271l5.112 5.072c.63.625 1.646.62 2.271-.009l6.43-6.483c.625-.63.621-1.647-.008-2.271l-5.112-5.073zM7.45 1.04a3.516 3.516 0 014.974-.02l5.112 5.072a3.518 3.518 0 01.02 4.975l-1.07 1.08 9.838 9.84a2.308 2.308 0 010 3.262l-1.076 1.076a2.307 2.307 0 01-3.262 0l-9.821-9.823-1.04 1.049a3.516 3.516 0 01-4.974.02L1.04 12.498a3.518 3.518 0 01-.02-4.974L7.451 1.04zm6.06 14.105l9.827 9.827a.397.397 0 00.56 0l1.075-1.074a.397.397 0 000-.56l-9.833-9.835-1.628 1.642zM5.557 9.051l3.465-3.489 1.356 1.347-3.465 3.49L5.556 9.05z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 26 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.111 1.923H4.815V0h5.296v1.923zm11.074 0H15.89V0h5.296v1.923zM0 3.846h26V25H0V3.846zM1.926 5.77v17.308h22.148V5.769H1.926zM19.5 12.5v2.644h-1.926V12.5h-2.648v-1.923h2.648V7.933H19.5v2.644h2.648V12.5H19.5zm-8.426 0H3.852v-1.923h7.222V12.5z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.398 23.048L1.446 27 0 25.554l3.952-3.952A12.472 12.472 0 01.978 13.5C.978 6.584 6.584.978 13.5.978c3.09 0 5.918 1.12 8.102 2.974L25.554 0 27 1.446l-3.952 3.952a12.472 12.472 0 012.974 8.102c0 6.916-5.606 12.522-12.522 12.522-3.09 0-5.918-1.12-8.102-2.974zm1.451-1.452a10.434 10.434 0 006.651 2.381c5.787 0 10.477-4.69 10.477-10.477 0-2.525-.893-4.842-2.38-6.65L6.848 21.595zM20.151 5.404A10.434 10.434 0 0013.5 3.023c-5.786 0-10.477 4.69-10.477 10.477 0 2.525.893 4.842 2.38 6.65L20.152 5.405z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M14.04 12.14v8.807h-2.08V0h2.08v2.023h2.226v2.024H14.04V6.07h2.226v2.023H14.04v2.024h2.226v2.023H14.04zM1.443 19.648c-.525-.49-.803-.73-1.443-.73v-2.023c1.5 0 2.303.75 2.86 1.27l.024.024c.524.49.804.73 1.448.73.643 0 .921-.24 1.445-.73l.023-.022c.557-.521 1.36-1.272 2.863-1.272v2.023c-.643 0-.921.24-1.445.73l-.023.022c-.557.521-1.36 1.272-2.863 1.272-1.504 0-2.308-.751-2.866-1.273l-.023-.021zm17.332 0c-.525-.49-.803-.73-1.443-.73v-2.023c1.5 0 2.302.75 2.859 1.27l.025.024c.524.49.803.73 1.447.73s.924-.24 1.449-.73l.024-.023c.558-.521 1.36-1.271 2.864-1.271v2.023c-.644 0-.923.24-1.448.73l-.024.023c-.558.52-1.362 1.27-2.865 1.27-1.504 0-2.307-.75-2.865-1.272l-.023-.021zM1.443 24.706c-.525-.49-.803-.73-1.443-.73v-2.023c1.5 0 2.303.75 2.86 1.27l.024.024c.524.49.804.73 1.448.73.643 0 .921-.24 1.445-.73l.023-.022c.557-.521 1.36-1.272 2.863-1.272 1.504 0 2.307.751 2.865 1.273l.023.021c.526.49.803.73 1.444.73.64 0 .92-.24 1.447-.73l.023-.022c.559-.522 1.363-1.272 2.867-1.272 1.503 0 2.305.75 2.863 1.272l.023.022c.524.49.802.73 1.445.73.644 0 .924-.24 1.449-.73l.024-.023c.558-.52 1.36-1.27 2.864-1.27v2.023c-.644 0-.923.24-1.448.73l-.024.022C23.97 25.25 23.166 26 21.663 26c-1.504 0-2.306-.75-2.863-1.272l-.023-.022c-.524-.49-.802-.73-1.445-.73-.645 0-.926.241-1.451.731l-.026.024c-.557.52-1.36 1.269-2.86 1.269-1.5 0-2.303-.75-2.86-1.27l-.024-.024c-.524-.49-.804-.73-1.448-.73-.643 0-.921.24-1.445.73l-.023.022C6.638 25.249 5.835 26 4.332 26c-1.504 0-2.308-.75-2.866-1.272l-.023-.022z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 23 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4.25 2a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5zM4 .007A4.25 4.25 0 00.546 6.335l3.072 16.167.124-.024a6.25 6.25 0 1011.727-4.254l-.542-3.382v-.006a5.066 5.066 0 012.865-5.427l.003-.002 2.71-1.232-.02-.044A4.25 4.25 0 0018.5.007V0H4v.007zM7.856 2a4.25 4.25 0 01-4.902 6.299l1.683 8.855A6.242 6.242 0 019.75 14.5c1.187 0 2.297.331 3.242.906l-.038-.242-.001-.003a7.065 7.065 0 013.52-7.322A4.247 4.247 0 0115.142 2H7.857zM18.75 2a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5zm-.25 10.5a1 1 0 100 2 1 1 0 000-2zm-3 1a3 3 0 116 0 3 3 0 01-6 0zm-5.75 3a4.25 4.25 0 100 8.5 4.25 4.25 0 000-8.5z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 24 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.316.536l-.675.81-.628-.847L4.679 0l.637.536zm-.708 2.212c-.287.26-.634.594-.979.981-.867.974-1.517 2.052-1.527 2.972.03.645.305 1.255.77 1.704a2.511 2.511 0 003.49 0 2.534 2.534 0 00.77-1.704c-.005-.348-.14-.796-.427-1.327-.285-.528-.678-1.063-1.093-1.553a15.845 15.845 0 00-1.004-1.073zM4.012.499l.629.847.675-.81v.001l.002.001.003.003.01.008a7.077 7.077 0 01.16.14 18.143 18.143 0 011.722 1.763c.47.554.962 1.214 1.34 1.917.374.691.681 1.506.681 2.351v.041A4.65 4.65 0 017.82 9.927a4.608 4.608 0 01-6.406 0A4.65 4.65 0 010 6.76L0 6.741v-.02c0-1.764 1.141-3.365 2.063-4.4A15.11 15.11 0 013.996.511l.01-.008.004-.002.002-.002zm12.102 7.58l-.673.811-.63-.845.665-.5.638.534zm7.883 12.107c-.003-1.502-.558-3.012-1.3-4.38-.752-1.383-1.74-2.701-2.705-3.833a37.182 37.182 0 00-3.851-3.871l-.019-.016-.005-.005-.003-.002-.673.811-.63-.844h-.001l-.002.002-.006.004-.02.015a11.592 11.592 0 00-.322.254 30.541 30.541 0 00-3.56 3.402c-1.898 2.144-4.014 5.223-4.02 8.463A8.636 8.636 0 009.305 26.4a8.53 8.53 0 0012.267 0 8.635 8.635 0 002.425-6.214zM15.41 10.27a28.44 28.44 0 00-2.939 2.857c-1.853 2.093-3.49 4.663-3.49 7.073v.028a6.515 6.515 0 001.83 4.698 6.457 6.457 0 004.627 1.962 6.434 6.434 0 004.628-1.962 6.493 6.493 0 001.83-4.698V20.2c0-1.008-.383-2.162-1.045-3.382-.656-1.209-1.545-2.404-2.455-3.47a35.095 35.095 0 00-2.986-3.078z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React from 'react'\n\nimport Key from '@/components/svg/keyOutlinedIcon'\nimport Accumulator from '@/components/svg/accumulatorOutlinedIcon'\nimport Airbag from '@/components/svg/airbagOutlinedIcon'\nimport Coolant from '@/components/svg/coolantOutlinedIcon'\nimport Generator from '@/components/svg/generatorOutlinedIcon'\nimport BrakeFluid from '@/components/svg/brakeFluidOutlinedIcon'\n\nexport const MALFUNCTIONS = {\n  ignitionStatus: {\n    label: 'Зажигание (клемма +15)',\n    short: 'Зажигание (клемма +15)',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Key {...props} />,\n  },\n  attentionStatus: {\n    label: 'Внимание',\n    short: 'Внимание',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Key {...props} />,\n  },\n  mil: {\n    label: 'MIL',\n    short: 'MIL',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Key {...props} />,\n  },\n  criticalFault: {\n    label: 'Критическая неисправность',\n    short: 'Критическая неисправность',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Key {...props} />,\n  },\n  powerStatus: {\n    label: 'Питание (клемма +30)',\n    short: 'Питание (клемма +30)',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Accumulator {...props} />,\n  },\n  airbagFired: {\n    label: 'Сигнализатор о срабатывании подушки безопасности (CAN)',\n    short: 'Cрабатала подушка безопасности',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Airbag {...props} />,\n  },\n  coolantLevelLow: {\n    label: 'Статус сигнализатора «Низкий уровень охлаждающей жидкости» (CAN)',\n    short: 'Низкий уровень охлаждающей жидкости',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Coolant {...props} />,\n  },\n  generatorMalfunction: {\n    label: 'Статус сигнализатора «Неисправность генератора» (CAN)',\n    short: 'Неисправность генератора',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <Generator {...props} />,\n  },\n  breakFluidLowLevel: {\n    label: 'Сигнализатор «Низкий уровень тормозной жидкости»',\n    short: 'Низкий уровень тормозной жидкости',\n    icon: (props: React.PropsWithChildren<{ className?: string }>): JSX.Element => <BrakeFluid {...props} />,\n  },\n}\n\nexport const PERIODS = {\n  odometer: {\n    label: 'Пробег, км',\n  },\n  onboardPowerVoltage: {\n    label: 'Напряжение сети',\n  },\n  remainingMileage: {\n    label: 'Остаток пробега до очередного ТО, км',\n  },\n  fuelConsumption: {\n    label: 'Расход топлива',\n  },\n  speedGps: {\n    label: 'Скорость по GPS, км/ч',\n  },\n  speedCan: {\n    label: 'Скорость автомобиля, км/ч (CAN)',\n  },\n  fuelLevel: {\n    label: 'Уровень топлива, л (CAN)',\n  },\n  coolantTemp: {\n    label: 'Температура охлаждающей жидкости, °С (CAN)',\n  },\n  engineOilPressure: {\n    label: 'Давление масла в двигателе',\n  },\n}\n\nexport const CLIENT_PARAMS = {\n  carCount: {\n    label: 'Количество авто',\n  },\n  connectionDate: {\n    label: 'Дата подключения',\n  },\n  contractNumber: {\n    label: 'Номер контракта',\n  },\n  email: {\n    label: 'Email',\n  },\n  firstName: {\n    label: 'Имя',\n  },\n  fullNameOfLegalEntity: {\n    label: 'Полное имя',\n  },\n  id: {\n    label: 'ID',\n  },\n  lastName: {\n    label: 'Фамилия',\n  },\n  legalEntityName: {\n    label: 'Полное имя',\n  },\n  phone: {\n    label: 'телефон',\n  },\n  supplementaryAgreementNumber: {\n    label: 'Дополнительный номер соглашения',\n  },\n  tariffName: {\n    label: 'тариф',\n  },\n}\n\nexport const CAR_PARAMETER = {\n  issueYear: {\n    label: 'Год выпуска',\n  },\n  color: {\n    label: 'Количество авто',\n  },\n  engineModification: {\n    label: 'Модификация двигателя',\n  },\n  fuelSystemType: {\n    label: 'Тип топливной системы',\n  },\n  fuelSystemTypeExternal: {\n    label: 'Внешний тип топливной системы',\n  },\n  fuelTankVolume: {\n    label: 'Обьем топливного бака',\n  },\n  gasTankVolume: {\n    label: 'Обьем бака газа',\n  },\n  modelModification: {\n    label: 'Модификация модели',\n  },\n  name: {\n    label: 'Имя',\n  },\n  stateNumber: {\n    label: 'Гос. номер',\n  },\n}\n\nexport const CAR_PARAMS = {\n  brand: {\n    label: 'Бренд',\n  },\n  model: {\n    label: 'Имя',\n  },\n  regionId: {\n    label: 'Регион',\n  },\n  vehiclePassport: {\n    label: 'Паспорт ТО',\n  },\n  vin: {\n    label: 'VIN',\n  },\n}\n\nexport default { ...MALFUNCTIONS, ...PERIODS }\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M17.748 15.026L29.43 3.335A1.944 1.944 0 1026.682.584L15 12.275 3.318.584A1.944 1.944 0 10.57 3.334l11.682 11.692L.57 26.717a1.944 1.944 0 102.748 2.75L15 17.778l11.682 11.69a1.937 1.937 0 002.748 0c.76-.76.76-1.99 0-2.75L17.749 15.026z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport './_popup.less'\n\nimport React, { FC } from 'react'\n\nimport { Portal } from 'react-portal'\n\nimport cx from 'clsx'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport CloseIcon from '@/components/svg/closeOutlinedIcon'\nimport Button from '../button'\n\ntype PopupProps = {\n  title: string\n  onClose: () => void\n  isOpen: boolean\n  top?: boolean\n}\n\nconst Pupup: FC<PopupProps> = ({ children, title, onClose, isOpen, top = false }): JSX.Element => {\n  return (\n    <SwitchTransition>\n      <CSSTransition key={isOpen.toString()} timeout={200} classNames=\"appear\" unmountOnExit>\n        {isOpen ? (\n          <Portal node={document && document.getElementById('root')}>\n            <div className=\"Popup\">\n              <div className=\"frameWrapper\">\n                <div className={cx('frame clickable', top && 'top')} style={{ padding: '5rem' }}>\n                  <div className=\"popupTitleWrapper f\">\n                    <div className=\"popupTitle\">{title}</div>\n                    <Button style={{ marginLeft: '6rem' }} onClick={onClose} icon>\n                      <CloseIcon />\n                    </Button>\n                  </div>\n                  <div className=\"popupContent\">{children}</div>\n                </div>\n              </div>\n            </div>\n          </Portal>\n        ) : (\n          <span />\n        )}\n      </CSSTransition>\n    </SwitchTransition>\n  )\n}\n\nexport default Pupup\n","import { Range } from '@/type/model'\n\nimport React, { FC } from 'react'\n\ntype LeftFieldProps = {\n  label: string\n  value?: boolean | string | null | Range | JSX.Element\n  colon?: boolean\n}\n\nexport const LeftField: FC<LeftFieldProps> = ({ colon, label, value }): JSX.Element | null => {\n  if (!value) return null\n\n  const value1 = isRange(value) ? `${value?.minValue ?? '∞'} - ${value?.maxValue ?? '∞'}` : value\n  const label1 = colon ? `${label}:` : label\n\n  return (\n    <ol className=\"fc\">\n      <div className=\"wrap f\">\n        <div>{label1}</div>\n        <div>{value1}</div>\n      </div>\n    </ol>\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isRange(value?: any): value is Range {\n  return Boolean(\n    Object.prototype.hasOwnProperty.call(value, 'minValue') || Object.prototype.hasOwnProperty.call(value, 'maxValue'),\n  )\n}\n","import './_popup.viewParamsConfig.less'\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport React, { FC, useState } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { CAR_PARAMS, CAR_PARAMETER, CLIENT_PARAMS, PERIODS, MALFUNCTIONS } from '@/constant/lastTelemetry'\n\nimport Portal from '@/components/popup/_popup'\n\nimport { ParamsConfigState, RootState } from '@/type/state'\n\nimport { LeftField } from './fieldComponent'\n\ntype PopupSaveTemplateProps = {\n  stateRef?: React.MutableRefObject<undefined | boolean>\n  setStateRef?: React.MutableRefObject<undefined | ((v: boolean) => void)>\n}\n\nconst PopupSaveTemplate: FC<PopupSaveTemplateProps> = ({ stateRef, setStateRef }): JSX.Element => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n\n  const { entity } = paramsConfigState\n\n  stateRef = stateRef || { current: undefined }\n  setStateRef = setStateRef || { current: undefined }\n\n  stateRef.current = isOpen\n  setStateRef.current = setIsOpen\n\n  const isCar = entity?.configType === 'CAR'\n\n  const lastTelemetry = entity?.params?.carParams?.lastTelemetry\n  const clientParams = entity?.params?.clientParams\n  const carParams = entity?.params?.carParams\n  const carParameter = entity?.params?.carParams?.carParameter\n\n  return (\n    <>\n      <Portal\n        title={entity?.name || ''}\n        onClose={() => {\n          setIsOpen(false)\n        }}\n        isOpen={isOpen}\n        top\n      >\n        <div className=\"paramConfigWrapper f\">\n          <div className=\"vehicle\">\n            <h2>{isCar ? 'ТО' : 'Клиент'}</h2>\n            <div className=\"listWrapper\">\n              <ul>\n                {Object.entries(CLIENT_PARAMS).map(([k, v]) => {\n                  const value = clientParams?.[k as keyof typeof clientParams]\n\n                  return <LeftField key={k} label={v.label} value={value} colon />\n                })}\n                {Object.entries(CAR_PARAMS).map(([k, v]) => {\n                  const value = carParams?.[k as keyof typeof carParameter]\n\n                  return <LeftField key={k} label={v.label} value={value} colon />\n                })}\n                {Object.entries(CAR_PARAMETER).map(([k, v]) => {\n                  const value = carParameter?.[k as keyof typeof carParameter]\n\n                  return <LeftField key={k} label={v.label} value={value} colon />\n                })}\n              </ul>\n            </div>\n          </div>\n          {isCar && (\n            <div className=\"params fc\">\n              <h2>Параметры</h2>\n              <div className=\"listWrapper\">\n                <ul>\n                  {Object.entries(MALFUNCTIONS).map(([k, v]) => {\n                    if (!lastTelemetry?.[k as keyof typeof lastTelemetry]) return null\n\n                    return <LeftField key={k} label={v.label} value={<v.icon />} />\n                  })}\n                  {Object.entries(PERIODS).map(([k, v]) => {\n                    return (\n                      <LeftField key={k} label={v.label} value={lastTelemetry?.[k as keyof typeof lastTelemetry]} />\n                    )\n                  })}\n                </ul>\n              </div>\n            </div>\n          )}\n        </div>\n      </Portal>\n    </>\n  )\n}\n\nexport default PopupSaveTemplate\n","import qs from 'qs'\n\nimport ROUTES from '@/constant/routes'\n\nimport history from '@/index/route/history'\n\nimport { ParamsConfigModel } from '@/type/model'\n\nexport function apply(NavigateParamsConfig: ParamsConfigModel): void {\n  const isCar = NavigateParamsConfig.configType === 'CAR'\n\n  const params = isCar ? NavigateParamsConfig.params?.carParams : NavigateParamsConfig.params?.clientParams\n\n  const query = qs.stringify({ page: 0, size: 10, ...params }, { skipNulls: true, addQueryPrefix: true })\n\n  const path = isCar ? ROUTES.SEARCH_CAR.PATH : ROUTES.SEARCH_CLIENT.PATH\n\n  history.push(`${path}${query}`)\n}\n","/* eslint-disable no-nested-ternary */\nimport './list.less'\n\nimport React, { FC, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cx from 'clsx'\n\nimport Button from '@/components/button'\nimport LoadingIcon from '@/components/svg/loadingFilledIcon'\nimport VisibleIcon from '@/components/svg/visibleFilledIcon'\n\nimport ROUTES from '@/constant/routes'\n\nimport * as notificationActions from '@/store/action/notification'\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { NotificationState, ParamsConfigState, RootState } from '@/type/state'\nimport { Id, NotificationModel, ParamsConfigModel } from '@/type/model'\n\nimport PopupViewConfig from '@/template/popup.viewParamConfig/_popup.viewParamsConfig'\n\nimport { apply } from '@/util/paramsConfig'\nimport { DateTime } from 'luxon'\n\n// import { Link } from 'react-router-dom'\n\ntype NotificationListProps = {\n  className?: string\n  setIsNotificationVisible?: React.Dispatch<React.SetStateAction<boolean>>\n  isTab?: boolean\n}\n\nconst NotificationList: FC<NotificationListProps> = ({ className, setIsNotificationVisible, isTab }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const openPopup = useRef<undefined | ((v: boolean) => void)>(undefined)\n\n  const [applyLoadingId, setApplyLoadingId] = useState<Id | null>(null)\n  const [viewLoadingId, setViewLoadingId] = useState<Id | null>(null)\n\n  const notificationState = useSelector((s: RootState): NotificationState => s.notificationState)\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n\n  const { loading, newestList, list } = notificationState\n\n  const isLoading = isTab ? loading.getList : loading.newestList\n  const currentList = isTab ? list : newestList\n\n  return (\n    <div className={cx('NotificationList', className, !isTab && 'NotificationList absolute appear')}>\n      {!isTab && (\n        <Button\n          style={{ margin: '10px 0', width: '100%', background: 'transparent', color: 'var(--color)', border: 0 }}\n          href={ROUTES.NOTIFICATION.PATH}\n          onClick={() => setIsNotificationVisible?.(false)}\n        >\n          Все уведомления\n        </Button>\n      )}\n      <PopupViewConfig setStateRef={openPopup} />\n      {isLoading ? (\n        'Загрузка...'\n      ) : currentList.length ? (\n        list.map((iNotif) => {\n          return (\n            <div\n              key={iNotif.id}\n              className={cx('messageContainer', !iNotif.isRead && 'new')}\n              style={{ cursor: iNotif.configId ? 'pointer' : 'default' }}\n              onMouseOver={!iNotif.isRead ? () => onMouseOver(iNotif) : undefined}\n            >\n              <div className=\"message margin-bottom-s\">{iNotif.message}</div>\n              <div className=\"f\">\n                <div className=\"f\">\n                  <Button\n                    className=\"small actionButton margin-right-xxs\"\n                    onClick={() => navigateToSearch(iNotif, 'apply')}\n                  >\n                    {applyLoadingId === iNotif.id && <LoadingIcon className=\"margin-right-xxs\" />}\n                    Применить\n                  </Button>\n                  <Button className=\"small fs14 actionButton\" icon onClick={() => navigateToSearch(iNotif, 'view')}>\n                    {viewLoadingId === iNotif.id && <LoadingIcon className=\"margin-right-xxs\" />}\n                    <VisibleIcon />\n                  </Button>\n                </div>\n                <div className=\"notificationDate f-right-center wide\">{getFormattedDate(iNotif.createdAt)}</div>\n              </div>\n            </div>\n          )\n        })\n      ) : (\n        <div className=\"fs20 gray empty\">Пусто</div>\n      )}\n    </div>\n  )\n\n  function getFormattedDate(dateStr: string) {\n    return DateTime.fromISO(dateStr).toFormat('dd.MM.yyyy HH:mm')\n  }\n\n  function navigateToSearch(Notification: NotificationModel, action: string): void {\n    const isApply = action === 'apply'\n\n    const ParamsConfig = findParamsConfigLocaly()\n\n    if (ParamsConfig) {\n      doAction(ParamsConfig)\n    } else {\n      if (isApply) setApplyLoadingId(Notification.id)\n      else setViewLoadingId(Notification.id)\n\n      dsp(\n        paramsConfigActions.get(Notification.configId, {\n          onSuccess({ body }) {\n            doAction(body)\n\n            setApplyLoadingId(null)\n            setViewLoadingId(null)\n          },\n        }),\n      )\n    }\n\n    function findParamsConfigLocaly(): ParamsConfigModel | undefined {\n      return paramsConfigState.list.find((p) => String(p.id) === String(Notification.configId))\n    }\n\n    function doAction(actionParamsConfig: ParamsConfigModel) {\n      if (isApply) {\n        apply(actionParamsConfig)\n      } else {\n        dsp(paramsConfigActions.set({ entity: actionParamsConfig }))\n        openPopup?.current?.(true)\n      }\n    }\n  }\n\n  function onMouseOver(iNotif: NotificationModel): void {\n    const entity = { ...iNotif, isRead: true }\n\n    dsp(\n      notificationActions.read(iNotif.id, function onSuccess() {\n        dsp(\n          notificationActions.set({\n            newestList: newestList.map((i) => (String(i.id) === String(entity.id) ? entity : i)),\n            list: list.map((i) => (String(i.id) === String(entity.id) ? entity : i)),\n          }),\n        )\n      }),\n    )\n  }\n}\n\nexport default NotificationList\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport './_notification.less'\n\nimport React, { FC, useCallback, useEffect, useMemo, useState } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport cx from 'clsx'\n\nimport NotificationIcon from '@/components/svg/notificationFilledIcon'\n\nimport * as notificationActions from '@/store/action/notification'\n\nimport NotificationList from '@/template/notification/list'\n\nimport { RootState } from '@/type/state'\n\ntype NotificationProps = {\n  className?: string\n}\n\nconst Notification: FC<NotificationProps> = ({ className }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const [isNotificationVisible, setIsNotificationVisible] = useState(false)\n\n  const { notificationState } = useSelector((s: RootState) => s)\n  const { list, newestList } = notificationState\n\n  const unreadList = useMemo(() => list?.concat(newestList).filter((iNotif) => !iNotif.isRead), [list, newestList])\n\n  useEffect(addListener, [isNotificationVisible])\n  useEffect(getNotification, [])\n\n  const onClickOutside = useCallback((e) => {\n    if (!e.target.closest('.clickable')) setIsNotificationVisible(false)\n  }, [])\n\n  return (\n    <div className={cx('Notification tall', className, isNotificationVisible && 'notificationListVisible')}>\n      <a className=\"notificationWrapper tall\" onClick={() => setIsNotificationVisible(!isNotificationVisible)}>\n        {unreadList.length ? <div className=\"count\">{unreadList.length}</div> : null}\n        <NotificationIcon className=\"notificationIcon\" />\n      </a>\n      {isNotificationVisible && (\n        <NotificationList className=\"clickable\" setIsNotificationVisible={setIsNotificationVisible} />\n      )}\n    </div>\n  )\n\n  function addListener() {\n    if (isNotificationVisible) {\n      document.addEventListener('click', onClickOutside)\n    } else {\n      document.removeEventListener('click', onClickOutside)\n    }\n  }\n\n  function getNotification() {\n    if (!list.length) {\n      dsp(notificationActions.getNewestList())\n    }\n\n    setInterval(() => {\n      dsp(notificationActions.refreshList())\n    }, 1000 * 60 * 5) // 5min\n  }\n}\n\nexport default Notification\n","import './_header.less'\n\nimport React, { FC, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport cx from 'clsx'\nimport { getListForEveryLocation } from '@/util/route-constant'\n\nimport Breadcrumbs from '@/components/breadcrumbs/_breadcrumbs'\nimport { UserState, RootState } from '@/type/state'\n\nimport ROUTES from '@/constant/routes'\n\nimport * as userActions from '@/store/action/user'\n\nimport Notification from '@/template/notification/_notification'\n\nconst Header: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const userState = useSelector((s: RootState): UserState => s.userState)\n\n  useEffect(getCurrentUser, [])\n\n  return (\n    <header className=\"Header\">\n      <div className=\"headerContainer\">\n        <div className=\"left f\">\n          <div className=\"logoWrapper f-center-center\" />\n        </div>\n        <div className=\"breadcrumbsWrapper f-left-center\">\n          <Breadcrumbs routes={getListForEveryLocation({ ...ROUTES })} />\n        </div>\n        <div className=\"right tall\">\n          {userState.entity ? (\n            <Link className={cx('tall nowrap', ROUTES.ABOUT.isCurrent && 'primaryBg')} to={ROUTES.ABOUT.PATH}>\n              {buildName()}\n            </Link>\n          ) : null}\n          <Notification />\n          <Link className=\"tall\" to={ROUTES.LOGIN.PATH} onClick={logout}>\n            Выйти\n          </Link>\n        </div>\n      </div>\n    </header>\n  )\n\n  function buildName() {\n    if (!userState?.entity?.lastName) return null\n\n    return `${userState.entity.lastName} ${userState.entity.firstName[0]}.${userState.entity.middleName[0]}.`\n  }\n\n  function getCurrentUser() {\n    if (!userState.entity) {\n      dsp(userActions.getCurrent())\n    }\n  }\n\n  function logout() {\n    localStorage.clear()\n\n    dsp({\n      type: 'RESET_ALL',\n    })\n  }\n}\n\nexport default Header\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M4.247 6.004L.5 2.258a.948.948 0 01-.285-.697c0-.275.095-.508.285-.698L1.08.285A.949.949 0 011.776 0a.95.95 0 01.698.285l5.025 5.017c.19.19.285.423.285.698a.948.948 0 01-.285.697l-5.025 5.018a.949.949 0 01-.698.285.948.948 0 01-.697-.285l-.578-.578a.943.943 0 01-.285-.694.97.97 0 01.285-.701l3.746-3.738z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 32 32\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n      <path d=\"M16 0C7.178 0 0 7.178 0 16c0 8.823 7.178 16 16 16s16-7.177 16-16c0-8.822-7.178-16-16-16zm0 29.09C8.782 29.09 2.91 23.219 2.91 16S8.781 2.91 16 2.91 29.09 8.781 29.09 16 23.219 29.09 16 29.09z\" />\n    </svg>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import './_iconInCircle.less'\n\nimport React, { FC } from 'react'\n\nimport c from 'clsx'\n\nimport CircleSvg from '@/components/svg/circle'\n\ntype IconInCircleProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n\nconst IconInCircle: FC<IconInCircleProps> = ({ children, className, ...props }): JSX.Element => {\n  return (\n    <div className={c('IconInCircle', className)} {...props}>\n      <CircleSvg className=\"circleSvg\" />\n      {children}\n    </div>\n  )\n}\n\nexport default IconInCircle\n","/* eslint-disable @typescript-eslint/lines-between-class-members */\n/* eslint-disable max-classes-per-file */\n\nimport {\n  // PERMISSION,\n  TOKEN,\n} from '@/constant/localStorage'\n\nimport history from '@/index/route/history'\n\nimport { toast, ToastOptions } from 'react-toastify'\n\nimport ROUTES from '@/constant/routes'\n\nconst toastProps: ToastOptions = {\n  type: 'error',\n}\n\nexport class Permission {\n  private _permissionName: string\n\n  private _cache: Record<string, string[]>\n\n  constructor(permissionName: string) {\n    this._permissionName = permissionName\n    this._cache = {}\n  }\n  // eslint-disable-next-line class-methods-use-this\n  get permissions(): string[] {\n    const token = localStorage.getItem(TOKEN) ?? ''\n\n    if (this._cache[token]) return this._cache[token]\n\n    return [\n      'PERMISSION_CLIENT_FEEDBACK',\n      'PERMISSION_DEALER_CARS',\n      'PERMISSION_DEALER_CLIENTS',\n      'PERMISSION_DEALER_DATA',\n      'PERMISSION_MANAGEMENT',\n      'PERMISSION_MAILINGS',\n      'PERMISSION_PARAMS_CONFIG',\n      'PERMISSION_SERVICE_STATION_SCHEDULE',\n    ]\n\n    // const permissionString = localStorage.getItem(PERMISSION)\n\n    // if (!permissionString) {\n    //   history.push(ROUTES.LOGIN.PATH)\n    //   localStorage.clear()\n    //   toast('Доступы текущего пользователя не были обнаружены в локальном хранилище браузера', toastProps)\n    // }\n\n    try {\n      // const permissionsArr = (JSON.stringify(permissionString) as unknown) as string[]\n      // this._cache[token] = permissionsArr\n    } catch (e) {\n      history.push(ROUTES.LOGIN.PATH)\n      localStorage.clear()\n      toast('Не удалось распарсить доступы в локальном хранилище браузера', toastProps)\n      return []\n    }\n  }\n\n  toString = (): string => {\n    return this._permissionName\n  }\n\n  get is(): boolean {\n    return this.permissions.includes(this._permissionName)\n  }\n}\n\nclass Permissions {\n  PERMISSION_DEALER_DATA: Permission\n\n  PERMISSION_DEALER_CLIENTS: Permission\n\n  PERMISSION_DEALER_CARS: Permission\n\n  PERMISSION_MANAGEMENT: Permission\n\n  PERMISSION_MAILINGS: Permission\n\n  PERMISSION_SERVICE_STATION_SCHEDULE: Permission\n\n  PERMISSION_CLIENT_FEEDBACK: Permission\n\n  PERMISSION_PARAMS_CONFIG: Permission\n\n  constructor() {\n    this.PERMISSION_CLIENT_FEEDBACK = new Permission('PERMISSION_CLIENT_FEEDBACK')\n    this.PERMISSION_DEALER_CARS = new Permission('PERMISSION_DEALER_CARS')\n    this.PERMISSION_DEALER_CLIENTS = new Permission('PERMISSION_DEALER_CLIENTS')\n    this.PERMISSION_DEALER_DATA = new Permission('PERMISSION_DEALER_DATA')\n    this.PERMISSION_MANAGEMENT = new Permission('PERMISSION_MANAGEMENT')\n    this.PERMISSION_MAILINGS = new Permission('PERMISSION_MAILINGS')\n    this.PERMISSION_PARAMS_CONFIG = new Permission('PERMISSION_PARAMS_CONFIG')\n    this.PERMISSION_SERVICE_STATION_SCHEDULE = new Permission('PERMISSION_SERVICE_STATION_SCHEDULE')\n  }\n}\n\nconst PERMISSIONS = new Permissions()\n\nexport default PERMISSIONS\n","import { MutableRefObject } from 'react'\n\nexport type SetCSSVariable = (\n  ref: MutableRefObject<null> | null,\n  name: string,\n  value: number | string,\n  s?: SetCSSVariableSettings,\n) => void\n\nexport type SetCSSVariableSettings = {\n  postfix?: string\n  prefix?: string\n}\n\nconst setCSSVariable: SetCSSVariable = (ref, name, value, settings) => {\n  const el = ref?.current || document.body\n\n  el?.style.setProperty(`--${settings?.prefix || ''}${name}${settings?.postfix || ''}`, value.toString())\n}\n\nexport default setCSSVariable\n","import { useRef, MutableRefObject } from 'react'\nimport setCSSVariable, { SetCSSVariableSettings } from './util'\n\nexport type SetCSSVariable = (key: string, value: number | string) => void\n\nconst useCSSVariables = (settings?: SetCSSVariableSettings): [MutableRefObject<null>, SetCSSVariable] => {\n  const ref = useRef(null)\n\n  return [ref, (key, value): void => setCSSVariable(ref, key, value, settings)]\n}\n\nexport default useCSSVariables\n","type AnimateArgs = { timing: (tf: number) => number; draw: (tf: number) => void; duration: number }\n\ntype Animate = (obj: AnimateArgs) => void\n\nconst animate: Animate = ({ timing, draw, duration }) => {\n  const start = performance.now()\n\n  window.requestAnimationFrame(function animation(time) {\n    let timeFraction = (time - start) / duration\n\n    if (timeFraction > 1) timeFraction = 1\n\n    const progress = timing(timeFraction)\n    draw(progress)\n\n    if (timeFraction < 1) {\n      requestAnimationFrame(animation)\n    }\n  })\n}\n\nexport default animate\n","import animate from './util'\n\nexport type SetVariable = (key: string, value: number) => void\n\nexport class CarouselState {\n  private _translateX: number\n\n  public slide: number\n\n  private readonly minSwipeVelosity: number\n\n  private readonly maxSwipeVelosity: number\n\n  private setVariable: SetVariable\n\n  public readonly slideAmount: number\n\n  public readonly minDeltaPercentSwipe: number\n\n  constructor(\n    setVariable: SetVariable,\n    translateX: number,\n    slideAmount: number,\n    slide: number,\n    minSwipeVelosity: number,\n    maxSwipeVelosity: number,\n    minDeltaPercentSwipe: number,\n  ) {\n    this.setVariable = setVariable\n    this._translateX = translateX\n    this.slideAmount = slideAmount\n    this.slide = slide\n    this.minSwipeVelosity = minSwipeVelosity\n    this.maxSwipeVelosity = maxSwipeVelosity\n    this.minDeltaPercentSwipe = minDeltaPercentSwipe\n  }\n\n  public animate = (velocity = this.maxSwipeVelosity): void => {\n    const { diff, translateX } = this\n\n    animate({\n      duration: 150 / this.getAnimationVelocity(velocity),\n      timing: (tf: number) => {\n        return tf\n      },\n      draw: (progress: number) => {\n        this.translateX = diff * progress + translateX\n      },\n    })\n  }\n\n  public async smooth(n: number): Promise<void> {\n    this.setVariable('smooth', n)\n  }\n\n  private getAnimationVelocity(velocityAr: number): number {\n    const velocity = velocityAr < this.minSwipeVelosity ? this.minSwipeVelosity : velocityAr\n    return velocityAr > 1 ? 1 : velocity\n  }\n\n  get destination(): number {\n    return (this.slide / this.slideAmount) * 100\n  }\n\n  private get diff(): number {\n    return this.destination - this.translateX\n  }\n\n  public get translateX(): number {\n    return this._translateX\n  }\n\n  public set translateX(v: number) {\n    this.setVariable('translateX', v)\n    this._translateX = v\n  }\n\n  public calculateTranslateX(deltaPercentX: number): number {\n    return this.destination + deltaPercentX / this.slideAmount\n  }\n\n  public isSwipeByVelocity(velosity: number): boolean {\n    return this.minSwipeVelosity < velosity\n  }\n\n  public isSwipeByDeltaPercent(deltaPercentX: number): boolean {\n    return Math.abs(deltaPercentX) > this.minDeltaPercentSwipe\n  }\n\n  public swipeOrDoNot = (velocity: number, deltaPercentX: number, dir: string): void => {\n    if (this.isSwipeByVelocity(velocity) || this.isSwipeByDeltaPercent(deltaPercentX)) {\n      if (!this.isLastSlide && dir === 'left') {\n        this.slide += 1\n      } else if (!this.isFirstSlide && dir === 'right') {\n        this.slide -= 1\n      }\n    }\n\n    this.animate(velocity)\n  }\n\n  get isLastSlide(): boolean {\n    return this.slide === this.slideAmount - 1\n  }\n\n  get isFirstSlide(): boolean {\n    return this.slide === 0\n  }\n}\n","import { CarouselState, SetVariable } from './CarouselState'\n\nexport type DataOnUserInteraction = {\n  dir: 'left' | 'right' | 'up' | 'down' | 'mousedown' | 'nomove'\n  velocity: number\n  is: {\n    start: boolean\n    end: boolean\n    touch: boolean\n  }\n  deltaPercent: {\n    x: number\n    y: number\n  }\n}\n\nexport type CarouselStateManagerSettings = {\n  setVariable: SetVariable\n  slideAmount: number\n  slideDefault?: number\n  minSwipeVelosity?: number\n  maxSwipeVelosity?: number\n  minDeltaSwipe?: number\n}\n\nclass CarouselStateManager {\n  private readonly state: CarouselState\n\n  constructor({\n    setVariable,\n    slideAmount,\n    slideDefault = 0,\n    minSwipeVelosity = 0.5,\n    maxSwipeVelosity = 1,\n    minDeltaSwipe = 40,\n  }: CarouselStateManagerSettings) {\n    const translateX = (slideDefault / slideAmount) * 100\n\n    this.state = new CarouselState(\n      setVariable,\n      translateX,\n      slideAmount,\n      slideDefault,\n      minSwipeVelosity,\n      maxSwipeVelosity,\n      minDeltaSwipe,\n    )\n  }\n\n  public swipeStart = async (data: DataOnUserInteraction): Promise<void> => {\n    this.state.smooth(200)\n    this.state.translateX = this.state.calculateTranslateX(-data.deltaPercent.x)\n  }\n\n  public swipeListener = (data: DataOnUserInteraction): void => {\n    if (data.is.start) this.swipeStart(data)\n    else if (data.is.end) this.swipeEnd(data)\n    else if (Math.abs(data.deltaPercent.x) > 2) {\n      this.state.translateX = this.state.calculateTranslateX(-data.deltaPercent.x)\n    }\n  }\n\n  private swipeEnd = async (data: DataOnUserInteraction): Promise<void> => {\n    if (data.is.touch) await this.state.smooth(0)\n    this.state.swipeOrDoNot(data.velocity, data.deltaPercent.x, data.dir)\n  }\n\n  public setActiveSlide = async (slide: number, transition?: number): Promise<void> => {\n    await this.state.smooth(transition || 500)\n    this.state.slide = slide\n    this.state.translateX = this.state.destination\n    setTimeout(() => this.state.smooth(0), 500)\n  }\n}\n\nexport default CarouselStateManager\n","import { useMemo } from 'react'\nimport CarouselStateManager, { CarouselStateManagerSettings } from './CarouselStateManager'\n\ntype UseCarousel = (c: UseCarouselSettings) => CarouselStateManager\n\ntype UseCarouselSettings = CarouselStateManagerSettings\n\nconst useCarousel: UseCarousel = (settings) => {\n  const carousel = useMemo(() => new CarouselStateManager(settings), [])\n\n  return carousel\n}\n\nexport default useCarousel\n","import React, { FC, useState } from 'react'\n\nimport Portal from '@/components/popup/_popup'\nimport Button from '@/components/button'\n\nexport type OnChange = (v: boolean) => void\n\nexport type FormRemove = {\n  doNotAskOnRemove: boolean\n}\n\nexport type PopupLicenseProps = {\n  stateRef?: React.MutableRefObject<undefined | boolean>\n  setStateRef?: React.MutableRefObject<undefined | OnChange>\n  onAccept?: () => void\n}\n\nconst PopupLicense: FC<PopupLicenseProps> = ({ onAccept, stateRef, setStateRef }): JSX.Element => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  stateRef = stateRef || { current: undefined }\n  setStateRef = setStateRef || { current: undefined }\n\n  stateRef.current = isOpen\n  setStateRef.current = setIsOpen\n\n  return (\n    <Portal title=\"Пользовательское соглашение\" onClose={() => setIsOpen(false)} isOpen={isOpen}>\n      <article className=\"fs18 margin-top\" style={{ maxWidth: '70vw' }}>\n        <p>\n          Настоящим подтверждаю, что: Я даю свое согласие владельцу Web-портала для обработки данных, предоставленных\n          мной в регистрационной форме. Я согласен, что обработка данных предполагает любую обработку с использованием\n          или без использования автоматических средств. Обработка данных осуществляется с целью создания и сопровождения\n          клиентской базы данных, оказания услуг ООО «СТТ» или его аффилированными лицами или партнерами. Данное\n          согласие предоставляется без ограничения срока действия.\n        </p>\n        <p>\n          Я согласен получать рекламные и другие материалы в виде SMS-сообщений, электронных сообщений и устной\n          информации, предоставляемой по телефону; и для этих целей можно использовать предоставленные мной контактные\n          данные. Согласие предоставляется на неопределенный срок. Я полностью осознаю, что согласие может быть отменено\n          мной с помощью обращения в отдел.\n        </p>\n      </article>\n      {onAccept && (\n        <Button className=\"fs20 margin-top\" onClick={onAcceptButtonClick}>\n          Принять\n        </Button>\n      )}\n    </Portal>\n  )\n\n  function onAcceptButtonClick(): void {\n    setIsOpen(false)\n    onAccept?.()\n  }\n}\n\nexport default PopupLicense\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 7 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M6.76 5.214c0-.08-.04-.17-.1-.23L1.978.301a.346.346 0 00-.232-.1c-.08 0-.17.04-.23.1l-.503.503c-.06.06-.1.15-.1.23 0 .081.04.171.1.232l3.948 3.947-3.948 3.948c-.06.06-.1.15-.1.23 0 .091.04.172.1.232l.502.502c.06.06.151.1.231.1.08 0 .171-.04.232-.1l4.68-4.68c.06-.061.1-.151.1-.232z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppCloseCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg fill=\"currentColor\" viewBox=\"0 0 512 512\" width=\"14px\" height=\"14px\" {...svgProps}>\n        <path d=\"M257 0C116.39 0 0 114.39 0 255s116.39 257 257 257 255-116.39 255-257S397.61 0 257 0zm126.22 338.79c11.7 11.7 11.7 30.73 0 42.44-11.61 11.6-30.64 11.79-42.44 0L257 297.42l-85.79 83.82c-11.7 11.7-30.73 11.7-42.44 0-11.7-11.7-11.7-30.73 0-42.44l83.8-83.8-83.8-83.8c-11.7-11.71-11.7-30.74 0-42.44 11.71-11.7 30.74-11.7 42.44 0L257 212.58l83.78-83.82c11.68-11.68 30.71-11.72 42.44 0 11.7 11.7 11.7 30.73 0 42.44l-83.8 83.8 83.8 83.79z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppLoadingCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg\n        className=\"rotateRight\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 399.389 399.389\"\n        width=\"14px\"\n        height=\"14px\"\n        {...svgProps}\n      >\n        <path d=\"M340.896 58.489C303.18 20.773 253.031.001 199.693.001c-53.34 0-103.487 20.771-141.204 58.488C20.772 96.207 0 146.355 0 199.694c0 53.34 20.772 103.489 58.49 141.206 37.717 37.717 87.864 58.488 141.204 58.488 53.339 0 103.486-20.771 141.205-58.488 37.717-37.717 58.49-87.865 58.49-141.206-.002-53.339-20.776-103.487-58.493-141.205zM77.457 199.694c0-67.401 54.835-122.236 122.236-122.236S321.93 132.293 321.93 199.694s-54.836 122.237-122.237 122.237S77.457 267.096 77.457 199.694zm250.604 128.369c-34.289 34.287-79.877 53.17-128.368 53.17v-41.147c77.413 0 140.389-62.979 140.389-140.391 0-77.412-62.979-140.391-140.389-140.391-4.593 0-9.134.229-13.615.662V18.655c4.508-.332 9.049-.5 13.615-.5 48.491 0 94.079 18.883 128.368 53.171 34.289 34.289 53.172 79.878 53.172 128.368-.001 48.493-18.883 94.082-53.172 128.369z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import './default.less'\n\nimport './index.less'\n\nimport './app.less'\n\nimport React, { FC } from 'react'\n\nimport cx from 'clsx'\n\nimport Select, { SelectProps } from 'rc-select'\n\nimport NextLabel from '@/components/svg/arrowOutlinedIcon'\n\nimport CloseIcon from './icons/close'\nimport LoadingIcon from './icons/loading'\n\ntype SelectAppProps = SelectProps & {\n  className?: string\n  wide?: boolean\n}\n\nconst SelectApp: FC<SelectAppProps> = ({\n  className,\n  optionLabelProp,\n  value,\n  clearIcon,\n  allowClear = true,\n  loading,\n  wide,\n  ...props\n}): JSX.Element => {\n  const additionalClassNames = cx(value ? 'rc-select-selected' : 'rc-select-unselected', wide && 'wide')\n\n  const notFoundContent = (\n    <div className=\"fs20 f-center-center\" style={{ height: '15rem' }}>\n      Пусто\n    </div>\n  )\n\n  return (\n    <Select\n      className={cx('SelectApp rc-select-customize-input', className, additionalClassNames)}\n      notFoundContent={notFoundContent}\n      {...props}\n      allowClear={allowClear}\n      inputIcon={loading ? <LoadingIcon /> : <NextLabel style={{ transform: 'rotate(90deg)' }} className=\"iconApp\" />}\n      clearIcon={clearIcon || <CloseIcon className=\"iconApp\" />}\n      value={value === '' ? undefined : value}\n      menuItemSelectedIcon=\"\"\n    />\n  )\n}\n\nexport function objToOptions(obj: Record<string, string>): Record<'value' | 'label', string>[] {\n  return Object.entries(obj).map(([value, label]) => ({ value, label }))\n}\n\nexport default SelectApp\n","import React, { FC } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { DefaultValueType } from 'rc-select/lib/interface/generator'\nimport Select from '@/components/select'\n\nimport * as cssVariableActions from '@/store/action/cssVariable'\n\nimport { getCurrentThemeName } from '@/util/cssVariables'\nimport themes from '@/constant/theme'\nimport { RootState } from '@/type/state'\n\nconst ThemeSetter: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const name = useSelector((s: RootState) => s.cssVariableState.name)\n  // console.log(getCurrentThemeName())\n  // console.log('render')\n\n  return (\n    <span className=\"fs16\">\n      <Select\n        key={name}\n        style={{\n          width: '20rem',\n          minWidth: '5rem',\n          marginLeft: '2rem',\n        }}\n        value={getCurrentThemeName()}\n        options={themesToOptions()}\n        onChange={onChange}\n        allowClear={false}\n      />\n    </span>\n  )\n\n  function themesToOptions() {\n    return Object.entries(themes).map(([value, item]) => ({ value, label: item.name }))\n  }\n\n  function onChange(themeName: DefaultValueType) {\n    dsp(cssVariableActions.setTheme((themeName as unknown) as string))\n  }\n}\n\nexport default ThemeSetter\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport './_sider.less'\n\nimport React, { FC, memo, useMemo, useRef } from 'react'\n\nimport { Link, useLocation } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport c from 'clsx'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport Route from '@savchenko91/rc-route-constant'\n\nimport ArrowIcon from '@/components/svg/arrowFilledIcon'\n\nimport ROUTES, { Payload } from '@/constant/routes'\n\n// import siderBottomImg from '@/img/svg/sider-bottom.svg'\n\nimport IconInCircle from '@/components/IconInCircle/_iconInCircle'\nimport PERMISSIONS from '@/helper/permission'\nimport useSetCSSVariable from '@/hook/useSetCSSVariable'\nimport useCarousel from '@/hook/useCarousel/useCarousel'\n\nimport PopupLicense from '@/template/popupLicense/_popupLicense'\nimport ThemeSetter from '@/template/themeSetter/themeSetter'\n\nimport * as cssVariableActions from '@/store/action/cssVariable'\n\nimport { RootState } from '@/type/state'\n\nconst AppSider: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const location = useLocation()\n\n  const menu = useMemo(() => {\n    const memoMenu: Route<Payload>[] = []\n    if (PERMISSIONS.PERMISSION_DEALER_CARS.is || PERMISSIONS.PERMISSION_DEALER_CLIENTS.is) {\n      memoMenu.push(ROUTES.SEARCH)\n    }\n    if (PERMISSIONS.PERMISSION_CLIENT_FEEDBACK.is) {\n      memoMenu.push(ROUTES.FEEDBACK)\n    }\n    if (PERMISSIONS.PERMISSION_PARAMS_CONFIG.is) {\n      memoMenu.push(ROUTES.PARAMS_CONFIG_LIST)\n    }\n    if (PERMISSIONS.PERMISSION_MAILINGS.is) {\n      memoMenu.push(ROUTES.MAILING)\n    }\n    if (PERMISSIONS.PERMISSION_MANAGEMENT.is) {\n      memoMenu.push(ROUTES.USER_LIST)\n    }\n\n    return memoMenu\n  }, [])\n\n  const togglePopupLicense = useRef<(b: boolean) => void | undefined>()\n\n  const { cssVariableState } = useSelector((s: RootState): RootState => s)\n\n  const carousel = useCarousel({ slideAmount: menu.length, setVariable: changeSelectorPosition })\n\n  const [siderRef, setSiderCSSVariable] = useSetCSSVariable({ prefix: 'sider-' })\n\n  carousel.setActiveSlide(-1, 200)\n\n  return (\n    <div className={c('Sider', cssVariableState.isSiderCollapsed && 'Sider--collapsed')} ref={siderRef}>\n      <div className=\"menu hideScroll\">\n        <PopupLicense setStateRef={togglePopupLicense} />\n        <ol className=\"linkList\">\n          <div className=\"selector\" />\n          {menu.map((menuItem, i) => {\n            const active = menuItem.isPartOf(location.pathname)\n\n            if (active) carousel.setActiveSlide(i, 200)\n\n            return (\n              <Link\n                to={menuItem.REDIRECT_PATH}\n                className={c(active && 'active', menuItem.PAYLOAD.LABEL)}\n                key={menuItem.REDIRECT_PATH}\n              >\n                <li className=\"f-left-center\">\n                  <div className=\"collapseContent relative\">\n                    <IconInCircle className=\"absolute-centered\">{menuItem.PAYLOAD.ICON}</IconInCircle>\n                  </div>\n                  <SwitchTransition>\n                    <CSSTransition\n                      key={cssVariableState.isSiderCollapsed.toString()}\n                      timeout={200}\n                      classNames=\"appear\"\n                      unmountOnExit\n                    >\n                      {!cssVariableState.isSiderCollapsed ? <span className=\"menuLabel\">{menuItem.NAME}</span> : <></>}\n                    </CSSTransition>\n                  </SwitchTransition>\n                </li>\n              </Link>\n            )\n          })}\n        </ol>\n        <ol>\n          <a style={{ cursor: 'pointer' }} onClick={setCollapsedHandler}>\n            <li className=\"collapseButton f-center-center\">\n              <SwitchTransition>\n                <CSSTransition\n                  key={cssVariableState.isSiderCollapsed.toString()}\n                  timeout={200}\n                  classNames=\"appear\"\n                  unmountOnExit\n                >\n                  {cssVariableState.isSiderCollapsed ? (\n                    <ArrowIcon />\n                  ) : (\n                    <ArrowIcon style={{ transform: 'rotate(180deg)' }} />\n                  )}\n                </CSSTransition>\n              </SwitchTransition>\n            </li>\n          </a>\n        </ol>\n      </div>\n      <div className=\"siderBottom\">\n        {/* <img src={siderBottomImg} className=\"bottomImg\" alt=\"am i beautiful?\" /> */}\n        <SwitchTransition>\n          <CSSTransition\n            key={cssVariableState.isSiderCollapsed.toString()}\n            timeout={200}\n            classNames=\"appear\"\n            unmountOnExit\n          >\n            {!cssVariableState.isSiderCollapsed ? (\n              <div className=\"fc\">\n                <div>\n                  <a\n                    className=\"privacyPolicy\"\n                    style={{ cursor: 'pointer' }}\n                    onClick={() => togglePopupLicense.current?.(true)}\n                  >\n                    Политика конфиденциальности\n                  </a>\n                </div>\n                <ThemeSetter />\n              </div>\n            ) : (\n              <></>\n            )}\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </div>\n  )\n\n  function changeSelectorPosition(key: string, value: number) {\n    setSiderCSSVariable(`selector-${key}`, value)\n  }\n\n  function setCollapsedHandler(): void {\n    const isSiderCollapsed = !cssVariableState.isSiderCollapsed\n\n    localStorage.setItem('isSiderCollapsed', isSiderCollapsed.toString())\n\n    dsp(cssVariableActions.set({ isSiderCollapsed }))\n  }\n}\n\nconst x = memo(AppSider)\nexport default x\n","import React from 'react'\n\nconst NotFound = (): JSX.Element => {\n  return (\n    <div className=\"wrap fs24 fc-center-center\">\n      <p className=\"fs24\">404</p>\n      <p>не найдено</p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import React, { FC } from 'react'\n\nimport Skeleton from 'react-loading-skeleton'\n\ntype SkeletProps = {\n  load?: unknown\n  row?: {\n    original?: {\n      skl?: true\n    }\n  }\n}\n\nconst Skelet: FC<SkeletProps> = ({ children, load, row }): JSX.Element => {\n  return <>{!load && !row?.original?.skl ? children : <Skeleton />}</>\n}\n\nexport function SklList<O extends Array<unknown>>(\n  arr: O,\n  loading: boolean,\n  name?: string,\n  defaultAmount = 3,\n): typeof arr {\n  if (arr.length) {\n    localStorage.setItem(`skl-${name}`, arr.length.toString())\n    return arr\n  }\n\n  if (!loading) return arr\n\n  const amountLocal = parseInt(localStorage.getItem(`skl-${name}`) || '', 10) || defaultAmount\n\n  return (Array(amountLocal).fill({ skl: true }, 0, amountLocal) as unknown) as O\n}\n\nexport default Skelet\n","import './_tab.about.less'\n\nimport React, { FC, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { YMaps, Map, Placemark } from 'react-yandex-maps'\n\nimport Skeleton from 'react-loading-skeleton'\n\nimport cx from 'clsx'\n\nimport Skl from '@/components/skelet/_skelet'\n\nimport * as dealerActions from '@/store/action/dealer'\n\nimport { RootState } from '@/type/state'\n\nconst AboutTab: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const mapHeight = '40rem'\n\n  const { dealerState } = useSelector((s: RootState): RootState => s)\n  const { entity } = dealerState\n\n  useEffect(getCurrentDealer, [])\n\n  const geolocation = useMemo(buildGeolocation, [entity])\n\n  return (\n    <div className=\"AboutTab scrollableContent\">\n      <section className=\"first\">\n        <h1>О дилере</h1>\n      </section>\n      <section className=\"relative\">\n        {/* <div className=\"operationModeCard  absolute-top-right bgPrimary white\">\n          <div className=\"wrap relative fs18\">\n            <ClockIcon width=\"16rem\" height=\"16rem\" />\n            <p className=\"operationMode\">Режим работы:</p>\n            <p>ПН-ПТ с 9:00 до 20:00</p>\n            <p>СБ-ВС с 10:00 до 16:00</p>\n          </div>\n        </div> */}\n        <h2>Информация</h2>\n        <div className={cx('info', !entity && 'loading')}>\n          <p>\n            <Skl load={!entity}>\n              <span className=\"bold\">Название:</span>\n              &nbsp;\n              {entity?.name || '—'}\n            </Skl>\n          </p>\n          <p>\n            <Skl load={!entity}>\n              <span className=\"bold\">Адрес:</span>\n              &nbsp;\n              {entity?.address || '—'}\n            </Skl>\n          </p>\n          <p>\n            <Skl load={!entity}>\n              <span className=\"bold\">Телефон:</span>\n              &nbsp;\n              {entity?.phones?.join('') || '—'}\n            </Skl>\n          </p>\n          <p>\n            <Skl load={!entity}>\n              <span className=\"bold\">Email:</span>\n              &nbsp;\n              {entity?.mail || '—'}\n            </Skl>\n          </p>\n          {/* <p>\n            <Skl load={!entity}>\n              <span className=\"bold\">Сайт:</span>\n              &nbsp;\n              {entity?.siteAddress || '—'}\n            </Skl>\n          </p> */}\n        </div>\n      </section>\n      {entity?.geolocation && (\n        <section className=\"last\">\n          <h2>Схема проезда</h2>\n          <div\n            className=\"YMapsWrapper relative\"\n            style={{ marginBottom: '8rem', height: mapHeight, overflow: 'hidden' }}\n          >\n            {/* <img src={mapSrc} alt=\"map\" className=\"fitCover\" style={{ width: '100%', height }} /> */}\n            <Skeleton width=\"100%\" height={mapHeight} className=\"fitCover\" />\n            <YMaps>\n              <Map\n                defaultState={{ center: geolocation, zoom: 9 }}\n                style={{ width: 'calc(100% + 16rem)', height: mapHeight }}\n              >\n                <Placemark geometry={geolocation} />\n              </Map>\n            </YMaps>\n          </div>\n        </section>\n      )}\n    </div>\n  )\n\n  function getCurrentDealer() {\n    dsp(dealerActions.getCurrent())\n  }\n\n  function buildGeolocation(): number[] {\n    if (entity?.geolocation) {\n      const [lo, la] = entity?.geolocation.split(',') as string[]\n\n      return [parseFloat(lo), parseFloat(la)]\n    }\n\n    return [0, 0]\n  }\n}\n\nexport default AboutTab\n","import { REDUX_API_MIDDLEWARE as type, APIAction, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport { Action } from '@/type/type.d'\nimport { DealerState } from '@/type/state.d'\n\nimport * as CONSTANTS from '../constant/dealer'\n\nexport const set = (payload: Partial<DealerState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const getCurrent = (onSuccess?: OnSuccess): APIAction => {\n  return {\n    type,\n    method: 'get',\n    url: `/api/dealers/current`,\n    stageActionTypes: CONSTANTS.GET_CURRENT,\n    onSuccess,\n  }\n}\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\nimport { Link } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\ntype SearchHeaderProps = {\n  className?: string\n  isCarActiveTab: boolean\n}\n\nconst SearchHeader: FC<SearchHeaderProps> = ({ className, isCarActiveTab }): JSX.Element => {\n  return (\n    <h1 className={cx('SearchHeader', className)}>\n      <Link\n        to={ROUTES.SEARCH_CLIENT.REDIRECT_PATH}\n        className={cx(!isCarActiveTab ? 'primary' : 'default')}\n        style={{ marginRight: '9rem' }}\n      >\n        Клиенты\n      </Link>\n      <Link to={ROUTES.SEARCH_CAR.REDIRECT_PATH} className={cx(isCarActiveTab ? 'primary' : 'default')}>\n        Автомобили\n      </Link>\n    </h1>\n  )\n}\n\nexport default SearchHeader\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" color=\"currentColor\" height=\"1em\" viewBox=\"0 0 478.125 478.125\" {...props}>\n        <path\n          fill=\"currentColor\"\n          d=\"M439.875 86.062H38.25C17.212 86.062 0 103.275 0 124.312v229.5c0 21.037 17.212 38.25 38.25 38.25h401.625c21.037 0 38.25-17.213 38.25-38.25v-229.5c0-21.037-17.213-38.25-38.25-38.25zm-9.563 19.126l-191.25 166.388-191.25-166.388h382.5zM24.862 367.2c-3.825-3.825-5.737-7.65-5.737-13.388v-229.5c0-5.737 1.913-9.562 5.737-13.388l147.263 128.138L24.862 367.2zm22.95 5.738L187.425 252.45l51.638 43.987L290.7 252.45l139.612 120.487h-382.5zM459 353.812c0 5.737-1.912 9.562-5.737 13.388L306 239.062l147.263-128.138c3.825 3.825 5.737 7.65 5.737 13.388v229.5z\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","// eslint-disable import/no-extraneous-dependencies\n\nimport { CSSMotionProps, MotionEventHandler, MotionEndEventHandler } from 'rc-motion'\n\nconst getCollapsedHeight: MotionEventHandler = () => ({ height: 0, opacity: 0 })\nconst getRealHeight: MotionEventHandler = (node) => ({ height: node.scrollHeight, opacity: 1 })\nconst getCurrentHeight: MotionEventHandler = (node) => ({ height: node.offsetHeight })\nconst skipOpacityTransition: MotionEndEventHandler = (_, event) => (event as TransitionEvent).propertyName === 'height'\n\nconst collapseMotion: CSSMotionProps = {\n  motionName: 'rc-collapse-motion',\n  onEnterStart: getCollapsedHeight,\n  onEnterActive: getRealHeight,\n  onLeaveStart: getCurrentHeight,\n  onLeaveActive: getCollapsedHeight,\n  onEnterEnd: skipOpacityTransition,\n  onLeaveEnd: skipOpacityTransition,\n  motionDeadline: 100,\n  leavedClassName: 'rc-collapse-content-hidden',\n}\n\nexport default collapseMotion\n\nexport function delayListItem(i: number, length: number, amount = 11): number {\n  let ms = amount\n\n  if (i < amount) {\n    ms = i\n  } else if (length - i > amount) {\n    ms = length - i\n  }\n\n  return ms\n}\n","import qs from 'qs'\nimport { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { Action } from '@/type/type.d'\nimport { OnStage } from '@/type/transfer'\nimport { CarModel, Content, Id } from '@/type/model'\nimport { CarFilter, CarState } from '@/type/state'\n\nimport * as CONSTANTS from '../constant/car'\n\nexport const set = (payload: Partial<CarState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const get = (id: string): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/cars/${id}`,\n  method: 'get',\n})\n\nexport const getCard = (uuid: Id, onStage?: OnStage): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_CARD,\n    url: `/api/cars/${uuid}/telematics`,\n    method: 'get',\n    ...onStage,\n  }\n}\n\nexport const getList = (\n  requestFilter: CarState['filter'],\n  onStage?: OnStage<Content<CarModel[]>, CarFilter>,\n): APIAction<Content<CarModel[]>, CarFilter> => {\n  const { page, size, ...body } = requestFilter\n\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/cars${qs.stringify({ page, size }, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'post',\n    body,\n    ...onStage,\n  }\n}\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype EmptyProps = {\n  className?: string\n}\n\nconst Empty: FC<EmptyProps> = ({ className }): JSX.Element => {\n  return <div className={cx('Empty wrap fs22 gray', className)}>Ничего не найдено</div>\n}\n\nexport default Empty\n","// eslint-disable import/no-extraneous-dependencies\n\nimport './_collapseHeader.less'\n\nimport React, { FC } from 'react'\n\nimport c from 'clsx'\n\nimport Skl from '@/components/skelet/_skelet'\n\nimport ArrowIcon from '@/components/svg/arrowFilledIcon'\n\ntype CollapseHeaderProps = {\n  title: string\n  icon?: JSX.Element\n  className?: string\n  noArrow?: boolean\n}\n\nconst CollapseHeader: FC<CollapseHeaderProps> = ({ title, icon, className, noArrow }): JSX.Element => {\n  return (\n    <div className={c('CollapseHeader f-left-center', className)}>\n      {icon && <span className=\"collapseHeaderIcon\">{icon}</span>}\n      <span className=\"collapseTitle wrap\">\n        <Skl load={!title}>{title}</Skl>\n      </span>\n      {title && !noArrow && <ArrowIcon className=\"collapseArrowIcon\" />}\n    </div>\n  )\n}\n\nexport default CollapseHeader\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M8.88 2.079L6.834.115A.406.406 0 006.545 0H1.227C.55 0 0 .528 0 1.179V9.82C0 10.472.55 11 1.227 11h6.546C8.45 11 9 10.472 9 9.821V2.357a.39.39 0 00-.12-.278zm-1.925-.738l.648.623h-.648v-.623zm1.227 8.48a.401.401 0 01-.41.393H1.228a.401.401 0 01-.409-.393V1.18c0-.217.183-.393.41-.393h4.908v1.571c0 .217.184.393.41.393h1.636v7.071z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M1.933 3.793c0-.21.176-.38.395-.38h4.344c.219 0 .395.17.395.38s-.176.38-.395.38H2.328a.387.387 0 01-.395-.38zM1.933 5.619c0-.21.176-.38.395-.38h4.344c.218 0 .395.17.395.38s-.177.379-.395.379H2.328a.387.387 0 01-.395-.38zM1.933 7.444c0-.21.176-.38.395-.38h4.344c.218 0 .395.17.395.38s-.177.38-.395.38H2.328a.387.387 0 01-.395-.38z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 30 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.965 1.63a13.293 13.293 0 00-2.77 4.299A13.678 13.678 0 002.222 11c0 1.74.33 3.464.973 5.071a13.293 13.293 0 002.77 4.3L4.394 22a15.605 15.605 0 01-3.252-5.047A16.057 16.057 0 010 11c0-2.043.388-4.066 1.142-5.953A15.605 15.605 0 014.394 0l1.57 1.63zM26.805 5.929a13.294 13.294 0 00-2.77-4.3L25.606 0a15.605 15.605 0 013.252 5.047A16.058 16.058 0 0130 11c0 2.043-.388 4.066-1.142 5.953A15.605 15.605 0 0125.606 22l-1.57-1.63a13.294 13.294 0 002.77-4.299c.642-1.607.972-3.33.972-5.071 0-1.74-.33-3.464-.973-5.071z\"\n          fill=\"currentColor\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M17.38 2.726a8.054 8.054 0 00-5.608.297 8.451 8.451 0 00-4.152 3.92 8.925 8.925 0 00-.811 5.762 8.702 8.702 0 002.897 4.988 8.15 8.15 0 005.291 1.948L15 20.793v-1.152a8.014 8.014 0 003.183-.66 8.259 8.259 0 002.694-1.88l.002-.001a8.779 8.779 0 002.391-5.269 8.889 8.889 0 00-1.374-5.646 8.362 8.362 0 00-4.517-3.46zM15 21.946a10.323 10.323 0 01-6.7-2.469c-1.89-1.602-3.188-3.834-3.67-6.317A11.305 11.305 0 015.659 5.86c1.147-2.236 3.006-3.99 5.26-4.965A10.201 10.201 0 0118.02.52c2.338.73 4.36 2.28 5.72 4.383a11.26 11.26 0 011.742 7.151 11.12 11.12 0 01-3.029 6.672 10.478 10.478 0 01-3.415 2.383c-1.28.553-2.651.838-4.037.838z\"\n          fill=\"currentColor\"\n        />\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M16.11 5.24v6.912h-2.22V5.24h2.22z\" fill=\"currentColor\" />\n        <path\n          d=\"M15 16.3c.614 0 1.11-.516 1.11-1.152 0-.636-.496-1.152-1.11-1.152-.614 0-1.11.515-1.11 1.152 0 .636.496 1.152 1.11 1.152z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import { REDUX_API_MIDDLEWARE as type, APIAction, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport { TelematicHistoryState } from '@/type/state'\nimport { Action, Period } from '@/type/type'\nimport { Id, TelematicHistoryModel } from '@/type/model'\n\nimport * as CONSTANTS from '../constant/telematicHistory'\n\n// ------------------------------------\n// Set\n// ------------------------------------\n\nexport const set = (payload: Partial<TelematicHistoryState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\n// ------------------------------------\n// Get\n// ------------------------------------\n\nexport type GetOneProps = {\n  carUuid: Id\n  body: {\n    [k in keyof TelematicHistoryModel]: Period\n  }\n}\n\nexport const getOne = ({ carUuid, body }: GetOneProps, onSuccess?: OnSuccess): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_ONE,\n    url: `/api/telematics-records/${carUuid}`,\n    method: 'post',\n    onSuccess,\n    body,\n  }\n}\n","import './_chartWrapper.less'\n\nimport React, { FC } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport Chart from 'chart.js'\n\nimport { CSSVariableState, RootState } from '@/type/state'\n\nimport { ChartWrapperInterface } from './chartWrapperType'\n\nconst ChartWrapper: FC<ChartWrapperInterface> = ({ handleChangeGraphController }: ChartWrapperInterface) => {\n  const graphRef = React.useRef<null | HTMLCanvasElement>(null)\n\n  const [graphNotRender, setGraphNotRender] = React.useState<boolean>(false)\n\n  const cssVariableState = useSelector((s: RootState): CSSVariableState => s.cssVariableState)\n\n  React.useEffect(() => {\n    if (graphRef && !graphNotRender) {\n      setGraphNotRender(true)\n      const graph = new Chart(graphRef?.current || '', {\n        type: 'line',\n        data: {\n          labels: [''],\n          datasets: [\n            {\n              label: '',\n              fill: cssVariableState.primary,\n              borderColor: cssVariableState.primary,\n              data: [0],\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          legend: {\n            display: false,\n          },\n          scales: {\n            xAxes: [\n              {\n                ticks: {\n                  fontColor: cssVariableState.darkGray,\n                },\n              },\n            ],\n            yAxes: [\n              {\n                gridLines: {\n                  color: cssVariableState.darkGray,\n                },\n              },\n            ],\n          },\n        },\n        //   options,\n      })\n      if (handleChangeGraphController) {\n        handleChangeGraphController(graph)\n      }\n    }\n  }, [graphRef, graphNotRender])\n  return (\n    <div className=\"chartWrapper\">\n      <canvas id=\"graphChart\" className=\"chart\" ref={graphRef} height=\"400\" />\n    </div>\n  )\n}\nexport default ChartWrapper\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppCloseCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg fill=\"currentColor\" viewBox=\"0 0 512 512\" width=\"14px\" height=\"14px\" {...svgProps}>\n        <path d=\"M257 0C116.39 0 0 114.39 0 255s116.39 257 257 257 255-116.39 255-257S397.61 0 257 0zm126.22 338.79c11.7 11.7 11.7 30.73 0 42.44-11.61 11.6-30.64 11.79-42.44 0L257 297.42l-85.79 83.82c-11.7 11.7-30.73 11.7-42.44 0-11.7-11.7-11.7-30.73 0-42.44l83.8-83.8-83.8-83.8c-11.7-11.71-11.7-30.74 0-42.44 11.71-11.7 30.74-11.7 42.44 0L257 212.58l83.78-83.82c11.68-11.68 30.71-11.72 42.44 0 11.7 11.7 11.7 30.73 0 42.44l-83.8 83.8 83.8 83.79z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import './defaultCalendar.less'\nimport './defaultDatepicker.less'\nimport './indexDatepicker.less'\n\nimport React, { FC } from 'react'\n\nimport { DateTime } from 'luxon'\n\nimport cx from 'clsx'\n\nimport DatePicker, { DatePickerProps } from 'react-date-picker/dist/entry.nostyle'\n\nimport CloseIcon from './icons/close'\n\ntype DatePickerAppProps = Modify<\n  DatePickerProps,\n  {\n    onChange?: (dt: DateTime | null) => void\n    value?: string | DateTime\n    minDate?: string\n    maxDate?: string\n    wide?: boolean\n  }\n>\n\nconst DatePickerApp: FC<DatePickerAppProps> = ({\n  className,\n  onChange,\n  value,\n  minDate,\n  maxDate,\n  wide,\n  ...props\n}): JSX.Element => {\n  const additionalClassName = cx(wide && 'wide', value ? 'set' : 'unset')\n\n  return (\n    <DatePicker\n      className={cx('DatePickerApp', className, additionalClassName)}\n      dayPlaceholder=\"ДД\"\n      monthPlaceholder=\"ММ\"\n      yearPlaceholder=\"ГГГГ\"\n      locale=\"ru-RU\"\n      clearIcon={<CloseIcon />}\n      {...props}\n      calendarIcon={null}\n      onChange={onDatePickerChange}\n      value={value ? toJSDate(value.toString()) : undefined}\n      minDate={minDate ? toJSDate(minDate) : undefined}\n      maxDate={maxDate ? toJSDate(maxDate) : undefined}\n    />\n  )\n\n  function onDatePickerChange(date: Date | Date[]) {\n    if (date) {\n      onChange?.(DateTime.fromJSDate(date as Date).toUTC())\n    } else {\n      onChange?.(null)\n    }\n  }\n\n  function toJSDate(string: string): Date {\n    return DateTime.fromISO(string).toJSDate()\n  }\n}\n\nexport default DatePickerApp\n\ntype Modify<T, R> = Omit<T, keyof R> & R\n","import './_telematicTable.less'\n\nimport React, { FC, useEffect, useState } from 'react'\n\nimport { TelematicItemType } from '@/type/type'\n\nimport { DateTime } from 'luxon'\n\ntype TelematicTableProps = {\n  telematicResult: TelematicItemType[]\n  maxDate: string\n  minDate: string\n}\n\nconst TelematicTable: FC<TelematicTableProps> = ({ telematicResult, maxDate, minDate }): JSX.Element => {\n  const [telematicResultFiltered, setTelematicResultFiltered] = useState<TelematicItemType[]>()\n\n  useEffect(() => {\n    if (telematicResult) {\n      const arr: TelematicItemType[] = telematicResult.filter((item) =>\n        checkDatePeriod(minDate, maxDate, item.activationDate) ? item : null,\n      )\n      if (arr) setTelematicResultFiltered(arr)\n    }\n  }, [telematicResult])\n  return telematicResultFiltered && telematicResultFiltered.length ? (\n    <div className=\"telematicTable f\">\n      <div>\n        <p className=\"telematicTableHeader\">Время и дата сигнала</p>\n        <ul className=\"fc\">\n          {telematicResultFiltered.map((i: TelematicItemType) => (\n            <li key={i.activationDate} className=\"telematicTableItem telematicTableItemSmall\">\n              {getFormattedDate(i.activationDate)}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <p className=\"telematicTableHeader\">Количество срабатываний</p>\n        <ul className=\"fc\">\n          {telematicResultFiltered.map((i: TelematicItemType) => (\n            <li key={i.sequenceNumber} className=\"telematicTableItem telematicTableItemBold\">\n              {i.sequenceNumber}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <p className=\"telematicTableHeader\">Пробег до сигнала, км</p>\n        <ul className=\"fc\">\n          {telematicResultFiltered.map((i: TelematicItemType) => (\n            <li key={i.odometer} className=\"telematicTableItem\">\n              {i.odometer}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  ) : (\n    <></>\n  )\n  function getFormattedDate(dateStr: string) {\n    return DateTime.fromISO(dateStr).toFormat('dd.MM.yyyy HH:mm:ss')\n  }\n\n  function checkDatePeriod(minDateValue: string, maxDateValue: string, currentDateValue: string) {\n    const endTime = new Date(maxDateValue)\n    endTime.setDate(endTime.getDate() + 1)\n    endTime.setSeconds(endTime.getSeconds() - 1)\n    return new Date(currentDateValue) >= new Date(minDateValue) && new Date(currentDateValue) <= new Date(endTime)\n  }\n}\n\nexport default TelematicTable\n","import './parameter.less'\n\nimport React, { FC } from 'react'\n\nimport { useDispatch } from 'react-redux'\n\nimport { DateTime } from 'luxon'\n\nimport { Form, Field } from 'react-final-form'\n\nimport { REDUX_API_MIDDLEWARE } from '@savchenko91/rc-redux-api-mw'\n\nimport Chart from 'chart.js'\n\nimport ChartWrapper from '@/components/chartWrapper/_chartWrapper'\nimport Button from '@/components/button'\nimport DatePicker from '@/components/datepicker/_datepicker'\nimport TelematicTable from '@/components/telematicTable/_telematicTable'\n\nimport { Period, TelematicsParamsType } from '@/type/type'\nimport { GET_ONE } from '@/store/constant/telematicHistory'\n\ntype ParameterProps = {\n  initialValues: Period\n  telemanticKey: string\n  isOpen: boolean\n}\n\nconst TelematicsParams: TelematicsParamsType<boolean> = {\n  isAirbagFiredHistory: true,\n  isBreakFluidLowLevelHistory: true,\n  isCoolantLevelLowHistory: true,\n  isGeneratorMalfunctionHistory: true,\n  isLamp1213History: true,\n  isLamp623History: true,\n  isLamp624History: true,\n}\n\nexport const ParameterPanelContent: FC<ParameterProps> = ({\n  initialValues,\n  telemanticKey,\n  isOpen,\n}): JSX.Element | null => {\n  const [telematicData, setTelematicData] = React.useState([])\n  const [telematicResult, setTelematicResult] = React.useState([])\n\n  const dispatch = useDispatch()\n  const [graphController, setGraphController] = React.useState<null | Chart>(null)\n  React.useEffect(() => {\n    if (graphController && graphController.data.datasets) {\n      graphController.data.datasets[0].data = telematicData?.map(\n        (soloData: { value: number; DateTime: string }) => soloData.value,\n      )\n      graphController.data.labels = telematicData?.map((soloData: { value: number; createdAt: string }) =>\n        DateTime.fromISO(soloData.createdAt).toFormat('dd-MM-yyyy'),\n      )\n\n      graphController.update()\n    }\n  })\n  React.useEffect(() => {\n    if (isOpen) {\n      getInfo(initialValues)\n    }\n  }, [isOpen])\n\n  if (!isOpen) return null\n\n  const handleChangeGraphController = (graphControllerFunction: Chart) => {\n    setGraphController(graphControllerFunction)\n  }\n\n  return (\n    <div className=\"ParameterPanelContent\">\n      <div>\n        <Form<Period>\n          initialValues={initialValues}\n          onSubmit={onSubmit}\n          render={({ handleSubmit, form }) => (\n            <form onSubmit={handleSubmit} className=\"fc formParameter\">\n              <div className=\"fs16 f margin-bottom-s margin-top-xs\">\n                <div className=\"f-left-center margin-right-s nowrap\">Дата подключения</div>\n                <Field name=\"minValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center margin-right-s\">\n                      <DatePicker\n                        maxDate={form.getFieldState('maxValue')?.value as string}\n                        clearIcon={null}\n                        {...input}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"maxValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center margin-right\">\n                      <DatePicker {...input} clearIcon={null} />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <div className=\"formField f-center-center\">\n                  <Button type=\"submit\" className=\"fs11\">\n                    Применить\n                  </Button>\n                </div>\n              </div>\n              <div className=\"f telematicFormParamsBlock\">\n                <ChartWrapper handleChangeGraphController={handleChangeGraphController} />\n                <TelematicTable\n                  telematicResult={telematicResult}\n                  maxDate={form.getFieldState('maxValue')?.value as string}\n                  minDate={form.getFieldState('minValue')?.value as string}\n                />\n              </div>\n            </form>\n          )}\n        />\n      </div>\n    </div>\n  )\n\n  async function getInfo(searchValues: { maxValue: string; minValue: string }) {\n    const someHistoty = `${telemanticKey}History`\n    const carUUID = window.location.href.split('/').reverse()[0]\n\n    await dispatch({\n      type: REDUX_API_MIDDLEWARE,\n      stageActionTypes: GET_ONE,\n      url: `/api/telematics-records/${carUUID}`,\n      method: 'post',\n      body: { [telemanticKey]: searchValues, ...TelematicsParams },\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onSuccess({ body }: any) {\n        setTelematicData(body[telemanticKey] ?? null)\n        setTelematicResult(body[someHistoty] ?? null)\n      },\n    })\n  }\n\n  function onSubmit(v: Period) {\n    getInfo(v)\n  }\n}\n\nexport default ParameterPanelContent\n","import './panelContent.telematicRecord.less'\n\nimport React, { FC, useMemo } from 'react'\n\nimport { useDispatch } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport { DateTime } from 'luxon'\n\nimport c from 'clsx'\n\nimport Button from '@/components/button'\nimport File from '@/components/svg/fileOutlinedIcon'\nimport Key from '@/components/svg/keyOutlinedIcon'\nimport Accumulator from '@/components/svg/accumulatorOutlinedIcon'\nimport Airbag from '@/components/svg/airbagOutlinedIcon'\nimport Coolant from '@/components/svg/coolantOutlinedIcon'\nimport Generator from '@/components/svg/generatorOutlinedIcon'\nimport BrakeFluid from '@/components/svg/brakeFluidOutlinedIcon'\nimport LampStatus from '@/components/svg/lampStatusOutlinedIcon'\n\nimport * as telematicHistoryActions from '@/store/action/telematicHistory'\n\nimport { CarCardModel } from '@/type/model'\nimport { CarState } from '@/type/state'\n\nimport { ParameterPanelContent as ParameterContent } from './parameter'\n\ntype TelematicRecordPanelContentProps = {\n  TelematicRecord: CarCardModel | null\n  Car: CarState['entity']\n}\n\nconst TelematicRecordPanelContent: FC<TelematicRecordPanelContentProps> = ({\n  Car,\n  TelematicRecord,\n}): JSX.Element | null => {\n  if (!TelematicRecord) return null\n  const dsp = useDispatch()\n  const maxValue = useMemo(() => DateTime.fromJSDate(new Date()).toUTC().toString(), [])\n  const minValue = useMemo(() => DateTime.fromJSDate(new Date()).minus({ month: 1 }).toUTC().toString(), [])\n  const [telematigRecordIsOpen, setTelematigRecordIsOpen] = React.useState<Array<boolean>>([])\n  const telematicRecordList = [\n    {\n      key: 'ignitionStatus',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <Key {...props} />,\n      text: 'Зажигание (клемма +15)',\n    },\n    {\n      key: 'powerStatus',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <Accumulator {...props} />,\n      text: 'Питание (клемма +30)',\n    },\n    {\n      key: 'airbagFired',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <Airbag {...props} />,\n      text: 'Сигнализатор о срабатывании подушки безопасности (CAN)',\n    },\n    {\n      key: 'coolantLevelLow',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <Coolant {...props} />,\n      text: 'Статус сигнализатора «Низкий уровень охлаждающей жидкости» (CAN)',\n    },\n    {\n      key: 'generatorMalfunction',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <Generator {...props} />,\n      text: 'Статус сигнализатора «Неисправность генератора» (CAN)',\n    },\n    {\n      key: 'breakFluidLowLevel',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <BrakeFluid {...props} />,\n      text: 'Сигнализатор «Низкий уровень тормозной жидкости»',\n    },\n    {\n      key: 'lamp624',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <LampStatus {...props} />,\n      text: 'Лампа неисправности \"Внимание\" (CAN)',\n    },\n    {\n      key: 'lamp1213',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <LampStatus {...props} />,\n      text: 'Лампа неисправности \"MIL\" (CAN)',\n    },\n    {\n      key: 'lamp623',\n      icon: (props: React.PropsWithChildren<{ className: string }>) => <LampStatus {...props} />,\n      text: 'Лампа неисправности \"Критическая неисправность\" (CAN)',\n    },\n  ]\n  React.useEffect(() => {\n    setTelematigRecordIsOpen(telematicRecordList.map(() => false))\n  }, [])\n  return (\n    <div className=\"TelematicRecordPanelContent\">\n      <div className=\"statusInfoContainer margin-bottom\">\n        <div className=\"grey fs13 margin-bottom\">\n          Последнее обновление\n          {TelematicRecord?.dateCreated\n            ? ` ${DateTime.fromISO(TelematicRecord.dateCreated).toFormat('dd-MM-yyyy HH:mm')}`\n            : ''}\n        </div>\n        <ul className=\"statusContainer\">\n          {telematicRecordList.map((iTelematicRecord, telematicRecordId) => {\n            return (\n              <div\n                key={iTelematicRecord.text}\n                className={c(\n                  !TelematicRecord[iTelematicRecord.key as keyof CarCardModel] && 'disabled',\n                  'margin-bottom-s',\n                )}\n              >\n                <div className=\"f-spaceBetween-center margin-bottom-s\">\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <Link className=\"f-left-center\" to=\"#\">\n                    <iTelematicRecord.icon className=\"primary fs28 margin-right-s\" />\n                    <span className=\"fs18\">{iTelematicRecord.text}</span>\n                  </Link>\n                  <Button\n                    className=\"fs13 f-center-center\"\n                    type=\"submit\"\n                    onClick={() => {\n                      getTelematicHistory(iTelematicRecord.key as keyof CarCardModel)\n                      const buff = [...telematigRecordIsOpen]\n                      buff[telematicRecordId] = !telematigRecordIsOpen[telematicRecordId]\n                      setTelematigRecordIsOpen([...buff])\n                    }}\n                  >\n                    <File className=\"margin-left-xxs-em margin-right-xxs-em\" />\n                    <span className=\"margin-right-xxs-em\">история</span>\n                  </Button>\n                </div>\n                <div>\n                  <ParameterContent\n                    initialValues={{ maxValue, minValue }}\n                    telemanticKey={iTelematicRecord.key}\n                    isOpen={telematigRecordIsOpen[telematicRecordId]}\n                  />\n                </div>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n\n  function getTelematicHistory(name: keyof CarCardModel) {\n    if (!Car?.uuid) return\n\n    dsp(\n      telematicHistoryActions.getOne(\n        {\n          carUuid: Car.uuid,\n          body: {\n            [name]: {\n              maxValue,\n              minValue,\n            },\n          },\n        },\n        function onSuccess() {\n          dsp(telematicHistoryActions.set({ active: name }))\n        },\n      ),\n    )\n  }\n}\n\nexport default TelematicRecordPanelContent\n","/* eslint-disable react/no-array-index-key */\n\nimport React, { FC } from 'react'\n\nimport { CarCardModel } from '@/type/model'\nimport { CarState } from '@/type/state'\n\ntype MainInfoPanelContentProps = {\n  Car: CarState['entity']\n  TelematicRecord: CarCardModel | null\n}\n\nconst MainInfoPanelContent: FC<MainInfoPanelContentProps> = ({ Car, TelematicRecord }): JSX.Element | null => {\n  if (!TelematicRecord) return null\n\n  const mainInfoList = [\n    {\n      key: 'Год выпуска',\n      value: Car?.carParameter?.issueYear || '—',\n    },\n    {\n      key: 'VIN',\n      value: Car?.vin || '—',\n    },\n    {\n      key: 'Гос. номер',\n      value: Car?.carParameter.stateNumber || '—',\n    },\n    {\n      key: 'Пробег автомобиля по одометру, км (CAN)',\n      value: TelematicRecord?.odometer,\n    },\n    {\n      key: (\n        <>\n          Остаток пробега\n          <br />\n          до очередного ТО, км (CAN)\n        </>\n      ),\n      value: TelematicRecord.remainingMileage || '—',\n    },\n    {\n      key: 'Показания одометра, км',\n      value: TelematicRecord.odometer || '—',\n    },\n    {\n      key: 'Общий расход топлива, л (CAN)',\n      value: TelematicRecord.fuelConsumption || '—',\n    },\n\n    {\n      key: 'Температура охлаждающей жидкости ºС',\n      value: TelematicRecord?.coolantTemp,\n    },\n  ]\n\n  return (\n    <ul className=\"mainInfoContainer fs18\">\n      {mainInfoList.map((iMainInfo, i) => {\n        return (\n          <li key={i}>\n            <div>{iMainInfo.key}</div>\n            <div>{iMainInfo.value}</div>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default MainInfoPanelContent\n","import React, { FC, useMemo } from 'react'\n\nimport { useDispatch } from 'react-redux'\n\nimport { DateTime } from 'luxon'\n\nimport c from 'clsx'\n\nimport Button from '@/components/button'\nimport File from '@/components/svg/fileOutlinedIcon'\n\nimport * as telematicHistoryActions from '@/store/action/telematicHistory'\n\nimport { CarCardModel } from '@/type/model'\nimport { CarState } from '@/type/state'\n\nimport { ParameterPanelContent as ParameterContent } from './parameter'\n\ntype TelematicRecordPanelContentProps = {\n  TelematicRecord: CarCardModel | null\n  Car: CarState['entity']\n}\n\nconst TelematicRecordPanelContent: FC<TelematicRecordPanelContentProps> = ({\n  Car,\n  TelematicRecord,\n}): JSX.Element | null => {\n  if (!TelematicRecord) return null\n  const dsp = useDispatch()\n  const maxValue = useMemo(() => DateTime.fromJSDate(new Date()).toUTC().toString(), [])\n  const minValue = useMemo(() => DateTime.fromJSDate(new Date()).minus({ month: 1 }).toUTC().toString(), [])\n  const [telematigRecordIsOpen, setTelematigRecordIsOpen] = React.useState<Array<boolean>>([])\n  const telematicRecordList = [\n    {\n      key: 'onboardPowerVoltage',\n      text: 'Напряжение бортовой сети, V (CAN)',\n    },\n    {\n      key: 'fuelLevel',\n      text: 'Уровень топлива, л (CAN)',\n    },\n    {\n      key: 'engineOilPressure',\n      text: 'Давление масла в двигателе, кПа (CAN)',\n    },\n    {\n      key: 'coolantTemp',\n      text: 'Температура охлаждающей жидкости ºС (СAN)',\n    },\n    {\n      key: 'maxRpm',\n      text: 'Максимальные обороты двигателя за предыдущий период',\n    },\n  ]\n  React.useEffect(() => {\n    setTelematigRecordIsOpen(telematicRecordList.map(() => false))\n  }, [])\n  return (\n    <div className=\"TelematicRecordPanelContent\">\n      <div className=\"statusInfoContainer margin-bottom\">\n        <div className=\"grey fs13 margin-bottom\">\n          Последнее обновление\n          {TelematicRecord?.dateCreated\n            ? ` ${DateTime.fromISO(TelematicRecord.dateCreated).toFormat('dd-MM-yyyy HH:mm')}`\n            : ''}\n        </div>\n        <ul className=\"statusContainer\">\n          {telematicRecordList.map((iTelematicRecord, telematicRecordId) => {\n            return (\n              <div\n                key={iTelematicRecord.text}\n                className={c(\n                  !TelematicRecord[iTelematicRecord.key as keyof CarCardModel] && 'disabled',\n                  'margin-bottom-s',\n                )}\n              >\n                <div className=\"f-spaceBetween-center margin-bottom-s\">\n                  {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                  <div className=\"f-spaceBetween-center\" style={{ width: '50%' }}>\n                    <span className=\"fs18\">{iTelematicRecord.text}</span>\n                    <span className=\"fs18 bold\">{TelematicRecord[iTelematicRecord.key] ?? '-'}</span>\n                  </div>\n\n                  <Button\n                    className=\"fs13 f-center-center\"\n                    type=\"submit\"\n                    onClick={() => {\n                      getTelematicHistory(iTelematicRecord.key as keyof CarCardModel)\n                      const buff = [...telematigRecordIsOpen]\n                      buff[telematicRecordId] = !telematigRecordIsOpen[telematicRecordId]\n                      setTelematigRecordIsOpen([...buff])\n                    }}\n                  >\n                    <File className=\"margin-left-xxs-em margin-right-xxs-em\" />\n                    <span className=\"margin-right-xxs-em\">история</span>\n                  </Button>\n                </div>\n                <div>\n                  <ParameterContent\n                    initialValues={{ maxValue, minValue }}\n                    telemanticKey={iTelematicRecord.key}\n                    isOpen={telematigRecordIsOpen[telematicRecordId]}\n                  />\n                </div>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n\n  function getTelematicHistory(name: keyof CarCardModel) {\n    if (!Car?.uuid) return\n\n    dsp(\n      telematicHistoryActions.getOne(\n        {\n          carUuid: Car.uuid,\n          body: {\n            [name]: {\n              maxValue,\n              minValue,\n            },\n          },\n        },\n        function onSuccess() {\n          dsp(telematicHistoryActions.set({ active: name }))\n        },\n      ),\n    )\n  }\n}\n\nexport default TelematicRecordPanelContent\n","import './index.less'\n\nimport './app.less'\n\nimport React, { FC, useRef, useState } from 'react'\n\nimport cx from 'clsx'\n\n// import CloseIcon from './icons/close'\n// import LoadingIcon from './icons/loading'\n\ntype TextareaAppProps = React.DetailedHTMLProps<\n  React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n  HTMLTextAreaElement\n> & {\n  className?: string\n  clearable?: boolean\n  onClear?: () => void\n  loading?: boolean\n  loadable?: boolean\n  wide?: boolean\n\n  // todo custom icons\n}\n\nconst TextareaApp: FC<TextareaAppProps> = ({\n  className,\n  // clearable = true,\n  onChange,\n  style,\n  value,\n  loading,\n  onFocus,\n  onBlur,\n  loadable,\n  autoComplete = 'off',\n  wide,\n  ...textareaProps\n}): JSX.Element => {\n  const ref = useRef<null | HTMLTextAreaElement>(null)\n\n  const [focused, setFocused] = useState(false)\n\n  // const LoadingComponent = loadable || loading ? <LoadingIcon /> : null\n  // const CloseComponent = clearable ? <CloseIcon onClick={clear} className={cx(!value && 'invisible')} /> : null\n\n  return (\n    <label className={cx('TextareaApp', className, focused && 'TextareaApp--focused', wide && 'wide')} style={style}>\n      <textarea\n        ref={ref}\n        className=\"textareaText\"\n        value={value}\n        onChange={onChange}\n        onFocus={onTextareaFocus}\n        onBlur={onTextareaBlur}\n        {...textareaProps}\n        autoComplete={autoComplete}\n      />\n      {/* {LoadingComponent || CloseComponent} */}\n    </label>\n  )\n\n  function onTextareaFocus(event: React.FocusEvent<HTMLTextAreaElement>) {\n    setFocused(true)\n    onFocus?.(event)\n  }\n\n  function onTextareaBlur(event: React.FocusEvent<HTMLTextAreaElement>) {\n    setFocused(false)\n    onBlur?.(event)\n  }\n\n  // function clear() {\n  //   if (!ref.current) return\n\n  //   const ev = new Event('textarea', { bubbles: true })\n\n  //   ref.current.value = ''\n  //   ref.current.dispatchEvent(ev)\n  //   onChange?.((ev as unknown) as React.ChangeEvent<HTMLTextAreaElement>)\n  // }\n}\n\nexport default TextareaApp\n","import qs from 'qs'\n\nimport { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { Content, Id, MailingTemplateModel } from '@/type/model'\n\nimport { MailingTemplateState } from '@/type/state'\nimport { Action, OnStage, PageableRow } from '@/type/type.d'\nimport { replaceLocallyByIdAfterCRUD } from '@/util/reduxActions'\n\nimport * as CONSTANTS from '../constant/mailingTemplate'\n\nexport const set = (payload: Partial<MailingTemplateState>): Action => {\n  return {\n    type: CONSTANTS.SET,\n    payload,\n  }\n}\n\nexport const getList = (\n  query?: PageableRow,\n  onStage?: OnStage<Content<MailingTemplateModel[]>>,\n): APIAction<undefined, Content<MailingTemplateModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/mailing-templates${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    ...onStage,\n  }\n}\n\nexport const refreshList = (): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.REFRESH_LIST,\n    url: '/api/mailing-templates',\n  }\n}\n\nexport const get = (id: string): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/mailing-templates/${id}`,\n})\n\nexport const remove = (id: Id, onStage: OnStage): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.UPDATE,\n  url: `/api/mailing-templates/${id}`,\n  method: 'DELETE',\n  ...onStage,\n})\n\nexport const create = (MailingTemplate: MailingTemplateModel, onStage: OnStage): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.CREATE,\n    url: '/api/mailing-templates',\n    method: 'POST',\n    body: createCRUDBody(MailingTemplate),\n    ...onStage,\n  }\n}\n\n// '{\"mailingType\":\"AUTOMATIC\",\"isActive\":true,\"startDate\":\"2021-03-02T21:56:31.164Z\",\"endDate\":\"2021-03-09T21:56:31.165Z\",\"name\":\",mjnyuyukjn,mn\",\"text\":\"kjnkjn\",\"configIds\":[1,3]}',\n\nexport const update = (MailingTemplate: MailingTemplateModel, onStage: OnStage): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.UPDATE,\n  url: `/api/mailing-templates/${MailingTemplate.id}`,\n  body: createCRUDBody(MailingTemplate),\n  method: 'put',\n  payload: MailingTemplate,\n  ...onStage,\n  onSuccess: replaceLocallyByIdAfterCRUD('mailingTemplateState', set, onStage.onSuccess),\n})\n\n// ------------------------\n// Helpers\n// ------------------------\n\ntype MailingTemplatesCRUD = Omit<MailingTemplateModel, 'configs'> & { configIds: Id[] }\n\nfunction createCRUDBody(MailingTemplate: MailingTemplateModel): MailingTemplatesCRUD {\n  const { configs, ...MailingTemplatesCRUD } = MailingTemplate\n\n  const configIds = configs?.map((ParamsConfig) => ParamsConfig.id) || []\n\n  return { configIds, ...MailingTemplatesCRUD }\n}\n","import { Action } from 'redux'\n\nimport { RootState } from '@/type/state'\n\nimport { OnFail, OnSuccess, SuccessActionParams } from '@savchenko91/rc-redux-api-mw'\n\nexport function replaceLocallyByIdAfterCRUD(\n  stateName: keyof RootState,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  set: (state: any) => Action,\n  onEnd?: OnSuccess | OnFail,\n) {\n  return (props: SuccessActionParams): void => {\n    const { list } = (props.store.getState() as RootState)[stateName]\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const entity = props.action.payload as any\n\n    props.store.dispatch(\n      set({\n        list: list.map((i: { id: string }) => (i.id.toString() === entity.id.toString() ? entity : i)),\n      }),\n    )\n\n    onEnd?.(props)\n  }\n}\n","import React, { FC, useEffect, useState } from 'react'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Portal from '@/components/popup/_popup'\n\nimport Button from '@/components/button'\nimport Select from '@/components/select'\nimport Textarea from '@/components/textarea'\nimport * as mailingTemplateActions from '@/store/action/mailingTemplate'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { MailingTemplateState, RootState } from '@/type/state'\n\ntype PopupSendMessageProps = {\n  stateRef?: React.MutableRefObject<undefined | boolean>\n  setStateRef?: React.MutableRefObject<undefined | ((v: boolean) => void)>\n}\n\nconst PopupSendMessage: FC<PopupSendMessageProps> = ({ stateRef, setStateRef }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  stateRef = stateRef || { current: undefined }\n  setStateRef = setStateRef || { current: undefined }\n\n  stateRef.current = isOpen\n  setStateRef.current = setIsOpen\n\n  const mailingTemplateState = useSelector((s: RootState): MailingTemplateState => s.mailingTemplateState)\n  const { list } = mailingTemplateState\n\n  useEffect(getMailingTemplateList, [])\n\n  return (\n    <Portal title=\"Отправить сообщение\" onClose={() => setIsOpen(false)} isOpen={isOpen}>\n      <Form\n        // initialValues={initialValues}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, form }) => (\n          <form onSubmit={handleSubmit} className=\"popupSendMessageForm fc-center-center fs18 margin-top\">\n            <Field name=\"template\">\n              {({ input, meta }) => (\n                <div className=\"formField f-center-center margin-bottom\">\n                  <Select\n                    placeholder=\"Выбрать из шаблона\"\n                    {...input}\n                    wide\n                    options={getTemplateOptions()}\n                    onChange={(v) => {\n                      input.onChange(v)\n                      form?.change('text', list.find((m) => String(m.id) === String(v))?.text)\n                    }}\n                  />\n                  {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"text\">\n              {({ input, meta }) => (\n                <div className=\"formField f-center-center margin-bottom\">\n                  <Textarea {...input} wide placeholder=\"Сообщение\" />\n                  {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <div className=\"f-left-center wrap\">\n              <Button type=\"submit\">Отправить</Button>\n            </div>\n          </form>\n        )}\n      />\n    </Portal>\n  )\n\n  function getTemplateOptions() {\n    return list.map((i) => ({\n      value: i.id,\n      label: i.name,\n    }))\n  }\n\n  function onSubmit() {\n    //\n  }\n\n  function getMailingTemplateList() {\n    dsp(mailingTemplateActions.getList())\n  }\n}\n\nexport default PopupSendMessage\n","import './_car.less'\n\nimport React, { FC, useEffect, useRef } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useParams } from 'react-router-dom'\n\nimport Collapse from 'rc-collapse'\n\nimport PostMessageIcon from '@/components/svg/postMessageIcon'\nimport Button from '@/components/button'\n\nimport motion from '@/helper/animation'\n\nimport * as carActions from '@/store/action/car'\n// import * as telematicRecordActions from '@/store/action/telematicRecord'\nimport Empty from '@/template/empty/_empty'\n\nimport FilterHeader from '@/template/collapseHeader/_collapseHeader'\n\nimport { CarState, RootState } from '@/type/state.d'\n\nimport TelematicRecordContent from './panelContent.telematicRecord'\nimport MainInfoContent from './panelContent.mainInfo'\nimport ParametersContent from './panelContent.parameters'\n\nimport PopupSendMessage from '../popup.sendMessage'\n\nconst { Panel } = Collapse\n\nconst SearchCar: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const { uuid } = useParams<{ uuid: string }>()\n\n  const setPopupSendMessageOpenRef = useRef<undefined | ((v: boolean) => void)>(undefined)\n\n  const carState = useSelector((s: RootState): CarState => s.carState)\n  const { entity: Car, Card } = carState\n\n  useEffect(() => getCar(), [])\n  useEffect(() => getTelematicRecord(), [])\n\n  return (\n    <div>\n      <div className=\"SearchCar scrollableContent wrap\">\n        <PopupSendMessage setStateRef={setPopupSendMessageOpenRef} />\n        <section className=\"first\">\n          <h1>\n            <div className=\"f-spaceBetween\">\n              {Car ? `${Car.brand} ${Car.model} ${Car?.carParameter?.issueYear || ''}` : 'Транспортное средство'}\n            </div>\n          </h1>\n          <div className=\"f-spaceBetween\">\n            <div className=\"fs18\">\n              Владелец:&nbsp;\n              {Car?.customers[0].legalEntity}\n            </div>\n            <Button>\n              <PostMessageIcon onClick={() => setPopupSendMessageOpenRef?.current?.(true)} />\n            </Button>\n          </div>\n        </section>\n\n        {carState?.loading?.get || carState?.loading?.getCard ? (\n          <section className=\"fs22\">Загрузка ...</section>\n        ) : (\n          <>\n            <section className=\"last\">\n              {Car ? (\n                <>\n                  <Collapse\n                    className=\"ClientListItem\"\n                    openMotion={motion}\n                    defaultActiveKey={['parametersRecord', 'telematicRecord', 'parametersRecord']}\n                  >\n                    <Panel\n                      className=\"margin-bottom\"\n                      header={<FilterHeader title=\"Общая информация\" className=\"fs30\" />}\n                      key=\"mainInfo\"\n                    >\n                      <MainInfoContent Car={Car} TelematicRecord={Card} />\n                    </Panel>\n\n                    <Panel\n                      className=\"margin-bottom\"\n                      header={<FilterHeader title=\"Сигнализаторы состояния\" className=\"fs30\" />}\n                      key=\"telematicRecord\"\n                    >\n                      <TelematicRecordContent TelematicRecord={Card} Car={Car} />\n                    </Panel>\n\n                    <Panel\n                      className=\"margin-bottom\"\n                      header={<FilterHeader title=\"Параметры\" className=\"fs30\" />}\n                      key=\"parametersRecord\"\n                    >\n                      <ParametersContent TelematicRecord={Card} Car={Car} />\n                    </Panel>\n                  </Collapse>\n                </>\n              ) : (\n                <Empty />\n              )}\n            </section>\n          </>\n        )}\n      </div>\n    </div>\n  )\n\n  function getCar() {\n    if (!Car && uuid) {\n      dsp(carActions.get(uuid))\n    }\n  }\n\n  function getTelematicRecord() {\n    if (uuid) {\n      dsp(carActions.getCard(uuid))\n    }\n  }\n}\n\nexport default SearchCar\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <rect y={1.5} width={18} height={2} rx={1} fill=\"currentColor\" />\n        <path fill=\"currentColor\" d=\"M3 .5h4v4H3z\" />\n        <rect width={18} height={2} rx={1} transform=\"matrix(-1 0 0 1 18 13.5)\" fill=\"currentColor\" />\n        <path fill=\"currentColor\" d=\"M9 12.5H5v4h4z\" />\n        <rect width={18} height={2} rx={1} transform=\"matrix(-1 0 0 1 18 7.5)\" fill=\"currentColor\" />\n        <path fill=\"currentColor\" d=\"M15 6.5h-4v4h4z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC } from 'react'\n\nimport Select from '@/components/select'\n\ntype PerPageProps = {\n  onChange: (v: number) => void\n  value: number\n}\n\nconst PerPage: FC<PerPageProps> = ({ onChange, value }): JSX.Element => {\n  return (\n    <div className=\"PerPage\">\n      <span className=\"perPageLabel f-center-center nowrap\">\n        Записей на\n        <br />\n        странице\n      </span>\n\n      <Select\n        value={value.toString()}\n        allowClear={false}\n        style={{ width: '9rem' }}\n        className=\"fs20\"\n        onChange={(v) => onChange(parseInt(v?.toString() || '', 10))}\n        options={['10', '25', '50', '100'].map((v) => ({ value: v, label: v }))}\n      />\n    </div>\n  )\n}\n\nexport default PerPage\n","import './_pagination.less'\n\nimport React, { FC } from 'react'\n\nimport ReactPaginate from 'react-paginate'\nimport PerPage from '@/components/pagination/perPage'\n\nimport NextLabel from '@/components/svg/arrowOutlinedIcon'\n\ntype PaginationProps = {\n  onPerPageChange: (v: number) => void\n  perPage: number\n  onPageChange: (n: number) => void\n  pageCount: number\n  pageRangeDisplayed?: number\n  marginPagesDisplayed?: number\n  previousLabel?: React.ReactNode\n  nextLabel?: React.ReactNode\n  breakLabel?: string | React.ReactNode\n  breakClassName?: string\n  breakLinkClassName?: string\n  initialPage?: number\n  forcePage?: number\n  disableInitialCallback?: boolean\n  containerClassName?: string\n  pageClassName?: string\n  pageLinkClassName?: string\n  activeClassName?: string\n  activeLinkClassName?: string\n  previousClassName?: string\n  nextClassName?: string\n  previousLinkClassName?: string\n  nextLinkClassName?: string\n  disabledClassName?: string\n  hrefBuilder?(pageIndex: number): void\n  extraAriaContext?: string\n}\n\nconst Pagination: FC<PaginationProps> = ({\n  pageCount = 1,\n  onPerPageChange,\n  perPage = 10,\n  onPageChange,\n  ...props\n}): JSX.Element => {\n  return (\n    <div className=\"Pagination\">\n      <PerPage onChange={onPerPageChange} value={perPage} />\n      {!(pageCount < 2) && (\n        <ReactPaginate\n          {...props}\n          pageCount={pageCount}\n          pageRangeDisplayed={1}\n          marginPagesDisplayed={1}\n          // nextLabel=\">\"\n          // previousLabel=\"<\"\n          onPageChange={({ selected }) => onPageChange(selected)}\n          nextLabel={<NextLabel style={{ fontSize: '0.7em' }} />}\n          previousLabel={<NextLabel style={{ fontSize: '0.7em' }} />}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Pagination\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppLoadingCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg\n        className=\"rotateRight\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 399.389 399.389\"\n        width=\"14px\"\n        height=\"14px\"\n        {...svgProps}\n      >\n        <path d=\"M340.896 58.489C303.18 20.773 253.031.001 199.693.001c-53.34 0-103.487 20.771-141.204 58.488C20.772 96.207 0 146.355 0 199.694c0 53.34 20.772 103.489 58.49 141.206 37.717 37.717 87.864 58.488 141.204 58.488 53.339 0 103.486-20.771 141.205-58.488 37.717-37.717 58.49-87.865 58.49-141.206-.002-53.339-20.776-103.487-58.493-141.205zM77.457 199.694c0-67.401 54.835-122.236 122.236-122.236S321.93 132.293 321.93 199.694s-54.836 122.237-122.237 122.237S77.457 267.096 77.457 199.694zm250.604 128.369c-34.289 34.287-79.877 53.17-128.368 53.17v-41.147c77.413 0 140.389-62.979 140.389-140.391 0-77.412-62.979-140.391-140.389-140.391-4.593 0-9.134.229-13.615.662V18.655c4.508-.332 9.049-.5 13.615-.5 48.491 0 94.079 18.883 128.368 53.171 34.289 34.289 53.172 79.878 53.172 128.368-.001 48.493-18.883 94.082-53.172 128.369z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppCheck iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg viewBox=\"0 0 24 24\" width=\"14px\" height=\"14px\" {...svgProps}>\n        <path\n          d=\"M16.293 8.293l-6.294 6.294c.001-.001-2.292-2.294-2.292-2.294a1 1 0 0 0-1.414 1.414l2.294 2.294c.78.78 2.05.777 2.826 0l6.294-6.294a1 1 0 1 0-1.414-1.414z\"\n          fill=\"currentColor\"\n          stroke=\"none\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport './index.less'\nimport './app.less'\n\nimport React, { FC, useState } from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport cx from 'clsx'\n\nimport LoadingIcon from './icons/loading'\nimport CheckIcon from './icons/check'\n\ntype CheckboxButtonAppProps = Omit<\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n  'onClick'\n> & {\n  className?: string\n  wide?: boolean\n  placeholder?: string\n  loading?: boolean\n  skeleton?: unknown\n  onClick?: (event: React.MouseEvent<HTMLLabelElement, MouseEvent>) => void\n}\n\nconst CheckboxButtonApp: FC<CheckboxButtonAppProps> = ({\n  className,\n  wide,\n  placeholder,\n  style,\n  checked,\n  onFocus,\n  onBlur,\n  onClick,\n  disabled,\n  loading,\n  skeleton,\n  ...inputProps\n}): JSX.Element => {\n  const [focused, setFocused] = useState(false)\n\n  const additionalClassNames = cx(\n    wide && 'wide',\n    checked ? 'checked' : 'unchecked',\n    focused && 'focused',\n    loading ? 'loading' : 'noloading',\n    placeholder ? 'withplaceholder' : 'noplaceholder',\n    disabled ? 'disabled' : 'enabled',\n  )\n\n  if (skeleton) {\n    return <Skeleton className={cx('react-loading-skeleton-checkbox', additionalClassNames)} />\n  }\n\n  return (\n    <label className={cx('CheckboxButtonApp', className, additionalClassNames)} style={style} onClick={onClick}>\n      <input\n        type=\"checkbox\"\n        {...inputProps}\n        disabled={disabled}\n        checked={checked}\n        onBlur={onInputBlur}\n        onFocus={onInputFocus}\n      />\n      {!loading && <CheckIcon style={{ color: 'white', width: '3rem', height: '3rem' }} />}\n      {loading && <LoadingIcon />}\n      {placeholder && <span className=\"placeholder\">{placeholder}</span>}\n    </label>\n  )\n\n  function onInputFocus(event: React.FocusEvent<HTMLInputElement>) {\n    setFocused(true)\n    onFocus?.(event)\n  }\n\n  function onInputBlur(event: React.FocusEvent<HTMLInputElement>) {\n    setFocused(false)\n    onBlur?.(event)\n  }\n}\n\nexport default CheckboxButtonApp\n","import './_checkAll.less'\n\nimport React, { FC } from 'react'\n\nimport c from 'clsx'\nimport CheckboxButton from '@/components/checkboxButton'\n\ntype CheckAllProps = {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  checked: boolean\n  className?: string\n  loading?: unknown\n}\n\nconst CheckAll: FC<CheckAllProps> = ({ className, checked, loading, onChange }): JSX.Element => {\n  return (\n    <div className={c(className, 'CheckAll fs18 f-center-center')}>\n      <CheckboxButton\n        loading={!!loading}\n        checked={checked}\n        className=\"margin-right\"\n        onChange={onChange}\n        placeholder=\"Выбрать всех\"\n      />\n    </div>\n  )\n}\n\nexport default CheckAll\n","import './_paginationSection.less'\n\nimport React, { FC, useEffect, useState } from 'react'\n\nimport Button from '@/components/button'\nimport Pagination from '@/components/pagination/_pagination'\n\nimport CheckAll from '@/template/checkAll/_checkAll'\n\ntype PaginationSectionProps = {\n  paginationProps: {\n    onPerPageChange: (v: number) => void\n    perPage: number\n    onPageChange: (n: number) => void\n    pageCount: number\n  }\n  loading?: unknown\n  checkAll?: (e: React.ChangeEvent<HTMLInputElement>) => void\n  list: unknown[]\n  checkList?: unknown[]\n  setIsModalOpen?: React.Dispatch<React.SetStateAction<boolean>>\n  typeOfParent?: string\n}\n\nconst PaginationSection: FC<PaginationSectionProps> = ({\n  checkAll,\n  list,\n  checkList,\n  paginationProps,\n  setIsModalOpen,\n  loading,\n  typeOfParent,\n}): JSX.Element => {\n  const [checkAllIsChecked, setCheckAllIsChecked] = useState<boolean>(false)\n\n  const key: 'id' | 'uuid' = typeOfParent === 'client' ? 'id' : 'uuid'\n\n  useEffect(checkCheckBoxes, [checkList, list])\n\n  function checkCheckBoxes(): void {\n    if (checkList) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const listElems = list.map((elem: any) => elem[key])\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const checkListElems = checkList.map((item: any) => item[key])\n\n      for (let i = 0; i < listElems.length; i += 1) {\n        if (!checkListElems.includes(listElems[i])) {\n          setCheckAllIsChecked(false)\n          break\n        } else {\n          setCheckAllIsChecked(true)\n        }\n      }\n    } else setCheckAllIsChecked(list.length !== 0)\n  }\n\n  return (\n    <section className=\"PaginationSection f-spaceBetween relative\">\n      <Pagination {...paginationProps} />\n      <div className=\"f appear\">\n        {checkList && (\n          <div className=\"CheckListLength f-center-center bold fs13 absolute\">\n            {checkList.length ? checkList.length : ''}\n          </div>\n        )}\n        {setIsModalOpen && checkList?.length ? (\n          <Button\n            className=\"nowrap margin-right\"\n            color=\"primary\"\n            disabled={!checkList?.length}\n            onClick={() => setIsModalOpen(true)}\n          >\n            Отправить сообщение\n          </Button>\n        ) : null}\n        {!!list?.length && checkAll && <CheckAll checked={checkAllIsChecked} loading={loading} onChange={checkAll} />}\n      </div>\n    </section>\n  )\n}\n\nexport default PaginationSection\n","import { useMemo } from 'react'\n\nimport * as H from 'history'\n\nimport { AnyAction } from 'redux'\n\nimport qs from 'qs'\n\nimport Route from '@/util/route-constant'\n\nimport store from '@/index/redux/store'\n\nimport history from '@/index/route/history'\n\n// import { Content } from '@/type/model'\nimport {\n  // OnStage,\n  PageableRow,\n} from '@/type/type'\nimport { isEmpty } from 'lodash'\n\n// ------------------------------------\n// createListManager\n// ------------------------------------\n\nexport function useListManager(settings: Settings): ListManager {\n  const listManager = useMemo(() => new ListManager(settings), [])\n\n  // Обновляем ссылку на редаксовский стэет\n  listManager.state = settings.state\n\n  return listManager\n}\n\n// ------------------------------------\n// Settings\n// ------------------------------------\n\nexport type Settings = {\n  state: {\n    list: unknown[]\n    totalElements: number\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    filter: PageableRow & Record<string, unknown>\n    loading: {\n      getList: boolean | string\n      refreshList?: boolean | string\n    }\n    // abortController: AbortController\n  }\n  actions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    getList: (filter: PageableRow & Record<string, unknown>, onStage: any) => AnyAction\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    set: (state: any) => AnyAction\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onStage?: any\n\n  route: Route\n}\n\n// ------------------------------------\n// ListManager\n// ------------------------------------\n\nexport class ListManager implements Settings {\n  state: Settings['state']\n\n  initialState: Settings['state']\n\n  actions: Settings['actions']\n\n  history: H.History\n\n  route: Settings['route']\n\n  onStage?: Settings['onStage']\n\n  initial: {\n    request: boolean\n    list: boolean\n  }\n\n  constructor(settings: Settings) {\n    this.state = settings.state\n\n    this.initialState = settings.state\n\n    this.actions = settings.actions\n\n    this.initial = {\n      request: false,\n      list: !!settings.state.list?.length,\n    }\n\n    this.onStage = settings.onStage\n\n    this.history = history\n\n    this.route = settings.route\n  }\n\n  get pageCount(): number {\n    return Math.ceil(this.state.totalElements / this.state.filter.size)\n  }\n\n  get isEmpty(): boolean {\n    return !this.isFormFilterEmpty && !this.state.list.length && !this.state.loading.getList\n  }\n\n  get isLoading(): boolean {\n    return Boolean(this.state.loading.getList || this.state.loading.refreshList)\n  }\n\n  get formFilter(): Record<symbol, string> {\n    const { size, page, ...filter } = this.state.filter\n    return filter\n  }\n\n  get isSearchEmpty(): boolean {\n    return !this.history.location.search\n  }\n\n  get parsedSearch(): ListManager['state']['filter'] | null {\n    const result = qs.parse(this.history.location.search, {\n      ignoreQueryPrefix: true,\n      decoder: (str, qsDecoder) => {\n        return /^([0-9]+)$/.test(str) ? parseFloat(str) : qsDecoder(str)\n      },\n    }) as ListManager['state']['filter']\n\n    if (isEmpty(result)) return null\n\n    return result\n  }\n\n  get isFormFilterEmpty(): boolean {\n    return JSON.stringify(this.formFilter) === '{}'\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get paginationProps(): any {\n    return {\n      perPage: this.state.filter.size,\n      forcePage: this.state.filter.page,\n      pageCount: this.pageCount,\n      onPageChange: this.onPageChange,\n      onPerPageChange: this.onSizeChange,\n    }\n  }\n\n  reset = (): void => {\n    const filter = { size: 10, page: 0 }\n    store.dispatch(this.actions.set({ filter }))\n    this.history.push({\n      search: qs.stringify(filter, { skipNulls: true }),\n    })\n  }\n\n  onPageChange = (n: number): void => {\n    this.dispatchAction({ ...this.state.filter, page: n })\n  }\n\n  onSizeChange = (n: number): void => {\n    this.dispatchAction({ ...this.state.filter, page: 0, size: n })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  onFilterChange = (f: Record<string, any>): void => {\n    this.dispatchAction({ ...f, page: 0, size: this.state.filter.size })\n  }\n\n  // fromQueryToState = (): void => {\n  //   if (!this.route.isCurrent) return\n\n  //   const fixParam = this.parsedSearch\n  //   let isRequest = false\n  //   if (fixParam.isFind) isRequest = true\n\n  //   setTimeout(() => {\n  //     const parameters = this.parsedSearch\n  //     if (parameters.isFind) delete parameters.isFind\n\n  //     store.dispatch(this.actions.set({ filter: parameters }))\n  //   }, 1)\n\n  //   if (isRequest && !isEmpty(fixParam)) this.dispatchAction()\n  // }\n\n  dispatchAction = (filter?: ListManager['state']['filter']): void => {\n    filter = filter || this.parsedSearch || this.state.filter\n    ;(document.querySelector('.scrollToTopOnRequest') as Element)?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n\n    this.initial.request = true\n\n    store.dispatch(this.actions.set({ filter }))\n\n    history.push({ search: qs.stringify(filter) })\n\n    this.route.REDIRECT = `${this.route.PATH}${qs.stringify(filter, { addQueryPrefix: true, skipNulls: true })}`\n    ;(this.state as any).abortController?.abort()\n    store.dispatch(\n      this.actions.getList(filter, {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        onSuccess: (args: any) => {\n          this.onStage?.onSuccess?.(args)\n        },\n        onStart: (args: any) => {\n          this.onStage?.onStart?.(args)\n        },\n      }),\n    )\n  }\n}\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M9 11.083a.548.548 0 01-.406-.183L4.656 6.545c-.341-.376-.088-1.003.407-1.003h2.062V.99c0-.546.42-.99.938-.99h1.875c.516 0 .937.444.937.99v4.552h2.063c.494 0 .747.627.406 1.003L9.407 10.9a.548.548 0 01-.407.183zM16.688 15.833H1.313C.589 15.833 0 15.212 0 14.448v-.396c0-.764.589-1.385 1.313-1.385h15.374c.724 0 1.313.621 1.313 1.385v.396c0 .764-.589 1.385-1.313 1.385z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import { useCallback, useState } from 'react'\n\nexport const useBooleanState = (\n  initialState = false,\n): [boolean, () => void, () => void, () => void, (state: boolean) => void] => {\n  const [state, setState] = useState(initialState)\n\n  const setTrue = useCallback(() => setState(true), [setState])\n  const setFalse = useCallback(() => setState(false), [setState])\n  const toggle = useCallback(() => setState(!state), [setState, state])\n\n  return [state, setTrue, setFalse, toggle, setState]\n}\n\nexport default useBooleanState\n","/* eslint-disable react/require-default-props */\nimport React from 'react'\nimport useBooleanState from './useStateBoolean'\n\ninterface FocusHOCProps {\n  onFocus: (event?: React.FocusEvent<HTMLElement> | undefined) => void\n  onBlur: (event?: React.FocusEvent<HTMLElement> | undefined) => void\n  focused?: boolean\n}\n\nexport function FocusHOC<P>(\n  WrappedComponent: React.ComponentType<P & FocusHOCProps>,\n): (props: P & FocusHOCProps) => JSX.Element {\n  const ComponentWithExtraInfo = (props: P & FocusHOCProps) => {\n    const { focused, onFocus, onBlur } = props\n\n    const [isFocused, setFocus, unsetFocus] = useBooleanState(focused)\n\n    const handleFocus: (event?: React.FocusEvent<HTMLElement> | undefined) => void = (...args) => {\n      setFocus()\n      onFocus?.(...args)\n    }\n\n    const handleBlur: (event?: React.FocusEvent<HTMLElement> | undefined) => void = (...args) => {\n      unsetFocus()\n      onBlur?.(...args)\n    }\n\n    return <WrappedComponent {...props} focused={isFocused} onFocus={handleFocus} onBlur={handleBlur} />\n  }\n\n  return ComponentWithExtraInfo\n}\n\nexport default FocusHOC\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport cx from 'clsx'\nimport React, { useState } from 'react'\nimport css from './fieldWrapper.module.css'\n\ninterface FieldWrapperProps {\n  focused: boolean\n  filled: boolean\n  placeholder?: string\n  wide?: boolean\n  styles?: {\n    focusArea?: React.CSSProperties\n    placeholder?: React.CSSProperties\n  }\n  classNames?: {\n    focusArea?: string\n    placeholder?: string\n  }\n}\n\nconst FieldWrapper: React.FC<FieldWrapperProps> = (props) => {\n  const { children, focused, filled, placeholder, wide, styles = {}, classNames = {} } = props\n  const [isMouseDown, setIsMouseDown] = useState<boolean | null>(null)\n\n  return (\n    <label\n      title={placeholder}\n      style={styles?.focusArea}\n      onMouseDown={() => setIsMouseDown(true)}\n      onMouseUp={() => setIsMouseDown(false)}\n      className={cx(\n        css.field_wrapper,\n        isMouseDown !== null && css.msnd_animated,\n        wide && css.field_wrapper__wide,\n        (focused || isMouseDown) && css.field_wrapper__focused,\n        (filled || isMouseDown) && css.field_wrapper__filled,\n        classNames.focusArea,\n      )}\n    >\n      <span\n        style={styles?.placeholder}\n        className={cx(css.msnd_placeholder, isMouseDown !== null && css.msnd_animated, classNames.placeholder)}\n      >\n        {placeholder}\n      </span>\n      {children}\n    </label>\n  )\n}\n\nexport default FieldWrapper\n","import React, { useEffect } from 'react'\n\ninterface StateManagerProps {\n  element: { value: string; dispatchEvent: (ev: Event) => void } | null\n  onChange?: React.ChangeEventHandler<HTMLInputElement>\n  value?: string\n  clearable?: boolean\n  icon?: JSX.Element\n}\n\nconst StateManager: React.FC<StateManagerProps> = (props) => {\n  const { element, onChange, value, clearable, icon: Icon } = props\n\n  useEffect(handleValueChange, [value, element])\n\n  if (clearable && value) {\n    return Icon ? React.cloneElement(Icon, { onClick: clear }) : <span onClick={clear}>X</span>\n  }\n\n  return null\n\n  function handleValueChange() {\n    if (!element) return\n    element.value = value || ''\n  }\n\n  function clear() {\n    if (!element) return\n\n    const ev = new Event('input', { bubbles: true })\n\n    element.value = ''\n    element?.dispatchEvent?.(ev)\n    onChange?.((ev as unknown) as React.ChangeEvent<HTMLInputElement>)\n  }\n}\n\nexport default StateManager\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"msnd-close-icon\">\n      <svg viewBox=\"0 0 26 26\" width=\"1em\" height=\"1em\" {...props}>\n        <path\n          d=\"M21.125 0H4.875A4.874 4.874 0 000 4.875v16.25A4.874 4.874 0 004.875 26h16.25A4.874 4.874 0 0026 21.125V4.875A4.874 4.874 0 0021.125 0zM18.78 17.394l-1.388 1.387a.654.654 0 01-.924 0L13 15.313 9.533 18.78a.653.653 0 01-.925-.002L7.22 17.394a.66.66 0 010-.926l3.468-3.467-3.467-3.467a.657.657 0 010-.925l1.388-1.388a.651.651 0 01.925 0L13 10.689l3.468-3.468a.65.65 0 01.924 0l1.388 1.386a.66.66 0 01.001.927l-3.468 3.467 3.468 3.467a.66.66 0 01-.001.926z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import Input from './input'\n\nexport default Input\n","import React, { useRef } from 'react'\nimport cx from 'clsx'\nimport FocusHOC from './focusHOC'\nimport css from './input.module.css'\nimport FieldWrapper from './fieldWrapper'\nimport StateManager from './stateManager'\nimport CloseIcon from './close'\n\ntype ReactInputProps = Omit<\n  React.DetailedHTMLProps<React.InputHTMLAttributes<Element>, Element>,\n  'className' | 'style' | 'onFocus' | 'onBlur'\n>\n\nexport interface InputProps extends ReactInputProps {\n  onFocus: (event?: React.FocusEvent<HTMLElement> | undefined) => void\n  onBlur: (event?: React.FocusEvent<HTMLElement> | undefined) => void\n  focused?: boolean\n  value?: string\n  clearable?: boolean\n  styles?: {\n    input?: React.CSSProperties\n    focusArea?: React.CSSProperties\n    placeholder?: React.CSSProperties\n  }\n  classNames?: {\n    input?: string\n    focusArea?: string\n    placeholder?: string\n  }\n}\n\nconst Input: React.FC<InputProps> = (props) => {\n  const { focused = false, placeholder, value, onChange, clearable, styles = {}, classNames = {}, ...restProps } = props\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const { input: inputStyle, ...focusAreaStyles } = styles\n  const { input: inputClassName, ...focusAreaClassNames } = classNames\n\n  return (\n    <FieldWrapper\n      focused={focused}\n      filled={Boolean(ref.current?.value || value)}\n      placeholder={placeholder}\n      styles={focusAreaStyles}\n      classNames={focusAreaClassNames}\n    >\n      <input\n        {...restProps}\n        className={cx(css.msnd_input, inputClassName)}\n        ref={ref}\n        onChange={onChange}\n        style={inputStyle}\n      />\n      <StateManager\n        element={ref.current}\n        onChange={onChange}\n        value={value}\n        clearable={clearable}\n        icon={<CloseIcon className={css.msnd_close_icon} />}\n      />\n    </FieldWrapper>\n  )\n}\n\nexport default FocusHOC(Input)\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppCloseCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg fill=\"currentColor\" viewBox=\"0 0 512 512\" width=\"14px\" height=\"14px\" {...svgProps}>\n        <path d=\"M257 0C116.39 0 0 114.39 0 255s116.39 257 257 257 255-116.39 255-257S397.61 0 257 0zm126.22 338.79c11.7 11.7 11.7 30.73 0 42.44-11.61 11.6-30.64 11.79-42.44 0L257 297.42l-85.79 83.82c-11.7 11.7-30.73 11.7-42.44 0-11.7-11.7-11.7-30.73 0-42.44l83.8-83.8-83.8-83.8c-11.7-11.71-11.7-30.74 0-42.44 11.71-11.7 30.74-11.7 42.44 0L257 212.58l83.78-83.82c11.68-11.68 30.71-11.72 42.44 0 11.7 11.7 11.7 30.73 0 42.44l-83.8 83.8 83.8 83.79z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC } from 'react'\n\nimport cx from 'clsx'\n\ntype SvgComponentProps = React.SVGProps<SVGSVGElement> & {\n  role?: string\n  onClick?: (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => void\n}\n\nconst SvgComponent: FC<SvgComponentProps> = ({\n  'aria-label': ariaLabel,\n  className,\n  role,\n  tabIndex,\n  onClick,\n  ...svgProps\n}: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <span\n      className={cx(className, 'IconAppLoadingCircle iconApp')}\n      aria-label={ariaLabel}\n      role={role}\n      tabIndex={tabIndex}\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onClick={onClick as any}\n    >\n      <svg\n        className=\"rotateRight\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 399.389 399.389\"\n        width=\"14px\"\n        height=\"14px\"\n        {...svgProps}\n      >\n        <path d=\"M340.896 58.489C303.18 20.773 253.031.001 199.693.001c-53.34 0-103.487 20.771-141.204 58.488C20.772 96.207 0 146.355 0 199.694c0 53.34 20.772 103.489 58.49 141.206 37.717 37.717 87.864 58.488 141.204 58.488 53.339 0 103.486-20.771 141.205-58.488 37.717-37.717 58.49-87.865 58.49-141.206-.002-53.339-20.776-103.487-58.493-141.205zM77.457 199.694c0-67.401 54.835-122.236 122.236-122.236S321.93 132.293 321.93 199.694s-54.836 122.237-122.237 122.237S77.457 267.096 77.457 199.694zm250.604 128.369c-34.289 34.287-79.877 53.17-128.368 53.17v-41.147c77.413 0 140.389-62.979 140.389-140.391 0-77.412-62.979-140.391-140.389-140.391-4.593 0-9.134.229-13.615.662V18.655c4.508-.332 9.049-.5 13.615-.5 48.491 0 94.079 18.883 128.368 53.171 34.289 34.289 53.172 79.878 53.172 128.368-.001 48.493-18.883 94.082-53.172 128.369z\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport './index.less'\nimport './app.less'\n\nimport React, { useRef, useState } from 'react'\nimport cx from 'clsx'\nimport useMergedRef from '@react-hook/merged-ref'\n\nimport CloseIcon from './icons/close'\nimport LoadingIcon from './icons/loading'\n\ntype InputAppProps = Omit<\n  React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>,\n  'ref'\n> & {\n  className?: string\n  clearable?: boolean\n  onClear?: () => void\n  loading?: boolean\n  loadable?: boolean\n  wide?: boolean\n  chameleon?: boolean\n\n  // todo custom icons\n}\n\nconst InputApp = React.forwardRef<HTMLInputElement, InputAppProps>(\n  (\n    {\n      wide,\n      className,\n      clearable = true,\n      chameleon,\n      onChange,\n      style,\n      value,\n      loading,\n      loadable,\n      onFocus,\n      onBlur,\n      autoComplete = 'off',\n      ...inputProps\n    },\n    ref,\n  ) => {\n    const refInput = useRef<null | HTMLInputElement>(null)\n    const combinedRef = useMergedRef(ref, refInput)\n\n    const [, setUpdate] = useState({})\n    const [focused, setFocused] = useState(false)\n\n    const LoadingComponent = loadable || loading ? <LoadingIcon /> : null\n    const CloseComponent = clearable ? (\n      <CloseIcon onClick={clear} className={cx(!value && !refInput.current?.value && 'invisible')} />\n    ) : null\n\n    const additionalClassNames = cx(focused && 'InputApp--focused', wide && 'wide', chameleon && 'chameleon')\n\n    return (\n      <label className={cx('InputApp', className, additionalClassNames)} style={style}>\n        <input\n          ref={combinedRef}\n          type=\"text\"\n          className=\"inputText\"\n          value={value || refInput.current?.value || ''}\n          onChange={onInputChange}\n          onFocus={onInputFocus}\n          onBlur={onInputBlur}\n          autoComplete={autoComplete}\n          {...inputProps}\n        />\n        {LoadingComponent || CloseComponent}\n      </label>\n    )\n\n    function onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n      setUpdate({})\n      onChange?.(e)\n    }\n\n    function onInputFocus(event: React.FocusEvent<HTMLInputElement>) {\n      setFocused(true)\n      onFocus?.(event)\n    }\n\n    function onInputBlur(event: React.FocusEvent<HTMLInputElement>) {\n      setFocused(false)\n      onBlur?.(event)\n    }\n\n    function clear() {\n      if (!refInput.current) return\n\n      const ev = new Event('input', { bubbles: true })\n\n      refInput.current.value = ''\n      setUpdate({})\n      refInput.current.dispatchEvent(ev)\n      onChange?.((ev as unknown) as React.ChangeEvent<HTMLInputElement>)\n    }\n  },\n)\n\nexport default InputApp\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 24 24\"\n        color=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n      >\n        <path\n          d=\"M12 0C5.372 0 0 5.373 0 12c0 6.628 5.372 12 12 12 6.627 0 12-5.372 12-12 0-6.627-5.373-12-12-12zm0 21.75c-5.385 0-9.75-4.365-9.75-9.75S6.615 2.25 12 2.25c5.384 0 9.75 4.365 9.75 9.75s-4.366 9.75-9.75 9.75zm4.514-11.25H13.5v-3a.75.75 0 00-.75-.75h-1.5a.75.75 0 00-.75.75v3H7.501a.75.75 0 00-.752.75v1.5c0 .415.336.75.752.75H10.5v2.993c0 .414.335.75.75.75h1.5a.75.75 0 00.75-.75V13.5h3.015a.75.75 0 00.752-.75v-1.5a.753.753 0 00-.753-.75z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperPointer\">\n      <svg\n        viewBox=\"64 64 896 896\"\n        data-icon=\"close-circle\"\n        width=\"2.2em\"\n        height=\"2.2em\"\n        fill=\"currentColor\"\n        aria-hidden=\"true\"\n        {...props}\n      >\n        <path\n          d=\"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n          fill=\"rgba(0,0,0,0.3)\"\n        />\n        <path\n          d=\"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\"\n          fill=\"rgba(0,0,0,0.3)\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","export function required(s: string): void | string {\n  const msg = 'Обязательно'\n  // if (Array.isArray(s) && s.length === 0) return msg\n  if (!s) return msg\n}\n\nexport function length(n: number) {\n  return (string: string): void | string => {\n    if (string?.length !== n) return 'Неправильное количество символов'\n  }\n}\n\nexport function validateEmail(emailList: string[]): string[] | void {\n  if (!emailList?.length) return\n\n  const currentEmailIndex = emailList.length - 1\n  const currentEmail = emailList[currentEmailIndex]\n\n  if (!/.+@.+\\..+/.test(currentEmail)) return ['Неверный формат email']\n  if (emailList?.slice(0, currentEmailIndex).includes(currentEmail)) return ['Данный email уже добавлен']\n}\n","import { REDUX_API_MIDDLEWARE as type, APIAction, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport { Id } from '@/type/model'\n\nimport * as CONSTANTS from '../constant/configTypeCatalog'\n\nconst url = '/api/config-type-catalog'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getList = (): APIAction => {\n  return {\n    method: 'GET',\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url,\n    type,\n  }\n}\n\ntype BodyRequestCreate = {\n  name: string\n}\n\ntype BodyResponseCreate = {\n  id: Id\n  name: string\n}\n\nexport const create = (\n  name: string,\n  onSuccess: OnSuccess<BodyResponseCreate, BodyRequestCreate>,\n): APIAction<BodyResponseCreate, BodyRequestCreate> => {\n  return {\n    method: 'POST',\n    stageActionTypes: CONSTANTS.CREATE,\n    body: { name },\n    onSuccess,\n    url,\n    type,\n  }\n}\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\nimport React, { FC, useEffect, useState } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Form, Field } from 'react-final-form'\n\nimport { isEqual } from 'lodash'\n\nimport cx from 'clsx'\n\nimport Portal from '@/components/popup/_popup'\n\nimport Button from '@/components/button'\nimport Input from '@/components/input'\nimport Checkbox from '@/components/checkboxButton'\nimport Select from '@/components/select'\nimport PlusOutline from '@/components/svg/plusOutlinedIcon'\nimport CloseCircleOutlined from '@/components/svg/closeCircleOutlined'\n\nimport ROUTES from '@/constant/routes'\n\nimport { required } from '@/helper/validate'\n\n// import PopupEvents from '@/page/main/tab.mailing/template/_popupEvents'\n\nimport * as configTypeCatalogActions from '@/store/action/configTypeCatalog'\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { ConfigTypeCatalogState, RootState } from '@/type/state'\n\n// import { ParamsConfigModel } from '@/type/model'\ntype PopupSaveTemplateProps = {\n  stateRef?: React.MutableRefObject<undefined | boolean>\n  setStateRef?: React.MutableRefObject<undefined | ((v: boolean) => void)>\n  params: {\n    carParams?: any\n    clientParams?: any\n  }\n}\n\nconst PopupSaveTemplate: FC<PopupSaveTemplateProps> = ({ params, stateRef, setStateRef }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const [formState, setFormState] = useState<any>({\n    params,\n    configType: ROUTES.SEARCH_CLIENT.isCurrent ? 'CLIENT' : 'CAR',\n    mails: [],\n  })\n\n  // const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n  const configTypeCatalogState = useSelector((s: RootState): ConfigTypeCatalogState => s.configTypeCatalogState)\n\n  stateRef = stateRef || { current: undefined }\n  setStateRef = setStateRef || { current: undefined }\n\n  stateRef.current = isOpen\n  setStateRef.current = setIsOpen\n\n  useEffect(() => getConfigTypeCatalog(), [])\n\n  return (\n    <>\n      <Portal\n        title=\"Сохранить как шаблон для поиска\"\n        onClose={() => {\n          setIsOpen(false)\n          updateForm()\n        }}\n        isOpen={isOpen}\n        top\n      >\n        <Form\n          initialValues={formState}\n          validate={validateConfigTypeName}\n          onSubmit={onSubmit}\n          render={({ handleSubmit, form }) => {\n            return (\n              <form onSubmit={handleSubmit} className=\"popupSendMessageForm fc-center-center fs18 margin-top\">\n                <Field name=\"name\" validate={required}>\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center margin-bottom-s\">\n                      <Input {...input} type=\"text\" placeholder=\"Название шаблона\" wide />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n\n                <Field name=\"isSearchTemplate\" type=\"checkbox\">\n                  {({ input }) => (\n                    <div className=\"formField f-center-center margin-bottom\">\n                      <Checkbox placeholder=\"Использовать как шаблон\" {...input} wide />\n                    </div>\n                  )}\n                </Field>\n\n                <Field name=\"catalogConfigTypeId\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center margin-bottom-s\">\n                      <Select\n                        disabled={Boolean(form.getFieldState('newConfigType')?.value)}\n                        placeholder=\"Тип события\"\n                        options={getCatalogTypes()}\n                        wide\n                        {...input}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"newConfigType\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center margin-bottom\">\n                      <Input {...input} wide placeholder=\"Новый тип\" />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n\n                <Field name=\"isNotifyByEmail\" type=\"checkbox\">\n                  {({ input }) => (\n                    <div\n                      className={cx(\n                        'formField f-center-center margin-bottom',\n                        form.getState().values.isNotifyByEmail && 'margin-bottom1',\n                      )}\n                    >\n                      <Checkbox id=\"isNotifyByEmail\" placeholder=\"Уведомлять по email\" wide {...input} />\n                    </div>\n                  )}\n                </Field>\n                {formState.isNotifyByEmail && (\n                  <div className=\"mailsFiled\">\n                    <Field name=\"emails\" validate={validateEmail}>\n                      {({ input, meta }) => (\n                        <div className=\"formField f-center-center margin-bottom\">\n                          <input\n                            {...input}\n                            type=\"text\"\n                            placeholder=\"Emails\"\n                            onKeyPress={(e) => {\n                              if (e.key === 'Enter') {\n                                e.preventDefault()\n                                addMail(form.getFieldState('emails')?.value)\n                              }\n                            }}\n                          />\n                          {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                        </div>\n                      )}\n                    </Field>\n                    <div className=\"margin-bottom\" onClick={() => addMail(form.getFieldState('emails')?.value)}>\n                      <PlusOutline className=\"primary\" />\n                    </div>\n                  </div>\n                )}\n                {formState.isNotifyByEmail &&\n                  formState.mails.map((item: string, index: number) => (\n                    <div className=\"mailList\" key={item}>\n                      <span>{item}</span>\n                      <CloseCircleOutlined onClick={() => deleteMail(index)} />\n                    </div>\n                  ))}\n\n                {formState.isNotifyByEmail && formState.mails.length > 0 && <div className=\"margin-bottom\"> </div>}\n                <Field name=\"isNotifyInProfile\" type=\"checkbox\">\n                  {({ input }) => (\n                    <div className=\"formField f-center-center margin-bottom\">\n                      <Checkbox id=\"isNotifyInProfile\" placeholder=\"Уведомлять в профиле\" wide {...input} />\n                    </div>\n                  )}\n                </Field>\n\n                <div className=\"f-right-center wrap\">\n                  <Button type=\"submit\">Сохранить</Button>\n                </div>\n              </form>\n            )\n          }}\n        />\n      </Portal>\n    </>\n  )\n\n  function validateConfigTypeName(v: any): any {\n    if (!isEqual(formState, v)) setFormState({ ...v })\n\n    let emails\n    if (v.isNotifyByEmail && formState.mails.length === 0) {\n      emails = 'Добавьте адреса рассылки'\n    }\n\n    if (!v.catalogConfigTypeId && !v.newConfigType) {\n      return {\n        catalogConfigTypeId: 'Укажите тип события или создайте новое',\n        newConfigType: 'Укажите тип события или создайте новое',\n        emails,\n      }\n    }\n    return { emails }\n  }\n\n  function getCatalogTypes() {\n    return configTypeCatalogState.list.map((i) => ({\n      label: i.name,\n      value: String(i.id),\n    }))\n  }\n\n  function getConfigTypeCatalog() {\n    dsp(configTypeCatalogActions.getList())\n  }\n\n  function onSubmit(values: any): void {\n    values.params = params\n\n    const modifiedValue = values\n\n    delete modifiedValue.emails\n\n    if (!modifiedValue.isNotifyByEmail) modifiedValue.mails = []\n\n    if (values.newConfigType) {\n      dsp(\n        configTypeCatalogActions.create(modifiedValue.newConfigType, function onSuccess(responseBody) {\n          createParamConfig({ ...modifiedValue, catalogConfigTypeId: responseBody.body.id })\n        }),\n      )\n    } else {\n      createParamConfig(modifiedValue)\n    }\n\n    function createParamConfig(v: any) {\n      const isEventTrackerConfig = Boolean(v.isNotifyInProfile || v.isNotifyByEmail || v.isSendPushNotifications)\n\n      dsp(\n        paramsConfigActions.create(\n          {\n            ...v,\n            isEventTrackerConfig,\n          },\n          {\n            onSuccess: () => {\n              setIsOpen(false)\n              updateForm()\n              dsp(paramsConfigActions.getList())\n            },\n          },\n        ),\n      )\n    }\n  }\n\n  function addMail(value: string) {\n    if (!value) return\n    if (!validateEmail(value))\n      setFormState((old: any) => {\n        const mails = [...old.mails]\n        mails.push(value)\n        return { ...old, mails, emails: null }\n      })\n  }\n\n  function deleteMail(index: number) {\n    setFormState((old: any) => {\n      const mails = [...old.mails]\n      mails.splice(index, 1)\n      return { ...old, mails }\n    })\n  }\n\n  function validateEmail(value: string) {\n    if (value && !/.+@.+\\..+/.test(value)) return 'Неверный формат email'\n    if (value && formState.mails.includes(value)) return 'Данный email уже добавлен'\n    return null\n  }\n\n  function updateForm() {\n    setFormState({\n      params,\n      configType: ROUTES.SEARCH_CLIENT.isCurrent ? 'CLIENT' : 'CAR',\n      mails: [],\n    })\n  }\n}\n\nexport default PopupSaveTemplate\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { FC, useEffect, useMemo, useRef } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Collapse, { Panel } from 'rc-collapse'\n\nimport Button from '@/components/button'\nimport DownloadIcon from '@/components/svg/downloadFilledIcon'\nimport Select from '@/components/select'\nimport Input from '@/components/newInput'\nimport CheckboxButton from '@/components/checkboxButton'\n\nimport MALFUNCTIONS from '@/constant/lastTelemetry'\n\nimport motion from '@/helper/animation'\n\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\nimport * as referencesActions from '@/store/action/valuesCatalog'\n\nimport FilterHeader from '@/template/collapseHeader/_collapseHeader'\n\nimport { CarFilter, CarState, ParamsConfigState, RootState, ValuesCatalogState } from '@/type/state'\n\nimport { ListManager } from '@/util/listManager'\n\nimport PopupSaveTemplate from '../popup.saveTemplate'\n\ntype CarSearchFilterProps = {\n  initialValues: CarState['filter']\n  onSubmit: (v: CarFilter) => void\n  listManager: ListManager\n}\n\nconst CarSearchFilter: FC<CarSearchFilterProps> = ({ onSubmit, initialValues, listManager }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const setPopupSaveTemplateOpenRef = useRef<undefined | ((v: boolean) => void)>(undefined)\n\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n  const valuesCatalogState = useSelector((s: RootState): ValuesCatalogState => s.valuesCatalogState)\n  const { list } = paramsConfigState\n\n  useEffect(getParamsConfig, [])\n  useEffect(getValuesCatalog, [])\n\n  const issueYear = useMemo(() => {\n    const years = valuesCatalogState.entity?.catalogGroupByParameterType?.ISSUE_YEAR || []\n    return years\n      .sort()\n      .map((n) => parseInt(n, 10))\n      .map((item) => item.toString())\n      .map((value) => ({ value, label: value }))\n  }, [valuesCatalogState.entity])\n\n  return (\n    <>\n      <Form<Partial<CarFilter>>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        render={({ handleSubmit, form }) => {\n          return (\n            <form onSubmit={handleSubmit} className=\"fc-center-center\">\n              <PopupSaveTemplate\n                setStateRef={setPopupSaveTemplateOpenRef}\n                params={{ carParams: form.getState().values }}\n              />\n              <div className=\"fieldRow fs18 margin-top\">\n                <Field name=\"paramConfigId\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Select\n                        {...input}\n                        wide\n                        placeholder=\"Выбрать из шаблона\"\n                        loading={paramsConfigState.loading.refreshList}\n                        onChange={(v) => {\n                          input.onChange(v)\n\n                          const paramConfig = list?.find((i) => String(i.id) === String(v))\n\n                          if (paramConfig) {\n                            form.initialize(({\n                              paramConfigId: v,\n                              ...paramConfig.params?.carParams,\n                            } as unknown) as CarFilter)\n                          } else {\n                            form.initialize({ paramConfigId: undefined } as CarFilter)\n                          }\n                        }}\n                        options={getTemplateOptions()}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n              <div className=\"fieldRow fs18\">\n                <Field name=\"carParameter.stateNumber\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Input {...input} clearable type=\"text\" id=\"carParameter.stateNumber\" placeholder=\"Гос. номер\" />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n\n              <div className=\"fieldRow fs18\">\n                <Field name=\"brand\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Select\n                        {...input}\n                        wide\n                        placeholder=\"Марка\"\n                        onChange={(v) => {\n                          form.resetFieldState('model')\n                          input.onChange(v)\n                        }}\n                        options={getBrand()}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n\n                <Field name=\"model\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\" key={JSON.stringify(form.getFieldState('brand'))}>\n                      <Select\n                        key={JSON.stringify(form.getState().values)}\n                        {...input}\n                        wide\n                        placeholder=\"Модель\"\n                        options={getModel()}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n\n              <div className=\"fieldRow fs18\">\n                <Field name=\"carParameter.issueYear.minValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Select {...input} wide placeholder=\"Год выпуска (min)\" options={issueYear} />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"carParameter.issueYear.maxValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Select {...input} wide placeholder=\"Год выпуска (max)\" options={issueYear} />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n              <div className=\"fieldRow fs18\">\n                <Field name=\"regionId\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Input\n                        {...input}\n                        type=\"text\"\n                        id=\"regionId\"\n                        placeholder=\"Регион нахождения  kjhgfkhgkjhgkjhgkj jhgkjhgjh\"\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"vin\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Input {...input} type=\"text\" placeholder=\"VIN заводской (ПТС)\" />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n              <div className=\"fieldRow fs18\">\n                <Field name=\"lastTelemetry.odometer.minValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Input {...input} type=\"text\" id=\"lastTelemetry.odometer.minValue\" placeholder=\"Пробег (min)\" />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"lastTelemetry.odometer.maxValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <Input {...input} type=\"text\" id=\"lastTelemetry.odometer.maxValue\" placeholder=\"Пробег (max)\" />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n              <div className=\"f-left-center wrap margin-bottom-s\">\n                <Collapse\n                  className=\"filterCollapse wrap\"\n                  // onChange={() => changeCollapseActiveKey()}\n                  // activeKey={clientState.filterCollapseActiveKeys}\n                  // defaultActiveKey=\"main\"\n                  openMotion={motion}\n                >\n                  <Panel\n                    // key=\"main\"\n                    header={<FilterHeader title=\"Дополнительно\" className=\"primary fs30\" noArrow />}\n                    headerClass=\"filterCollapseHeader\"\n                  >\n                    <div className=\"fc-center-center wrap\">\n                      <div className=\"fieldRow fs18  margin-top\">\n                        <Field name=\"lastTelemetry.ignitionStatus\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"ignitionStatus\"\n                                placeholder={MALFUNCTIONS.ignitionStatus.label}\n                                wide\n                                type=\"checkbox\"\n                                {...input}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.lamp624\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"attentionStatus\"\n                                wide\n                                type=\"checkbox\"\n                                placeholder={MALFUNCTIONS.attentionStatus.label}\n                                {...input}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.lamp1213\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                placeholder={MALFUNCTIONS.mil.label}\n                                wide\n                                id=\"mil\"\n                                type=\"checkbox\"\n                                {...input}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.lamp623\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"criticalFault\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.criticalFault.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.airbagFired\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"airbagFired\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.airbagFired.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.breakFluidLowLevel\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"breakFluidLowLevel\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.breakFluidLowLevel.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.coolantLevelLow\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"coolantLevelLow\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.coolantLevelLow.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.generatorMalfunction\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"generatorMalfunction\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.generatorMalfunction.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.powerStatus\" type=\"checkbox\">\n                          {({ input }) => (\n                            <div className=\"formField f-center-center\">\n                              <CheckboxButton\n                                id=\"powerStatus\"\n                                type=\"checkbox\"\n                                wide\n                                {...input}\n                                placeholder={MALFUNCTIONS.powerStatus.label}\n                              />\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.remainingMileage.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.remainingMileage.minValue\"\n                                placeholder=\"Остаток пробега до ТО (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.remainingMileage.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.remainingMileage.maxValue\"\n                                placeholder=\"Остаток пробега до ТО (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.onboardPowerVoltage.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.onboardPowerVoltage.minValue\"\n                                placeholder=\"Напряжение сети (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.onboardPowerVoltage.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.onboardPowerVoltage.maxValue\"\n                                placeholder=\"Напряжение сети (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.fuelLevel.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.fuelLevel.minValue\"\n                                placeholder=\"Уровень топлива (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.fuelLevel.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.fuelLevel.minValue\"\n                                placeholder=\"Уровень топлива (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.engineOilPressure.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.engineOilPressure.minValue\"\n                                placeholder=\"Давление масла в двигателе (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.engineOilPressure.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.engineOilPressure.maxValue\"\n                                placeholder=\"Давление масла в двигателе (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.coolantTemp.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.coolantTemp.minValue\"\n                                placeholder=\"t охлаждающей жидкости (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.coolantTemp.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.coolantTemp.maxValue\"\n                                placeholder=\"t охлаждающей жидкости (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                      <div className=\"fieldRow fs18\">\n                        <Field name=\"lastTelemetry.fuelConsumption.minValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.fuelConsumption.minValue\"\n                                placeholder=\"Потребление топлива (min)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                        <Field name=\"lastTelemetry.fuelConsumption.maxValue\">\n                          {({ input, meta }) => (\n                            <div className=\"formField f-center-center\">\n                              <Input\n                                {...input}\n                                type=\"text\"\n                                id=\"lastTelemetry.fuelConsumption.maxValue\"\n                                placeholder=\"Потребление топлива (max)\"\n                              />\n                              {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                            </div>\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                  </Panel>\n                </Collapse>\n              </div>\n              <div className=\"f-left-center wrap margin-top-s fs18\">\n                <Button type=\"submit\" color=\"primary\">\n                  Искать\n                </Button>\n                <Button\n                  color=\"primary\"\n                  type=\"button\"\n                  style={{ marginLeft: '12px' }}\n                  onClick={() => {\n                    listManager.reset()\n                    form.initialize({ paramConfigId: undefined } as CarFilter)\n                  }}\n                >\n                  Очистить\n                </Button>\n                <Link\n                  to=\"#\"\n                  className=\"f nowrap margin-left\"\n                  onClick={() => setPopupSaveTemplateOpenRef.current?.(true)}\n                >\n                  <DownloadIcon />\n                  Сохранить как шаблон для поиска\n                </Link>\n              </div>\n            </form>\n          )\n        }}\n      />\n    </>\n  )\n\n  function getTemplateOptions() {\n    return list\n      .filter((i) => i.configType === 'CAR' && i.isSearchTemplate)\n      .map((i) => ({\n        value: i.id.toString(),\n        label: i.name,\n      }))\n  }\n\n  function getParamsConfig() {\n    dsp(paramsConfigActions.refreshList({ size: 1000, page: 0, isActive: true }))\n  }\n\n  function getValuesCatalog() {\n    dsp(referencesActions.getBrandModelIssueYear())\n  }\n\n  function getBrand() {\n    const brand = valuesCatalogState.entity?.catalogGroupByParameterType?.BRAND || []\n    return brand.sort().map((value) => ({ value, label: value }))\n  }\n\n  function getModel() {\n    const model = valuesCatalogState.entity?.catalogGroupByParameterType?.MODEL || []\n    return model.sort().map((value) => ({ value, label: value }))\n  }\n}\n\nexport default CarSearchFilter\n","import { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { GET } from '../constant/valuesCatalog'\n\nexport const getBrandModelIssueYear = (): APIAction => {\n  return {\n    type,\n    method: 'get',\n    url: `/api/values-catalog`,\n    stageActionTypes: GET,\n  }\n}\n","import { CarModel } from '@/type/model'\n\nexport function buildCarTitle(Car: CarModel): string {\n  return `${Car.brand ? Car.brand : ''}${Car.brand && Car.model ? ', ' : ''}${Car.model ? Car.model : ''}${\n    Car.carParameter?.issueYear && Car.model ? ', ' : ''\n  }${Car.carParameter?.issueYear ? Car.carParameter?.issueYear : ''}`\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-one-expression-per-line */\n\nimport React, { FC } from 'react'\n\nimport { useDispatch } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport c from 'clsx'\n\nimport ROUTES from '@/constant/routes'\nimport { MALFUNCTIONS } from '@/constant/lastTelemetry'\nimport CheckboxButton from '@/components/checkboxButton'\n\nimport * as carActions from '@/store/action/car'\n\nimport { CarModel } from '@/type/model'\nimport { CarState } from '@/type/state'\n\nimport minibusSrc from '@/img/minibus.jpg'\n\nimport { buildCarTitle } from '../util'\n\ntype CarListItemProps = {\n  entity: CarModel\n  carState: CarState\n  className: string\n}\n\nconst CarListItem: FC<CarListItemProps> = ({ entity, carState, className }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const { odometer, ...malfunction } = entity?.lastTelemetry || {}\n\n  const isMalfunction = Boolean(Object.entries(malfunction).filter(([, v]) => !!v).length)\n\n  return (\n    <div className={c(className, 'CarListItem relative f-top-left')}>\n      <Link to={ROUTES.SEARCH_CAR_CAR.PATH.replace(':uuid', entity.uuid)} onClick={setCar}>\n        <img src={minibusSrc} alt=\"#\" className=\"margin-right\" />\n      </Link>\n      <div className=\"description fc wide\">\n        <div className=\"bold fs34 wide margin-bottom-s\">{buildCarTitle(entity)}</div>\n        <div className=\"f\">\n          <div className=\"mainInfo\">\n            <div className=\"CardInfoLink\" onClick={setCar}>\n              {[\n                { label: 'Гос. номер', value: entity?.carParameter?.stateNumber || '—' },\n                { label: 'VIN', value: entity.vin || '—' },\n                { label: 'Клиент', value: entity.customers[0].legalEntity || '—' },\n                { label: 'Рекомендации для дилера', value: 'нет' },\n              ].map((item) => (\n                <div className=\"margin-top-s\" key={item.label}>\n                  <div className=\"fs16 colorDim margin-bottom-xs nowrap\">{item.label}:</div>\n                  <div className=\"fs20\">{item.value}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"additionalInfo fc-center-center wide\">\n            <div>\n              <p className=\"fs18 margin-bottom\">\n                Пробег: &nbsp;\n                <span className=\"bold\">{odometer || '-'}</span>\n                &nbsp; {odometer ? 'км' : ''}\n              </p>\n              <div className={c(`fs14 margin-bottom`, isMalfunction && 'primary')}>\n                {isMalfunction ? (\n                  <>\n                    {Object.entries(malfunction)\n                      .filter(([, v]) => v)\n                      .map(([key]) => (\n                        <p>\n                          {MALFUNCTIONS[key as keyof typeof MALFUNCTIONS]?.short}\n                          <br />\n                        </p>\n                      ))}\n                  </>\n                ) : (\n                  <>\n                    нет активных сигнализаторов\n                    <br />\n                    неисправностей\n                  </>\n                )}\n              </div>\n              <p>\n                <Link\n                  to={ROUTES.SEARCH_CAR_CAR.PATH.replace(':uuid', entity.uuid)}\n                  className=\"fs18 underline\"\n                  onClick={setCar}\n                >\n                  Подробнее\n                </Link>\n              </p>\n            </div>\n          </div>\n          <CheckboxButton\n            onChange={checkCar}\n            className=\"checkbox absolute-right-center margin-right-s\"\n            checked={Boolean(carState.checkList.find((ic) => ic.uuid === entity.uuid))}\n          />\n        </div>\n      </div>\n    </div>\n  )\n\n  function setCar() {\n    dsp(carActions.set({ entity }))\n  }\n\n  function checkCar(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.checked) {\n      dsp(carActions.set({ checkList: [...carState.checkList, entity] }))\n    } else {\n      dsp(carActions.set({ checkList: carState.checkList.filter((ic) => ic.uuid !== entity.uuid) }))\n    }\n  }\n}\n\nexport default CarListItem\n","import './_list.car.less'\n\nimport React, { FC, useEffect, useRef, useState } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Collapse from 'rc-collapse'\n\nimport cx from 'clsx'\n\nimport { isEmpty, isEqual } from 'lodash'\n\nimport { useLocation } from 'react-router'\n\n// import { skeletonArray } from '@/components/skeleton/_skeleton'\nimport SettingsIcon from '@/components/svg/settingsFilledIcon'\n\nimport ROUTES from '@/constant/routes'\n// import { clientSkeleton } from '@/constant/skeleton'\n\nimport motion, { delayListItem } from '@/helper/animation'\n\nimport * as carActions from '@/store/action/car'\n\nimport FilterHeader from '@/template/collapseHeader/_collapseHeader'\nimport { PaginationSection } from '@/template/paginationSection'\nimport Empty from '@/template/empty/_empty'\n\nimport { CarState, RootState } from '@/type/state'\nimport { CarModel } from '@/type/model'\n\nimport { useListManager } from '@/util/listManager'\n\nimport PopupSendMessage from '../popup.sendMessage'\n\nimport Filter from './filter'\n\nimport ListItem from './card'\n\nconst { Panel } = Collapse\n\ntype CarProps = {\n  text?: 'string'\n}\n\nconst SearchCarList: FC<CarProps> = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const location = useLocation()\n\n  const setPopupSendMessageOpenRef = useRef(undefined)\n\n  const carState = useSelector((s: RootState): CarState => s.carState)\n  const { list, checkList } = carState\n\n  const listManager = useListManager({\n    onStage: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onSuccess: ({ body }: any) => body.content.length && changeCollapseActiveKey([]),\n    },\n    route: ROUTES.SEARCH_CAR,\n    actions: carActions,\n    state: carState,\n  })\n\n  const [checkBoxesOnAnotherPageList, setCheckBoxesOnAnotherPageList] = useState<CarModel[]>([])\n\n  useEffect(checkCheckBoxesAtAnotherPage, [checkList, list])\n  useEffect(getCarList, [location.search])\n\n  function checkCheckBoxesAtAnotherPage(): void {\n    const listElems = list.map((elem: CarModel) => elem.uuid)\n    const checkListElems = checkList.map((item: CarModel) => item.uuid)\n    const arr: CarModel[] = []\n\n    for (let i = 0; i < checkListElems.length; i += 1) {\n      if (!listElems.includes(checkListElems[i])) {\n        arr.push(checkList[i])\n      }\n    }\n    setCheckBoxesOnAnotherPageList(arr)\n  }\n  return (\n    <div className={cx('SearchCarList animSwitchFromLeft', listManager.isLoading && 'loading')}>\n      <PopupSendMessage setStateRef={setPopupSendMessageOpenRef} />\n      <section className=\"margin-bottom-l\">\n        <Collapse\n          className=\"filterCollapse\"\n          onChange={() => changeCollapseActiveKey()}\n          activeKey={carState.filterCollapseActiveKeys}\n          defaultActiveKey=\"main\"\n          openMotion={motion}\n        >\n          <Panel\n            key=\"main\"\n            header={<FilterHeader title=\"Раскрыть фильтр\" className=\"primary fs30\" icon={<SettingsIcon />} />}\n            headerClass=\"filterCollapseHeader\"\n          >\n            <Filter\n              listManager={listManager}\n              onSubmit={listManager.onFilterChange}\n              initialValues={listManager.state.filter}\n            />\n          </Panel>\n        </Collapse>\n      </section>\n      <PaginationSection\n        paginationProps={listManager.paginationProps}\n        list={list}\n        checkList={checkList}\n        checkAll={checkAll}\n        loading={listManager.isLoading}\n        setIsModalOpen={setPopupSendMessageOpenRef.current}\n      />\n      <section className=\"last\">\n        {listManager.isEmpty ? (\n          <Empty />\n        ) : (\n          list.map((iCar, i) => {\n            return (\n              <ListItem\n                key={iCar.uuid}\n                entity={iCar}\n                carState={carState}\n                className={cx(`aDelay${delayListItem(i + 2, list.length)}00ms`)}\n              />\n            )\n          })\n        )}\n      </section>\n    </div>\n  )\n\n  function getCarList() {\n    const { parsedSearch } = listManager\n\n    if (isEmpty(parsedSearch)) return\n\n    if (!isEqual(parsedSearch, listManager.state.filter)) {\n      listManager.dispatchAction()\n    }\n  }\n\n  function checkAll(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.checked) {\n      let result = []\n      if (checkList.length === 0) result = list\n      else result = [...list, ...checkBoxesOnAnotherPageList]\n      dsp(carActions.set({ checkList: result }))\n    } else if (checkBoxesOnAnotherPageList.length === 0) {\n      dsp(carActions.set({ checkList: [] }))\n    } else {\n      dsp(carActions.set({ checkList: checkBoxesOnAnotherPageList }))\n    }\n  }\n\n  function changeCollapseActiveKey(value?: React.Key[]) {\n    dsp(\n      carActions.set({\n        filterCollapseActiveKeys: value || carState.filterCollapseActiveKeys.includes('main') ? [] : ['main'],\n      }),\n    )\n  }\n}\n\nexport default SearchCarList\n","import { useEffect, useState } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { CSSVariableState, RootState } from '@/type/state'\n\nexport default function delayRender(): number {\n  const cssVariableState = useSelector((s: RootState): CSSVariableState => s.cssVariableState)\n\n  const [renderDelay, setRenderDelay] = useState(cssVariableState.appPageSwitchAnimation)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setRenderDelay(0)\n    }, renderDelay)\n  }, [])\n\n  return renderDelay\n}\n","import { PageableRow } from '@/type/type'\n\nconst customerList = {\n  content: [\n    {\n      id: 7215,\n      legalEntity: 'XXX-7215',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-01-13',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '612949d1-0f1a-4afe-99fb-120fe352688f',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'Z7800000000801491',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 8722,\n      legalEntity: 'XXX-8722',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-03-18',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '159ec74c-4a26-4e4d-af79-eee1ad5a70eb',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'XJG00000000804805',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 5852,\n      legalEntity: 'XXX-5852',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-08-26',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'a0373f20-5f7a-4dc7-a573-d0e0a7714b2b',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'Z7800000000670137',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 6093,\n      legalEntity: 'XXX-6093',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-09-28',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'f8983c1c-8d09-4b89-93d4-f046bb250d9f',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ БИЗНЕС',\n          issueYear: 2019,\n          vin: 'XU400000000790039',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 6905,\n      legalEntity: 'XXX-6905',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-12-16',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '3b047f0d-cb83-4b54-b696-9f34d6dfabe2',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'X9600000000894791',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 5911,\n      legalEntity: 'XXX-5911',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-09-08',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '659a7556-83be-45a9-a3e7-30612ff965fd',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'X9600000000856681',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 5555,\n      legalEntity: 'XXX-5555',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-05-25',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '74b6b6c6-cc0c-47f4-a656-20f4e8b5a747',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'XU400000000770473',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 3531,\n      legalEntity: 'XXX-3531',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-04-19',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '654736c2-aeb5-4e21-abfa-4a5b29f1a3a5',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ БИЗНЕС',\n          issueYear: 2019,\n          vin: 'X9600000000729021',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 1329,\n      legalEntity: 'XXX-1329',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-02-26',\n      carCount: 5,\n      cars: [\n        {\n          uuid: 'e515701b-f14a-4afe-93f0-df86a0042b82',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000685259',\n          odometer: 12638,\n        },\n        {\n          uuid: '6743fa38-a054-454b-b846-f37e6c07f36a',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000746519',\n          odometer: 12638,\n        },\n        {\n          uuid: '4598084b-327a-4e96-bce0-1c5ae3525816',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000641047',\n          odometer: 12638,\n        },\n        {\n          uuid: '7d5ec484-9e0d-4a63-ad04-ede1b893c48c',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000746553',\n          odometer: 12638,\n        },\n        {\n          uuid: '6008d1f0-9197-4881-8161-88c629c5eb10',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000750779',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 7448,\n      legalEntity: 'XXX-7448',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-01-30',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '6119cd0c-53b7-474a-a3e9-81b841718535',\n          brand: 'ГАЗ',\n          model: 'ГАЗОН NEXT',\n          issueYear: 2020,\n          vin: 'X9600000000905061',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 7471,\n      legalEntity: 'XXX-7471',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-02-01',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '80992aab-165b-471a-843b-e7b9978c2713',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'Z7800000000801011',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 2189,\n      legalEntity: 'XXX-2189',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-03-19',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'b1d78932-a7fe-49f3-9428-5ff09adb2c43',\n          brand: 'ГАЗ',\n          model: 'СОБОЛЬ',\n          issueYear: 2019,\n          vin: 'X9600000000839767',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 861,\n      legalEntity: 'XXX-861',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-02-08',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'c74ee05d-c9a3-4d44-a4f0-130f6fb80c6d',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000815291',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 985,\n      legalEntity: 'XXX-985',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-02-15',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '33267a6d-6cb9-4f39-9c43-7d9297eec568',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000822425',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 7341,\n      legalEntity: 'XXX-7341',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-01-22',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '9eea6280-056c-4c9e-8944-d39fc01cf961',\n          brand: 'ГАЗ',\n          model: 'СОБОЛЬ',\n          issueYear: 2020,\n          vin: 'X9600000000883897',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 5597,\n      legalEntity: 'XXX-5597',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-06-08',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '8048acea-5b29-4dfc-b5f0-07f22fb7ec89',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'X9600000000686393',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 6291,\n      legalEntity: 'XXX-6291',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2020-10-22',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '0e05f1e0-3c20-4425-be13-102e50886397',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ БИЗНЕС',\n          issueYear: 2020,\n          vin: 'X9600000000655395',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 2827,\n      legalEntity: 'XXX-2827',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-04-02',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'b5ba8e53-4839-4c19-ab72-2428195af5b6',\n          brand: 'ГАЗ',\n          model: 'СОБОЛЬ',\n          issueYear: 2019,\n          vin: 'X9600000000640687',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 1017,\n      legalEntity: 'XXX-1017',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-02-18',\n      carCount: 1,\n      cars: [\n        {\n          uuid: '73dd4596-d598-4d2e-8fa4-1bc01a134f82',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2019,\n          vin: 'X9600000000693997',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 7321,\n      legalEntity: 'XXX-7321',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2021-01-20',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'cce70802-a7da-4774-be8c-1d1ca79237c7',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ NEXT',\n          issueYear: 2020,\n          vin: 'Z7800000000803109',\n          odometer: 12638,\n        },\n      ],\n    },\n    {\n      id: 4020,\n      legalEntity: 'XXX-4020',\n      uuid: null,\n      fullNameOfLegalEntity: null,\n      contractNumber: null,\n      tariff: null,\n      connectionDate: '2019-04-30',\n      carCount: 1,\n      cars: [\n        {\n          uuid: 'cd26ceea-2960-49eb-81ed-3fca4566169b',\n          brand: 'ГАЗ',\n          model: 'ГАЗЕЛЬ БИЗНЕС',\n          issueYear: 2019,\n          vin: 'XU400000000720087',\n          odometer: 12638,\n        },\n      ],\n    },\n  ],\n  totalElements: 21,\n}\n\nexport function customerFilter(query: PageableRow): typeof customerList {\n  const offset = query.page * query.size\n\n  const content = customerList.content.slice(offset, offset + query.size)\n\n  return {\n    content,\n    totalElements: customerList.content.length,\n  }\n}\n\nexport default customerList\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { REDUX_API_MIDDLEWARE as type, APIAction, OnFail, OnStart, OnSuccess } from '@savchenko91/rc-redux-api-mw'\n\nimport { Content, ClientModel, Id } from '@/type/model'\nimport { ClientFilter, ClientState, RootState } from '@/type/state'\nimport { Action } from '@/type/type.d'\n\nimport { customerFilter } from '@/fakeResponse/customers'\nimport fakeResponse from '@/fakeResponse'\nimport * as CONSTANTS from '../constant/client'\n\ntype OnStage<ResponseBody = unknown, RequestBody = unknown, Payload = unknown> = {\n  onStart: OnStart<ResponseBody, RequestBody, Payload>\n  onSuccess: OnSuccess<ResponseBody, RequestBody, Payload>\n  onFail: OnFail<ResponseBody, RequestBody, Payload>\n}\n\nexport const set = (payload: Partial<ClientState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const get = (id: string): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/customer/${id}`,\n  method: 'get',\n})\n\nexport const getList = (\n  query: ClientState['filter'],\n  onStage?: OnStage<Content<ClientModel[]>, ClientFilter>,\n): APIAction<Content<ClientModel[]>, ClientFilter> => {\n  return {\n    fakeResponse: fakeResponse(customerFilter(query)),\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/customers`,\n    method: 'get',\n    type,\n    ...onStage,\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const update = (body: ClientModel, onStage: any): APIAction => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.PUT_CLINT,\n    url: `/api/customers/${body.id}`,\n    method: 'put',\n    body,\n    onSuccess(args) {\n      const { store } = args\n      const { list } = (store.getState() as RootState).clientState\n\n      store.dispatch(set({ list: list.map((i) => (i.id.toString() === body.id.toString() ? body : i)) }))\n      onStage?.onSuccess?.(args)\n    },\n    onFail: onStage.onFail,\n  }\n}\n\nexport const getCarList = (id: Id, onStage?: OnStage<Content<ClientModel[]>>): APIAction<Content<ClientModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_CAR_LIST,\n    url: `/api/customers/${id}/cars`,\n    method: 'get',\n    payload: id,\n    ...onStage,\n  }\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { FC, useEffect, useRef, useState } from 'react'\n\nimport { DateTime } from 'luxon'\n\nimport { Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Button from '@/components/button'\n\nimport DatePicker from '@/components/datepicker/_datepicker'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\n// import PlusIcon from '@/components/svg/plusOutlinedIcon'\n\nimport DownloadIcon from '@/components/svg/downloadFilledIcon'\n\nimport setCSSVariable from '@/hook/useSetCSSVariable/util'\n\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { PageableRow } from '@/type/type'\n\nimport { ClientFilter, ParamsConfigState, RootState } from '@/type/state'\n\nimport { ListManager } from '@/util/listManager'\n\nimport PopupSaveTemplate from '../popup.saveTemplate'\n\ntype ClientFilterListProps = {\n  initialValues: Partial<ClientFilter & { paramConfigId: number }> & PageableRow\n  onSubmit: (v: ClientFilter) => void\n  listManager: ListManager\n}\n\nconst ClientListFilter: FC<ClientFilterListProps> = ({ onSubmit, initialValues, listManager }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const setPopupSaveTemplateOpenRef = useRef<undefined | ((v: boolean) => void)>(undefined)\n\n  const [collapseOverflow, setCollapseOverflow] = useState<'hidden' | 'visible'>('hidden')\n\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n  const { list } = paramsConfigState\n\n  useEffect(setCSSVariableCollapseOverflow, [collapseOverflow])\n  useEffect(getParamsConfig, [])\n\n  return (\n    <>\n      <Form<ClientFilter>\n        initialValues={initialValues}\n        onSubmit={onFilterSubmit}\n        render={({ handleSubmit, form }) => (\n          <form onSubmit={handleSubmit} className=\"fc-center-center fs18\">\n            <PopupSaveTemplate\n              setStateRef={setPopupSaveTemplateOpenRef}\n              params={{ clientParams: formatConnectionDate(form.getState().values) }}\n            />\n            <div className=\"fieldRow  margin-top\">\n              <Field name=\"paramConfigId\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center relative\">\n                    <Select\n                      {...input}\n                      wide\n                      placeholder=\"Выбрать из шаблона\"\n                      // disabled={getTemplateOptions().length === 0}\n                      onChange={(v) => {\n                        input.onChange(v)\n\n                        const paramConfig = list?.find((i) => String(i.id) === String(v))\n\n                        if (paramConfig) {\n                          form.initialize(({\n                            paramConfigId: v,\n                            ...paramConfig.params?.clientParams,\n                          } as unknown) as ClientFilter)\n                        } else {\n                          form.initialize({ paramConfigId: undefined } as ClientFilter)\n                        }\n                      }}\n                      options={buildTemplateOptions()}\n                    />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n            </div>\n            {/* <div className=\"fieldRow\">\n              <Field name=\"firstName\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <input {...input} type=\"text\" placeholder=\"Имя\" />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n              <Field name=\"lastName\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <input {...input} type=\"text\" placeholder=\"Фамилия\" />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n            </div> */}\n            <div className=\"fieldRow\">\n              {/* <Field name=\"phone\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <input {...input} type=\"text\" placeholder=\"Телефон\" />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field> */}\n              <Field name=\"carCount\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <Input {...input} type=\"text\" placeholder=\"Количество ТС\" wide />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n            </div>\n            <div className=\"fieldRow\">\n              <Field name=\"id\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <Input {...input} type=\"text\" placeholder=\"UUID клиента\" wide />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n              {/* <Field name=\"email\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <input {...input} type=\"text\" placeholder=\"Email\" />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field> */}\n            </div>\n            <div className=\"fc wrap\">\n              <div className=\"f-spaceBetween-center wrap\">\n                <div className=\"f-left-center margin-right nowrap margin-bottom-s\">Дата подключения</div>\n              </div>\n              <div className=\"fieldRow\">\n                <Field name=\"connectionDate.minValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <DatePicker\n                        maxDate={form.getFieldState('connectionDate.maxValue' as keyof ClientFilter)?.value as string}\n                        onCalendarOpen={() => setCollapseOverflow('visible')}\n                        onCalendarClose={() => setCollapseOverflow('hidden')}\n                        {...input}\n                        onChange={(dt) => {\n                          if (dt) {\n                            form.change('connectionDate.maxValue' as keyof ClientFilter, dt.plus({ day: 1 }).toString())\n                          }\n                          input.onChange(dt)\n                        }}\n                        wide\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n                <Field name=\"connectionDate.maxValue\">\n                  {({ input, meta }) => (\n                    <div className=\"formField f-center-center\">\n                      <DatePicker\n                        onCalendarOpen={() => setCollapseOverflow('visible')}\n                        onCalendarClose={() => setCollapseOverflow('hidden')}\n                        minDate={form.getFieldState('connectionDate.minValue' as keyof ClientFilter)?.value as string}\n                        wide\n                        {...input}\n                      />\n                      {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    </div>\n                  )}\n                </Field>\n              </div>\n            </div>\n            <div className=\"fieldRow\">\n              <Field name=\"contractNumber\">\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <Input {...input} type=\"text\" placeholder=\"№ Договора\" wide />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n              {/* <div className=\"formField f-left-center\">\n                <Link className=\"f-top-left bold\" to=\"#\">\n                  <PlusIcon className=\"fs12\" />\n                  Добавить дополнительное\n                  <br />\n                  соглашение\n                </Link>\n              </div> */}\n            </div>\n            <div className=\"f-left-center wrap\">\n              <Button type=\"submit\" color=\"primary\">\n                Искать\n              </Button>\n              <Button\n                color=\"primary\"\n                type=\"button\"\n                style={{ marginLeft: '12px' }}\n                onClick={() => {\n                  listManager.reset()\n                  form.initialize({ paramConfigId: undefined } as ClientFilter)\n                }}\n              >\n                Очистить\n              </Button>\n              <Link to=\"#\" className=\"f nowrap margin-left\" onClick={() => setPopupSaveTemplateOpenRef.current?.(true)}>\n                <DownloadIcon />\n                Сохранить как шаблон для поиска\n              </Link>\n            </div>\n          </form>\n        )}\n      />\n    </>\n  )\n\n  function formatConnectionDate(v: ClientFilter): ClientFilter {\n    return {\n      ...v,\n      connectionDate: {\n        minValue: v?.connectionDate?.minValue\n          ? DateTime.fromISO(v?.connectionDate?.minValue).toFormat('yyyy-MM-dd')\n          : '',\n        maxValue: v?.connectionDate?.maxValue\n          ? DateTime.fromISO(v?.connectionDate?.maxValue).toFormat('yyyy-MM-dd')\n          : '',\n      },\n    }\n  }\n\n  function setCSSVariableCollapseOverflow() {\n    setCSSVariable(null, 'collapseOverflow', collapseOverflow)\n  }\n\n  function onFilterSubmit(v: ClientFilter) {\n    onSubmit(formatConnectionDate(v))\n  }\n\n  function buildTemplateOptions() {\n    return list\n      .filter((i) => i.configType === 'CLIENT' && i.isSearchTemplate)\n      .map((i) => ({\n        value: i.id.toString(),\n        label: i.name,\n      }))\n  }\n\n  function getParamsConfig() {\n    dsp(paramsConfigActions.refreshList({ size: 1000, page: 0, isActive: true }))\n  }\n}\n\nexport default ClientListFilter\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg fill=\"currentColor\" height=\"1em\" viewBox=\"0 0 512 512\" width=\"1em\" {...props}>\n        <path d=\"M453.332 512H58.668C26.305 512 0 485.695 0 453.332V58.668C0 26.305 26.305 0 58.668 0h330.836c21.055 0 41.683 8.535 56.555 23.445l42.496 42.496C503.68 81.066 512 101.164 512 122.516v330.816C512 485.695 485.695 512 453.332 512zM58.668 32C43.968 32 32 43.969 32 58.668v394.664C32 468.032 43.969 480 58.668 480h394.664c14.7 0 26.668-11.969 26.668-26.668V122.516c0-12.82-4.992-24.871-14.059-33.942l-42.496-42.496C414.508 37.121 402.156 32 389.504 32zm0 0\" />\n        <path d=\"M325.332 149.332h-224c-8.832 0-16-7.168-16-16V16c0-8.832 7.168-16 16-16s16 7.168 16 16v101.332h192V16c0-8.832 7.168-16 16-16s16 7.168 16 16v117.332c0 8.832-7.168 16-16 16zm0 0M256 416c-52.93 0-96-43.07-96-96s43.07-96 96-96 96 43.07 96 96-43.07 96-96 96zm0-160c-35.285 0-64 28.715-64 64s28.715 64 64 64 64-28.715 64-64-28.715-64-64-64zm0 0\" />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import React, { FC, useEffect, useState } from 'react'\nimport Collapse from 'rc-collapse'\nimport { useDispatch } from 'react-redux'\nimport { Field, Form } from 'react-final-form'\nimport { Link } from 'react-router-dom'\nimport c from 'clsx'\nimport Skelet from 'react-loading-skeleton'\n\nimport ROUTES from '@/constant/routes'\n\nimport Button from '@/components/button'\nimport CheckboxButton from '@/components/checkboxButton'\nimport Input from '@/components/input'\nimport SaveIcon from '@/components/svg/saveOutlinedIcon'\n\nimport motion from '@/helper/animation'\n\nimport minibusSrc from '@/img/minibus.jpg'\n\nimport * as clientActions from '@/store/action/customers'\n\nimport FilterHeader from '@/template/collapseHeader/_collapseHeader'\n\nimport { ClientModel } from '@/type/model'\nimport { ClientState } from '@/type/state'\n\nimport { buildCarTitle } from '../util'\n\nconst { Panel } = Collapse\n\ntype ClientListItemProps = {\n  clientState: ClientState\n  Client: ClientModel\n  className: string\n}\n\nconst ClientListItem: FC<ClientListItemProps> = ({ className, Client, clientState }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(getCars, [isExpanded])\n\n  return (\n    <div className={c(className, 'ClientListWrapper relative')}>\n      <CheckboxButton\n        checked={Boolean(clientState.checkList.find((ic) => String(ic.id) === String(Client.id)))}\n        className=\"selectClientCheckbox absolute\"\n        onChange={checkClient}\n      />\n      <Collapse className=\"ClientListItem\" openMotion={motion} onChange={onCollapse}>\n        <Panel header={<FilterHeader title={Client.legalEntity} className=\"fs30\" />} key=\"1\">\n          <div className=\"cardContent fc margin-right-l\">\n            <div className=\"description margin-bottom-s\">\n              {[\n                { label: 'UUID клиента', value: Client.id },\n                { label: 'Тариф', value: Client.tariff || '—' },\n                { label: 'Дата подключения', value: Client.connectionDate },\n              ].map((item) => (\n                <div key={item.value} className=\"margin-bottom-s\">\n                  <div className=\"fs16 colorDim margin-bottom-xs\">{`${item.label}:`}</div>\n                  <div className=\"fs20\">{item.value}</div>\n                </div>\n              ))}\n              <Form\n                onSubmit={onSubmit}\n                initialValues={Client}\n                render={({ handleSubmit }) => (\n                  <form onSubmit={handleSubmit} className=\"margin-bottom-s\">\n                    <Field name=\"contractNumber\">\n                      {({ input, meta }) => (\n                        <>\n                          <div className=\"fs16 colorDim\">Номер договора:</div>\n                          <div className=\"fs20 f\">\n                            <Input chameleon {...input} style={{ width: 'calc(var(--carImageWidth) * 1rem)' }} />\n                            {!meta.pristine && (\n                              <Button type=\"submit\" className=\"margin-left-s\" icon loading={isLoading}>\n                                <SaveIcon />\n                              </Button>\n                            )}\n                          </div>\n                        </>\n                      )}\n                    </Field>\n                  </form>\n                )}\n              />\n            </div>\n\n            <div className=\"carList f fs18\">\n              {!clientState.CarList[Client.id] &&\n                clientState.loading.getCarList &&\n                Array(Client.carCount)\n                  .fill(0)\n                  .map(() => (\n                    <div className=\"black margin-right\">\n                      <Skelet className=\"carImage\" />\n                      <Skelet />\n                    </div>\n                  ))}\n              {clientState.CarList?.[Client.id]?.map((iCar) => {\n                return (\n                  <Link\n                    className=\"black margin-right\"\n                    to={ROUTES.SEARCH_CLIENT_CAR.PATH.replace(':uuid', iCar.uuid)}\n                    key={iCar.uuid}\n                  >\n                    <img src={minibusSrc} alt=\"авто\" className=\"carImage\" />\n                    <p>{buildCarTitle(iCar)}</p>\n                  </Link>\n                )\n              })}\n            </div>\n          </div>\n        </Panel>\n      </Collapse>\n    </div>\n  )\n\n  function onCollapse(v: string | number | React.ReactText[]) {\n    setIsExpanded(!!(v as [])?.length)\n  }\n\n  function getCars() {\n    if (isExpanded) {\n      dsp(clientActions.getCarList(Client.id))\n    }\n  }\n\n  function onSubmit(v: Record<string, string>): void {\n    setIsLoading(true)\n    const onEnd = () => setIsLoading(false)\n    dsp(clientActions.update({ ...Client, ...v }, { onFail: onEnd, onSuccess: onEnd }))\n  }\n\n  function checkClient(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.checked) {\n      dsp(clientActions.set({ checkList: [...clientState.checkList, Client] }))\n    } else {\n      dsp(clientActions.set({ checkList: clientState.checkList.filter((ic) => String(ic.id) !== String(Client.id)) }))\n    }\n  }\n}\n\nexport default ClientListItem\n","import './_list.client.less'\n\nimport React, { FC, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Collapse from 'rc-collapse'\nimport { useLocation } from 'react-router'\nimport { isEmpty, isEqual } from 'lodash'\nimport cx from 'clsx'\n\nimport { SklList } from '@/components/skelet/_skelet'\nimport SettingsIcon from '@/components/svg/settingsFilledIcon'\n\nimport ROUTES from '@/constant/routes'\n\nimport motion, { delayListItem } from '@/helper/animation'\n\nimport delayRender from '@/hook/delayRender'\n\nimport * as clientActions from '@/store/action/customers'\n\nimport Empty from '@/template/empty/_empty'\nimport FilterHeader from '@/template/collapseHeader/_collapseHeader'\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { ClientState, RootState } from '@/type/state'\nimport { ClientModel } from '@/type/model'\n\nimport { useListManager } from '@/util/listManager'\n\nimport PopupSendMessage from '../popup.sendMessage'\n\nimport Filter from './filter'\n\nimport ListItem from './listItem'\n\nconst { Panel } = Collapse\n\nconst SearchClientList: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const setModalOpenRef = useRef(undefined)\n\n  const renderDelay = delayRender()\n\n  const location = useLocation()\n\n  const clientState = useSelector((s: RootState): ClientState => s.clientState)\n  const { list, checkList } = clientState\n\n  const str = 'client'\n\n  const listManager = useListManager({\n    onStage: {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      onSuccess: ({ body }: any) => body.content.length && changeCollapseActiveKey([]),\n    },\n    route: ROUTES.SEARCH_CLIENT,\n    actions: clientActions,\n    state: clientState,\n  })\n\n  const [checkBoxesOnAnotherPageList, setCheckBoxesOnAnotherPageList] = useState<ClientModel[]>([])\n\n  useEffect(checkCheckBoxesAtAnotherPage, [checkList, list])\n  useEffect(getClientList, [location.search])\n\n  return (\n    <div className={cx('SearchClientList animSwitchFromRight', listManager.isLoading && 'loading')}>\n      <PopupSendMessage setStateRef={setModalOpenRef} />\n      <section className=\"margin-bottom-l\">\n        <Collapse\n          className=\"filterCollapse\"\n          onChange={() => changeCollapseActiveKey()}\n          activeKey={clientState.filterCollapseActiveKeys}\n          defaultActiveKey=\"main\"\n          openMotion={motion}\n        >\n          <Panel\n            key=\"main\"\n            header={<FilterHeader title=\"Раскрыть фильтр\" className=\"primary fs30\" icon={<SettingsIcon />} />}\n            headerClass=\"filterCollapseHeader\"\n          >\n            <Filter\n              onSubmit={listManager.onFilterChange}\n              initialValues={listManager.state.filter}\n              listManager={listManager}\n            />\n          </Panel>\n        </Collapse>\n      </section>\n      <PaginationSection\n        paginationProps={listManager.paginationProps}\n        list={list}\n        checkList={checkList}\n        checkAll={checkAll}\n        loading={listManager.isLoading}\n        setIsModalOpen={setModalOpenRef.current}\n        typeOfParent={str}\n      />\n      {!renderDelay && ROUTES.SEARCH_CLIENT.isPartOf(window.location.pathname) && (\n        <section className=\"last\">\n          {listManager.isEmpty ? (\n            <Empty />\n          ) : (\n            <>\n              {(listManager.initial.request || listManager.initial.list) &&\n                SklList(list, clientState.loading.getList, 'clientList').map((iClient, i) => {\n                  return (\n                    <ListItem\n                      key={iClient.id || i}\n                      clientState={clientState}\n                      Client={iClient}\n                      className={cx(\n                        `aDelay${delayListItem(i + 2, list.length)}00ms`,\n                        // (!isPreviousRelatedPage || initial.current.request) && ClientList.length && 'appearRight',\n                      )}\n                    />\n                  )\n                })}\n            </>\n          )}\n        </section>\n      )}\n    </div>\n  )\n\n  function getClientList() {\n    const { parsedSearch } = listManager\n\n    if (isEmpty(parsedSearch)) return\n\n    if (!isEqual(parsedSearch, listManager.state.filter)) {\n      listManager.dispatchAction()\n    }\n  }\n\n  function checkCheckBoxesAtAnotherPage(): void {\n    const listElems = list.map((elem: ClientModel) => elem.id)\n\n    const checkListElems = checkList?.map((item: ClientModel) => item.id)\n\n    const arr: ClientModel[] = []\n\n    for (let i = 0; i < checkListElems.length; i += 1) {\n      if (!listElems?.includes(checkListElems[i])) {\n        arr.push(checkList[i])\n      }\n    }\n    setCheckBoxesOnAnotherPageList(arr)\n  }\n\n  function checkAll(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.checked) {\n      let result = []\n      if (checkList.length === 0) result = list\n      else result = [...list, ...checkBoxesOnAnotherPageList]\n      dsp(clientActions.set({ checkList: result }))\n    } else if (checkBoxesOnAnotherPageList.length === 0) {\n      dsp(clientActions.set({ checkList: [] }))\n    } else {\n      dsp(clientActions.set({ checkList: checkBoxesOnAnotherPageList }))\n    }\n  }\n\n  function changeCollapseActiveKey(value?: React.Key[]) {\n    dsp(\n      clientActions.set({\n        filterCollapseActiveKeys: value || clientState.filterCollapseActiveKeys.includes('main') ? [] : ['main'],\n      }),\n    )\n  }\n}\n\nexport default SearchClientList\n","import './_tab.search.less'\n\nimport React, { FC, memo } from 'react'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\nimport Header from './header'\n\nimport Car from './car/_car'\nimport CarList from './list.car/_list.car'\nimport ClientList from './list.client/_list.client'\n\nconst SearchTab: FC = (): JSX.Element => {\n  const location = useLocation()\n\n  const isCar = ROUTES.SEARCH_CAR.isCurrent\n  const isCarPrevious = ROUTES.SEARCH_CAR.isPrevious\n  const isClient = ROUTES.SEARCH_CLIENT.isCurrent\n\n  const isCarActiveTab = isCar || (!isClient && isCarPrevious)\n\n  ROUTES.SEARCH.REDIRECT = !isCarActiveTab ? ROUTES.SEARCH_CLIENT : ROUTES.SEARCH_CAR\n\n  const locationAnimationKey = location.pathname.split('/').slice(0, 3).join('/')\n\n  return (\n    <div className=\"SearchTab\">\n      <SwitchTransition>\n        <CSSTransition key={location.pathname} timeout={200} classNames=\"appear\" unmountOnExit>\n          <Switch location={location}>\n            <Route exact path={ROUTES.SEARCH_CAR_CAR.PATH} component={Car} />\n            <Route exact path={ROUTES.SEARCH_CLIENT_CAR.PATH} component={Car} />\n          </Switch>\n        </CSSTransition>\n      </SwitchTransition>\n      <div className=\"SearchContent scrollableContent scrollToTopOnRequest\">\n        <section className=\"title first\">\n          <Header isCarActiveTab={isCarActiveTab} />\n        </section>\n        <SwitchTransition>\n          <CSSTransition\n            key={locationAnimationKey}\n            timeout={{ appear: 0, enter: 200, exit: 200 }}\n            classNames=\"animSwitchHorizontal\"\n            unmountOnExit\n          >\n            <Switch location={location}>\n              <Route path={ROUTES.SEARCH_CLIENT.PATH} component={ClientList} />\n              <Route path={ROUTES.SEARCH_CAR.PATH} component={CarList} />\n              <Redirect to={ROUTES.SEARCH_CLIENT.PATH} />\n            </Switch>\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </div>\n  )\n}\n\nconst x = memo(SearchTab)\nexport default x\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { FC, useRef } from 'react'\n\nimport cx from 'clsx'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Button from '@/components/button'\n\nimport ContentEditable from 'react-contenteditable'\n\ntype DialogBottomBlockProps = {\n  className?: string\n}\n\nconst DialogBottomBlock: FC<DialogBottomBlockProps> = ({ className }): JSX.Element => {\n  const ref = useRef(null)\n\n  return (\n    <div className={cx('DialogBottomBlock horizontalBlock', className)}>\n      <div className=\"f-center wide\">\n        <div className=\"messageInput filter f-center-center\">\n          <Form\n            onSubmit={onSubmit}\n            render={({ handleSubmit }) => (\n              <form onSubmit={handleSubmit} className=\"wrap fs18 f-top\">\n                <Field name=\"message\">\n                  {({ input }) => (\n                    <ContentEditable\n                      className=\"textarea margin-right-s margin-top-s\"\n                      innerRef={ref}\n                      html={input.value}\n                      tagName=\"article\"\n                      {...input}\n                    />\n                  )}\n                </Field>\n\n                <Button className=\"margin-top-s\" type=\"submit\">\n                  Отправить\n                </Button>\n              </form>\n            )}\n          />\n        </div>\n      </div>\n    </div>\n  )\n\n  function onSubmit(v: unknown) {\n    // eslint-disable-next-line no-console\n    console.log(v)\n  }\n}\n\nexport default DialogBottomBlock\n","import './_dialog.less'\n\nimport React, { FC } from 'react'\n\n// import { useDispatch, useSelector } from 'react-redux'\n\n// import { useParams } from 'react-router-dom'\nimport cx from 'clsx'\n\n// import { ROLES } from '@/constant/keyValue'\n// // import ROUTES from '@/constant/routes'\n\n// import KeyIcon from '@/components/svg/keyFilledIcon'\n\n// import Skeleton from '@/components/skeleton/_skeleton'\n\n// import * as userActions from '@/store/action/user'\n\n// import { RootState, UserState } from '@/type/state.d'\n\nimport Bottom from './block.bottom'\n\ntype FeedbackDialogProps = {\n  isCurrent: boolean\n}\n\nconst FeedbackDialog: FC<FeedbackDialogProps> = ({ isCurrent }): JSX.Element => {\n  // const { id } = useParams<{ id: string }>()\n\n  return (\n    <div className={cx('FeedbackDialog absolute wrap scrollableContent', !isCurrent && 'hidden')}>\n      <div className=\"horizontalBlock dialogTopBlock\">\n        <section className=\"first\">\n          <h1>Тикет №000 Информация о стоимости ремонта </h1>\n          {/* <h2>Информация о стоимости ремонта </h2> */}\n        </section>\n      </div>\n      <div className=\"dialogBlock f-center\">\n        <div className=\"dialogLine\">\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n          <p>строка</p>\n        </div>\n      </div>\n      <Bottom />\n    </div>\n  )\n}\n\nexport default FeedbackDialog\n","import qs from 'qs'\n\nimport { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { Content, TicketModel } from '@/type/model'\nimport { ClientState } from '@/type/state'\nimport { Action } from '@/type/type.d'\nimport { OnStage } from '@/type/transfer'\n\nimport * as CONSTANTS from '../constant/ticket'\n\nexport const get = (id: string): APIAction => ({\n  type,\n  stageActionTypes: CONSTANTS.GET,\n  url: `/api/tickets/${id}`,\n  method: 'get',\n})\n\ntype QueryGetList = {\n  page: number\n  size: number\n}\n\nexport const getList = (\n  query: QueryGetList,\n  onStage: OnStage<Content<TicketModel[]>>,\n): APIAction<Content<TicketModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/tickets${qs.stringify(query, { skipNulls: true, addQueryPrefix: true })}`,\n    method: 'get',\n    ...onStage,\n  }\n}\n\nexport const set = (payload: Partial<ClientState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n","import './_list.less'\n\nimport React, { FC, useEffect, memo, useState } from 'react'\n\nimport c from 'clsx'\n\nimport { useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\n// import useDelayRender from '@/hook/useDelayRender'\n\nimport * as userActions from '@/store/action/ticket'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { CSSVariableState, RootState, UserState } from '@/type/state.d'\n\nimport { useListManager } from '@/util/listManager'\n\ntype FeedbackListProps = {\n  isCurrent?: boolean\n}\n\nconst FeedbackList: FC<FeedbackListProps> = (): JSX.Element | null => {\n  const userState = useSelector((s: RootState): UserState => s.userState)\n  const cssVariableState = useSelector((s: RootState): CSSVariableState => s.cssVariableState)\n\n  const [renderDelay, setRenderDelay] = useState(cssVariableState.appPageSwitchAnimation)\n\n  const { list } = userState\n\n  const listManager = useListManager({\n    route: ROUTES.MAILING_TEMPLATE_LIST,\n    actions: userActions,\n    state: userState,\n  })\n\n  useEffect(getTicketList, [])\n\n  useEffect(delayRender, [])\n\n  return (\n    <div className={c('FeedbackList', 'scrollableContent', 'wrap', userState.loading.getList && 'loading')}>\n      <section className=\"titleWithButton first\">\n        <h1>Обратная связь</h1>\n      </section>\n      {!renderDelay && (\n        <>\n          <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n\n          <section className=\"appear last\">\n            <div style={{ overflowX: 'auto', width: '100%' }}>\n              <Link className=\"fs24\" to={ROUTES.FEEDBACK_DIALOG.PATH}>\n                dialog\n              </Link>\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  )\n\n  function delayRender() {\n    setRenderDelay(0)\n  }\n\n  function getTicketList() {\n    if (!list.length) {\n      listManager.dispatchAction()\n    }\n  }\n}\n\nconst x = memo(FeedbackList)\nexport default x\n","import './_tab.feedback.less'\n\nimport React, { FC, memo } from 'react'\n\nimport ROUTES from '@/constant/routes'\n\nimport Dialog from './dialog/_dialog'\nimport List from './list/_list'\n\nconst Users: FC = (): JSX.Element => {\n  const isDialog = ROUTES.FEEDBACK_DIALOG.isCurrent\n\n  return (\n    <div className=\"FeedbackTab wrap\">\n      <List />\n      <Dialog isCurrent={isDialog} />\n    </div>\n  )\n}\n\nconst x = memo(Users)\nexport default x\n","import './index.less'\n\nimport React, { FC, memo } from 'react'\n\nimport { useTable, UseTableOptions } from 'react-table'\n\nimport cx from 'clsx'\n\nimport { SklList } from '@/components/skelet/_skelet'\nimport Empty from '@/template/empty/_empty'\n\ntype TableProps = {\n  className?: string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  columns: UseTableOptions<Record<any, any> & { skl?: true }>['columns']\n  data: { skl?: true } & Record<string, unknown>[]\n  loading: unknown\n  name: string\n}\n\nconst Table: FC<TableProps> = ({ columns, className, data, loading, name }): JSX.Element => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({\n    data: SklList(data, !!loading, name),\n    columns,\n  })\n\n  if (!data.length && !loading) {\n    return <Empty />\n  }\n\n  return (\n    <table className={cx('Table', className)} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return (\n                  <td width={cell.column.width} {...cell.getCellProps()}>\n                    {cell.render('Cell')}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nconst x = memo(Table)\nexport default x\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M1.502 14.585a.65.65 0 00-.183.33L.376 19.49a.637.637 0 00.183.585.678.678 0 00.603.176l4.713-.915a.67.67 0 00.341-.177l10.55-10.24-4.714-4.575-10.55 10.24zM20.024 1.18c-1.3-1.261-3.414-1.261-4.713 0l-1.845 1.792 4.713 4.575 1.845-1.791a3.167 3.167 0 000-4.575z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useRef, useState } from 'react'\n\nimport { Column } from 'react-table'\n\nimport { useSelector } from 'react-redux'\n\nimport Skeleton from 'react-loading-skeleton'\n\nimport Skl from '@/components/skelet/_skelet'\nimport Button from '@/components/button'\nimport CheckboxButton from '@/components/checkboxButton'\nimport PencilIcon from '@/components/svg/pencilFilledIcon'\nimport VisibleIcon from '@/components/svg/visibleFilledIcon'\n\nimport ROUTES from '@/constant/routes'\n\nimport store from '@/index/redux/store'\n\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { ParamsConfigModel } from '@/type/model'\nimport { RootState } from '@/type/state'\n\nimport PopupViewConfig from '@/template/popup.viewParamConfig/_popup.viewParamsConfig'\n\nconst columns: Column<ParamsConfigModel & { skl?: true }>[] = [\n  {\n    Header: 'Название',\n    accessor: 'name',\n    width: '20%',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div className=\"bold\" title={value} style={{ width: '100%' }}>\n          <Skl row={row}>{value}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Тип',\n    accessor: 'catalogConfigType',\n    width: '20%',\n    Cell: ({ row, value }): JSX.Element => {\n      return (\n        <div style={{ width: '100%' }}>\n          <Skl row={row}>{value?.name ?? ''}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Email',\n    accessor: 'mails',\n    width: '20%',\n    Cell: ({ value, row }): JSX.Element => (\n      <div title={value?.join('; ')} className=\"overflow-ellipsis\" style={{ width: '23rem' }}>\n        <a href={`mailto:${value}`} className=\"underline\">\n          <Skl row={row}>{value?.join('; ')}</Skl>\n        </a>\n      </div>\n    ),\n  },\n  {\n    Header: 'Шаблон поиска',\n    accessor: 'isSearchTemplate',\n    width: '10%',\n    Cell: ({ value, row }): JSX.Element => {\n      const [changing, setChanging] = useState(false)\n\n      return (\n        <div>\n          <CheckboxButton\n            style={{ margin: 'auto' }}\n            skeleton={row.original.skl}\n            loading={changing}\n            checked={value}\n            onChange={toggleActive}\n          />\n        </div>\n      )\n\n      function toggleActive(e: React.ChangeEvent<HTMLInputElement>) {\n        setChanging(true)\n\n        const entity = buildEntity()\n\n        const onEnd = () => setChanging(false)\n\n        store.dispatch(paramsConfigActions.updateAlsoLocaly(entity, { onSuccess: onEnd, onFail: onEnd }))\n\n        function buildEntity() {\n          return {\n            ...row.original,\n            isSearchTemplate: e.target.checked,\n            catalogConfigTypeId: row.original.catalogConfigType.id,\n          }\n        }\n      }\n    },\n  },\n  {\n    Header: 'Получать уведомления',\n    accessor: 'isNotifyInProfile',\n    width: '10%',\n    Cell: ({ value, row }): JSX.Element => {\n      const [changing, setChanging] = useState(false)\n\n      const list = useSelector((s: RootState): ParamsConfigModel[] => s.paramsConfigState.list)\n\n      return (\n        <div className=\"wrap f-center\">\n          {row.original.skl ? (\n            <Skeleton style={{ width: '4rem', height: '4rem', margin: '0 auto' }} />\n          ) : (\n            <CheckboxButton\n              style={{ margin: '0 auto' }}\n              loading={changing}\n              checked={value}\n              type=\"checkbox\"\n              color={value ? 'primary' : 'default'}\n              className=\"selectClientCheckbox absolute\"\n              onChange={toggleActive}\n            />\n          )}\n        </div>\n      )\n\n      function toggleActive(e: React.ChangeEvent<HTMLInputElement>) {\n        setChanging(true)\n\n        const entity = {\n          ...row.original,\n          isNotifyInProfile: e.target.checked,\n          catalogConfigTypeId: row.original.catalogConfigType.id,\n        }\n\n        store.dispatch(\n          paramsConfigActions.update(entity, {\n            onSuccess() {\n              setChanging(false)\n              store.dispatch(\n                paramsConfigActions.set({ list: list.map((i) => (String(i.id) === String(entity.id) ? entity : i)) }),\n              )\n            },\n            onFail() {\n              setChanging(false)\n            },\n          }),\n        )\n      }\n    },\n  },\n  {\n    Header: 'Активность',\n    accessor: 'isActive',\n    width: '10%',\n    Cell: ({ value, row }): JSX.Element => {\n      const [changing, setChanging] = useState(false)\n      const list = useSelector((s: RootState): ParamsConfigModel[] => s.paramsConfigState.list)\n\n      return (\n        <div className=\"wrap f-center\">\n          {row.original.skl ? (\n            <Skeleton style={{ width: '4rem', height: '4rem', margin: '0 auto' }} />\n          ) : (\n            <CheckboxButton\n              style={{ margin: '0 auto' }}\n              loading={changing}\n              checked={value}\n              type=\"checkbox\"\n              color={value ? 'primary' : 'default'}\n              className=\"selectClientCheckbox absolute\"\n              onChange={toggleActive}\n            />\n          )}\n        </div>\n      )\n\n      function toggleActive(e: React.ChangeEvent<HTMLInputElement>) {\n        setChanging(true)\n\n        const entity = {\n          ...row.original,\n          isActive: e.target.checked,\n          catalogConfigTypeId: row.original.catalogConfigType.id,\n        }\n\n        store.dispatch(\n          paramsConfigActions.update(entity, {\n            onSuccess() {\n              setChanging(false)\n              store.dispatch(\n                paramsConfigActions.set({ list: list.map((i) => (String(i.id) === String(entity.id) ? entity : i)) }),\n              )\n            },\n            onFail() {\n              setChanging(false)\n            },\n          }),\n        )\n      }\n    },\n  },\n  {\n    accessor: 'id',\n    width: '10%',\n    Cell: ({ value: id, row }): JSX.Element => {\n      const openPopup = useRef<undefined | ((v: boolean) => void)>(undefined)\n\n      return (\n        <div className=\"actionCell wrap f-top-right\">\n          {row.original.skl ? (\n            <>\n              <Skeleton style={{ width: '4rem', height: '4rem' }} />\n              <Skeleton style={{ width: '4rem', height: '4rem' }} />\n            </>\n          ) : (\n            <>\n              <PopupViewConfig setStateRef={openPopup} />\n              <Button color=\"primary\" icon onClick={viewConfig} className=\"fs12\">\n                <VisibleIcon />\n              </Button>\n              <Button\n                color=\"primary\"\n                icon\n                href={ROUTES.PARAMS_CONFIG_EDIT.PATH.replace(':id', id.toString())}\n                onClick={() => store.dispatch(paramsConfigActions.set({ entity: row.original }))}\n                className=\"fs12\"\n              >\n                <PencilIcon />\n              </Button>\n            </>\n          )}\n        </div>\n      )\n\n      function viewConfig() {\n        store.dispatch(paramsConfigActions.set({ entity: row.original }))\n        openPopup.current?.(true)\n      }\n    },\n  },\n]\n\nexport default columns\n","import React, { FC } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Button from '@/components/button'\nimport Select from '@/components/select'\nimport Input from '@/components/input'\n\nimport { Option } from 'react-dropdown-now'\n\nimport { RootState } from '@/type/state'\nimport { ConfigTypeCatalogModel } from '@/type/model'\n\nimport { PageableRow } from '@/type/type'\nimport CheckboxButton from '@/components/checkboxButton'\n\ntype Filter = PageableRow & {\n  isActive?: boolean | string\n}\n\ntype MailingTemplateFilterProps = {\n  onSubmit: (v: Record<string, string>) => void\n  initialValues: Filter\n}\n\nconst MailingTemplateFilter: FC<MailingTemplateFilterProps> = ({ onSubmit, initialValues }): JSX.Element => {\n  const list = useSelector((s: RootState): ConfigTypeCatalogModel[] => s.configTypeCatalogState.list)\n\n  initialValues.isActive =\n    typeof initialValues.isActive === 'boolean' ? initialValues.isActive : initialValues.isActive === 'true'\n\n  return (\n    <Form\n      key={JSON.stringify(initialValues)}\n      initialValues={initialValues}\n      onSubmit={(values) => {\n        values.isActive = values.isActive ? 'true' : 'false'\n        onSubmit(values)\n      }}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} className=\"fc-center-center fs18\">\n          <div className=\"MailingTemplateFilter filter f-center-center\">\n            <Field name=\"name\">\n              {({ input }) => (\n                <div className=\"formField f-center-center\">\n                  <Input\n                    style={{ width: '33rem' }}\n                    className=\"margin-right\"\n                    type=\"text\"\n                    placeholder=\"Название шаблона\"\n                    {...input}\n                  />\n                </div>\n              )}\n            </Field>\n            <Field name=\"catalogTypeName\">\n              {({ input, meta }) => (\n                <div className=\"formField f-center-center margin-right mailingTypeDropdown\">\n                  <Select\n                    placeholder=\"Тип шаблона\"\n                    style={{ width: '33rem' }}\n                    {...input}\n                    options={list?.map(\n                      (SoloList): Option => ({ value: SoloList?.name ?? '', label: SoloList?.name ?? '' }),\n                    )}\n                  />\n                  {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"isActive\" type=\"checkbox\">\n              {({ input }) => (\n                <div className=\"formField f-center-center margin-right\">\n                  <CheckboxButton className=\"margin-right-s\" type=\"checkbox\" placeholder=\"Активные\" {...input} />\n                </div>\n              )}\n            </Field>\n            <Button type=\"submit\" color=\"primary\">\n              Искать\n            </Button>\n          </div>\n        </form>\n      )}\n    />\n  )\n}\n\nexport default MailingTemplateFilter\n","import React, { FC, useEffect, memo } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport cx from 'clsx'\n\nimport ROUTES from '@/constant/routes'\n\nimport Table from '@/components/table'\n\nimport useDelayRender from '@/hook/delayRender'\n\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { useListManager } from '@/util/listManager'\n\nimport { RootState } from '@/type/state'\n\nimport columns from './columns'\n\nimport Filter from './filter'\n\nconst ParamsConfigList: FC = (): JSX.Element | null => {\n  const { paramsConfigState } = useSelector((s: RootState): RootState => s)\n  const { list } = paramsConfigState\n\n  const renderDelay = useDelayRender()\n\n  const listManager = useListManager({\n    route: ROUTES.PARAMS_CONFIG_LIST,\n    actions: paramsConfigActions,\n    state: paramsConfigState,\n  })\n\n  useEffect(() => getTemplateList(), [])\n\n  return (\n    <div\n      className={cx(\n        'ParamsConfigList animSwitchFromLeft scrollableContent scrollToTopOnRequest',\n        listManager.isLoading && 'loading',\n      )}\n    >\n      <section className=\"titleWithButton first\">\n        <h1>События</h1>\n      </section>\n      <section className=\"first margin-bottom-l f-left-center\">\n        <Filter onSubmit={listManager.onFilterChange} initialValues={listManager.state.filter} />\n      </section>\n      {!renderDelay && (\n        <>\n          <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n          <section className=\"last appear\">\n            <Table columns={columns} data={list} loading={paramsConfigState.loading.getList} name=\"template\" />\n          </section>\n        </>\n      )}\n    </div>\n  )\n\n  function getTemplateList() {\n    if (!list.length) {\n      listManager.dispatchAction()\n    }\n  }\n}\n\nconst x = memo(ParamsConfigList)\nexport default x\n","import React from 'react'\n\nimport cx from 'clsx'\n\nimport { Field, FieldInputProps, FieldProps, FieldRenderProps } from 'react-final-form'\n\nfunction FieldApp<FieldValue, RP extends FieldRenderProps<FieldValue, T>, T extends HTMLElement = HTMLElement>({\n  className,\n  children,\n  ...props\n}: FieldProps<FieldValue, RP, T>): JSX.Element | null {\n  checkOneChildern()\n\n  const child = React.Children.only(children)\n  if (!React.isValidElement<HTMLInputElement>(child)) return null\n\n  return (\n    <Field<FieldValue, RP, T> {...props}>\n      {({ input, meta }) => (\n        <div className={cx('formField', className)}>\n          {React.cloneElement(child, buildNewProps(input))}\n          {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n        </div>\n      )}\n    </Field>\n  )\n\n  function checkOneChildern() {\n    if (React.Children.count(children) > 1) {\n      throw Error('У Field должен быть только один ребенок')\n    }\n  }\n\n  // я пытался без any... честно\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function buildNewProps(inputProps: FieldInputProps<FieldValue, T>): any {\n    return {\n      ...inputProps,\n      onChange(v: FieldValue) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        ;(child as any).props?.onChange?.(v)\n        inputProps?.onChange?.(v)\n      },\n    }\n  }\n}\n\nexport default FieldApp\n","import './index.less'\n\nimport { FieldArrayRenderProps } from 'react-final-form-arrays'\nimport React, { FC, useRef, useState } from 'react'\nimport cx from 'clsx'\n\nimport Checkbox from '@/components/checkboxButton'\nimport Input from '@/components/input'\nimport Button from '@/components/button'\nimport PlusIcon from '@/components/svg/plusOutlinedIcon'\nimport { DeepReadonly } from '@/type/util'\n\ntype RefillableListProps = {\n  className?: string\n  placeholder?: string\n  list: DeepReadonly<string[]>\n  fieldArrayProps: FieldArrayRenderProps<string, HTMLInputElement>\n}\n\nconst RefillableList: FC<RefillableListProps> = ({ className, list, fieldArrayProps, placeholder }): JSX.Element => {\n  const { fields, meta } = fieldArrayProps\n\n  const ref = useRef<null | HTMLInputElement>(null)\n\n  const [initial, setInitial] = useState(true)\n\n  return (\n    <div className={cx('RefillableList', className)}>\n      <div className=\"listWrapper\">\n        {list.map((item, index) => {\n          if (!initial && list.length - 1 === index) return null\n          return <Checkbox key={item} placeholder={item} onClick={() => fields?.remove(index)} />\n        })}\n      </div>\n      <div className=\"inputWrapper formItemGroup\">\n        <Input placeholder={placeholder} onKeyPress={onKeyPress} ref={ref} onChange={onInputChange} />\n        <Button icon onClick={submit}>\n          <PlusIcon />\n        </Button>\n      </div>\n      <div className=\"errorWrapper error\">{meta.error}</div>\n    </div>\n  )\n\n  function onInputChange() {\n    const value = ref.current?.value || ''\n    const index = list.length\n\n    if (initial && value && !list[index + 1]) {\n      fields.push(value)\n      setInitial(false)\n    } else if (!initial && value) {\n      fields.update(index - 1, value)\n    } else if (list[index] && !value) {\n      fields.remove(index)\n      setInitial(true)\n    }\n  }\n\n  function onKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key !== 'Enter') return\n    e.preventDefault()\n    submit()\n  }\n\n  function submit() {\n    if (meta.error) return\n    // const value = ref.current?.value || ''\n    if (ref.current?.value) ref.current.value = ''\n    // fields.push?.(value)\n    setInitial(true)\n  }\n}\n\nexport default RefillableList\n","import './_one.less'\n\nimport React, { FC, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Form } from 'react-final-form'\nimport { FieldArray } from 'react-final-form-arrays'\nimport arrayMutators from 'final-form-arrays'\n\nimport Input from '@/components/input'\nimport Checkbox from '@/components/checkboxButton'\nimport Button from '@/components/button'\nimport Select from '@/components/select'\nimport FieldApp from '@/components/field'\nimport RefillableList from '@/components/refillableList'\n\nimport ROUTES from '@/constant/routes'\n\nimport { required, validateEmail } from '@/helper/validate'\n\nimport * as paramConfigActions from '@/store/action/paramsConfig'\nimport * as configTypeCatalogActions from '@/store/action/configTypeCatalog'\n\nimport { ParamsConfigModel } from '@/type/model'\nimport { ConfigTypeCatalogState, ParamsConfigState, RootState } from '@/type/state'\n\nconst ParamsConfig: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n\n  const { id } = useParams<{ id: string }>()\n\n  const isCreate = ROUTES.PARAMS_CONFIG_CREATE.isCurrent || ROUTES.PARAMS_CONFIG_CREATE.isPrevious\n\n  const history = useHistory()\n\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n  const configTypeCatalogState = useSelector((s: RootState): ConfigTypeCatalogState => s.configTypeCatalogState)\n\n  const catalogTypeIdOptions = useMemo(buildCatalogConfigTypeIdOptions, [configTypeCatalogState])\n  const initialValues = useMemo(buildInitialValues, [paramsConfigState.entity])\n\n  useEffect(() => getMailingTemplate(), [])\n  useEffect(() => getConfigTypeCatalog(), [])\n\n  return (\n    <div className=\"ParamsConfig scrollableContent wrap\">\n      <section className=\"first\">\n        <h1>\n          {isCreate ? 'Создать' : 'Редактировать'}\n          &nbsp; событие\n        </h1>\n      </section>\n      <section className=\"last\">\n        <Form<ParamsConfigModel>\n          onSubmit={onSubmit}\n          initialValues={initialValues}\n          mutators={{ ...arrayMutators }}\n          render={({ handleSubmit, form }) => (\n            <form onSubmit={handleSubmit} className=\"fc fs18\">\n              <div className=\"margin-bottom\">\n                <FieldApp name=\"name\" validate={required}>\n                  <Input placeholder=\"Название\" wide />\n                </FieldApp>\n              </div>\n              <div className=\"margin-bottom\">\n                <FieldApp name=\"catalogConfigTypeId\" validate={required}>\n                  <Select placeholder=\"Тип события\" options={catalogTypeIdOptions} wide />\n                </FieldApp>\n              </div>\n              <div className=\"fc\" style={{ width: '50%' }}>\n                <FieldApp name=\"isNotifyInProfile\" type=\"checkbox\" className=\"margin-bottom\">\n                  <Checkbox placeholder=\"Уведомлять в профиле\" />\n                </FieldApp>\n\n                <FieldApp name=\"isSearchTemplate\" type=\"checkbox\" className=\"margin-bottom\">\n                  <Checkbox placeholder=\"Использовать как шаблон для поиска\" />\n                </FieldApp>\n              </div>\n              <div className=\"fc margin-bottom-s\" style={{ width: '50%' }}>\n                <FieldApp name=\"isNotifyByEmail\" type=\"checkbox\">\n                  <Checkbox placeholder=\"Уведомлять по email\" />\n                </FieldApp>\n              </div>\n\n              {form.getState().values.isNotifyByEmail && (\n                <div className=\"fc emailSection margin-bottom-s\">\n                  <FieldArray name=\"mails\" validate={validateEmail}>\n                    {(props) => {\n                      return (\n                        <RefillableList\n                          list={form.getState().values.mails || []}\n                          placeholder=\"email\"\n                          fieldArrayProps={props}\n                        />\n                      )\n                    }}\n                  </FieldArray>\n                </div>\n              )}\n\n              <div className=\"f wrap margin-top-s\">\n                <Button type=\"submit\" color=\"primary\">\n                  Сохранить\n                </Button>\n              </div>\n            </form>\n          )}\n        />\n      </section>\n    </div>\n  )\n\n  function getMailingTemplate() {\n    if (!paramsConfigState.entity && id && !isCreate) {\n      dsp(paramConfigActions.get(id))\n    }\n  }\n\n  function getConfigTypeCatalog() {\n    dsp(configTypeCatalogActions.getList())\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function onSubmit(values: any) {\n    dsp(\n      paramConfigActions[isCreate ? 'create' : 'update'](values, {\n        onSuccess() {\n          history.push(ROUTES.PARAMS_CONFIG_LIST.PATH)\n          dsp(paramConfigActions.getList(paramsConfigState.filter))\n        },\n      }),\n    )\n  }\n\n  function buildInitialValues() {\n    const { entity } = paramsConfigState\n\n    return {\n      ...entity,\n      catalogConfigTypeId: entity?.catalogConfigType.id.toString(),\n    }\n  }\n\n  function buildCatalogConfigTypeIdOptions() {\n    return configTypeCatalogState.list.map((i) => ({ label: i.name, value: i.id.toString() }))\n  }\n}\n\nexport default ParamsConfig\n","import React, { FC, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useParams } from 'react-router-dom'\n\nimport cx from 'clsx'\n\nimport * as paramConfigActions from '@/store/action/paramsConfig'\n\nimport { ParamsConfigState, RootState } from '@/type/state'\n\nimport { apply } from '@/util/paramsConfig'\n\ntype ApplyParamsConfigProps = {\n  className?: string\n}\n\nconst ApplyParamsConfig: FC<ApplyParamsConfigProps> = ({ className }): JSX.Element => {\n  const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n\n  const { id } = useParams<{ id: string }>()\n\n  const dsp = useDispatch()\n\n  const msg = paramsConfigState.loading.getList ? 'Загрузка' : 'Перенаправляю'\n\n  useEffect(getParamConfig, [])\n\n  return <div className={cx('ApplyParamsConfig fs20', className)}>{paramsConfigState.error || msg}</div>\n\n  function getParamConfig() {\n    dsp(\n      paramConfigActions.get(id, {\n        onSuccess({ body }) {\n          apply(body)\n        },\n      }),\n    )\n  }\n}\n\nexport default ApplyParamsConfig\n","/* eslint-disable  import/no-named-as-default-member */\nimport './_tab.paramsConfig.less'\n\nimport React, { FC, memo } from 'react'\n\nimport { useDispatch } from 'react-redux'\n\nimport * as configTypeCatalog from '@/store/action/configTypeCatalog'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport { Switch, Route, useLocation } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\nimport List from './list/_list'\nimport One from './one/_one'\nimport Apply from './apply'\n\nconst Users: FC = (): JSX.Element => {\n  const location = useLocation()\n  const dispatch = useDispatch()\n  React.useEffect(() => getConfigTypeCatalog(), [])\n\n  function getConfigTypeCatalog() {\n    dispatch(configTypeCatalog.getList())\n  }\n\n  if (ROUTES.PARAMS_CONFIG_APPLY.isCurrent) {\n    return (\n      <Switch location={location}>\n        <Route path={ROUTES.PARAMS_CONFIG_APPLY.PATH} component={Apply} />\n      </Switch>\n    )\n  }\n\n  return (\n    <div className=\"Users\">\n      <List />\n      <SwitchTransition mode=\"in-out\">\n        <CSSTransition key={location.pathname} timeout={200} classNames=\"appear\" unmountOnExit>\n          <Switch location={location}>\n            <Route path={ROUTES.PARAMS_CONFIG_EDIT.PATH} component={One} />\n            <Route path={ROUTES.PARAMS_CONFIG_CREATE.PATH} component={One} />\n          </Switch>\n        </CSSTransition>\n      </SwitchTransition>\n    </div>\n  )\n}\n\nconst x = memo(Users)\nexport default x\n","import { Role, Permission, Mailing } from '@/type/model.d'\n\nexport const ROLES: Record<Role, string> = {\n  PORTAL_ADMIN: 'Администратор портала',\n  DEALER_ADMIN: 'Администратор дилера',\n  OPERATOR: 'оператор дилера',\n  CLIENT: 'Клиент',\n  CLIENT_DRIVER: 'Водитель',\n  NOT_SET: 'Не установлен',\n  ROLE_DEALER_OPERATOR: 'Оператор дилера',\n}\n\nexport const PERMISSIONS: Record<Permission, string> = {\n  PERMISSION_DEALER_DATA: 'Информация о диллере',\n  PERMISSION_DEALER_CLIENTS: 'Поиск по клиентам',\n  PERMISSION_DEALER_CARS: 'Поиск по автомобилям',\n  PERMISSION_MANAGEMENT: 'Управление доступом',\n  PERMISSION_MAILINGS: 'Рассылка',\n  PERMISSION_SERVICE_STATION_SCHEDULE: 'Сервис',\n  PERMISSION_CLIENT_FEEDBACK: 'Обратная связь',\n  PERMISSION_PARAMS_CONFIG: 'События',\n}\n\nexport const MAILING_TYPE: Record<Mailing, string> = {\n  AUTOMATIC: 'Автоматическое',\n  MANUAL: 'Вручную',\n}\n\nexport const MIN_ISSUE_YEAR = 2017\n\nexport const ISSUE_YEAR = Array(new Date().getFullYear() - MIN_ISSUE_YEAR + 1)\n  .fill(1)\n  .map((y, i) => {\n    return (MIN_ISSUE_YEAR + i).toString()\n  })\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React, { useState } from 'react'\nimport { UseTableOptions } from 'react-table'\nimport Skeleton from 'react-loading-skeleton'\nimport { DateTime } from 'luxon'\n\nimport Checkbox from '@/components/checkboxButton'\nimport Skl from '@/components/skelet/_skelet'\nimport Button from '@/components/button'\nimport PencilIcon from '@/components/svg/pencilFilledIcon'\n\nimport { MAILING_TYPE } from '@/constant/keyValue'\nimport ROUTES from '@/constant/routes'\n\nimport store from '@/index/redux/store'\n\nimport { set, update } from '@/store/action/mailingTemplate'\n\nimport { MailingTemplateModel } from '@/type/model.d'\n\nconst columns: UseTableOptions<MailingTemplateModel & { skl?: true }>['columns'] = [\n  {\n    Header: <div className=\"f-left\">Шаблон</div>,\n    accessor: 'name',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div title={value} style={{ width: '25rem' }}>\n          <span className=\"bold\">\n            <Skl row={row}>{value}</Skl>\n          </span>\n        </div>\n      )\n    },\n  },\n  {\n    Header: <div className=\"f-left\">Время</div>,\n    accessor: 'startDate',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div style={{ width: '25rem' }}>\n          <Skl row={row}>\n            {DateTime.fromISO(value).toFormat('MM-dd-yyyy')}\n            <br />\n            {DateTime.fromISO(row.original.endDate).toFormat('MM-dd-yyyy')}\n          </Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: <div className=\"f-left\">Событие</div>,\n    accessor: 'mailingType',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div style={{ width: '20rem' }}>\n          <Skl row={row}>{MAILING_TYPE[value]}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Текст',\n    accessor: 'text',\n    width: '100%',\n    Cell: ({ value, row }): JSX.Element => {\n      const text = value && value?.length > 60 ? `${value.slice(0, 60)}...` : value\n\n      return (\n        <div className=\"templateText\" style={{ width: '100%' }}>\n          <Skl row={row}>{text}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Активность',\n    accessor: 'isActive',\n    width: '1%',\n    Cell: ({ value, row }): JSX.Element => {\n      const [changing, setChanging] = useState(false)\n\n      return (\n        <div className=\"wrap f-center\">\n          {row.original.skl ? (\n            <Skeleton style={{ width: '4rem', height: '4rem', margin: '0 auto' }} />\n          ) : (\n            <Checkbox\n              style={{ margin: '0 auto' }}\n              loading={changing}\n              checked={value}\n              type=\"checkbox\"\n              color={value ? 'primary' : 'default'}\n              className=\"selectClientCheckbox absolute\"\n              onChange={toggleActive}\n            />\n          )}\n        </div>\n      )\n\n      function toggleActive(e: React.ChangeEvent<HTMLInputElement>) {\n        setChanging(true)\n\n        store.dispatch(update(buildEntity(), buildOnEnd()))\n\n        function buildEntity() {\n          return { ...row.original, isActive: e.target.checked }\n        }\n\n        function buildOnEnd() {\n          return { onSuccess: () => setChanging(false), onFail: () => setChanging(false) }\n        }\n      }\n    },\n  },\n  {\n    accessor: 'id',\n    width: '1%',\n    Cell: ({ value: id, row }): JSX.Element => {\n      return (\n        <div className=\"actionCell wrap f-top-right\">\n          <Button\n            color=\"primary\"\n            href={ROUTES.MAILING_TEMPLATE.PATH.replace(':id', id?.toString() || '')}\n            onClick={() => store.dispatch(set({ entity: row.original }))}\n            className=\"fs12\"\n            icon\n          >\n            <PencilIcon />\n          </Button>\n        </div>\n      )\n    },\n  },\n]\n\nexport default columns\n","import React, { FC } from 'react'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Button from '@/components/button'\nimport Input from '@/components/newInput'\n\nimport { PageableRow } from '@/type/type'\n\ntype MailingTemplateFilterProps = {\n  onSubmit: (v: Record<string, string>) => void\n  initialValues: PageableRow\n}\n\nconst MailingTemplateFilter: FC<MailingTemplateFilterProps> = ({ onSubmit, initialValues }): JSX.Element => {\n  return (\n    <div>\n      <Form\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        render={({ handleSubmit }) => (\n          <form onSubmit={handleSubmit} className=\"fc-center-center fs18\">\n            <div className=\"MailingTemplateFilter filter f-center-center\">\n              <Field name=\"name\">\n                {({ input }) => (\n                  <div className=\"formField f-center-center\">\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Название шаблона\"\n                      styles={{ focusArea: { width: '37rem' } }}\n                      clearable\n                      {...input}\n                    />\n                  </div>\n                )}\n              </Field>\n\n              <Button type=\"submit\">Искать</Button>\n            </div>\n          </form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default MailingTemplateFilter\n","import './_list.template.less'\n\nimport React, { FC, useEffect, memo } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport cx from 'clsx'\n\nimport Button from '@/components/button'\nimport Table from '@/components/table'\n\nimport ROUTES from '@/constant/routes'\n\nimport useDelayRender from '@/hook/delayRender'\n\nimport * as mailingTemplateActions from '@/store/action/mailingTemplate'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { useListManager } from '@/util/listManager'\n\nimport { RootState } from '@/type/state'\n\nimport columns from './columns'\n\nimport Filter from './filter'\n\nconst MailingTemplate: FC = (): JSX.Element | null => {\n  const renderDelay = useDelayRender()\n\n  const { mailingTemplateState } = useSelector((s: RootState): RootState => s)\n  const { list } = mailingTemplateState\n\n  const listManager = useListManager({\n    route: ROUTES.MAILING_TEMPLATE_LIST,\n    actions: mailingTemplateActions,\n    state: mailingTemplateState,\n  })\n\n  useEffect(() => getTemplateList(), [])\n\n  return (\n    <div className={cx('MailingTemplateList animSwitchFromRight appear', listManager.isLoading && 'loading')}>\n      <section className=\"first margin-bottom-l f-spaceBetween-center\">\n        <Filter onSubmit={listManager.onFilterChange} initialValues={listManager.state.filter} />\n        <Button href={ROUTES.MAILING_TEMPLATE_CREATE.PATH} className=\"fs18\">\n          Добавить\n        </Button>\n      </section>\n      {!renderDelay && (\n        <>\n          <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n          <section className=\"last appear\">\n            <Table columns={columns} data={list} loading={mailingTemplateState.loading.getList} name=\"template\" />\n          </section>\n        </>\n      )}\n    </div>\n  )\n\n  function getTemplateList() {\n    if (!list.length) {\n      listManager.dispatchAction()\n    }\n  }\n}\n\nconst x = memo(MailingTemplate)\nexport default x\n","// import MailingHistoryMock from '@/mock/mailingHistory'\nimport qs from 'qs'\n\nimport { REDUX_API_MIDDLEWARE as type, APIAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { Content, MailingTemplateModel } from '@/type/model'\nimport { MailingTemplateState } from '@/type/state'\nimport { PageableRow, Action } from '@/type/type'\nimport { OnStage } from '@/type/transfer'\n\nimport * as CONSTANTS from '../constant/mailingHistory'\n\nexport const set = (payload: Partial<MailingTemplateState>): Action => ({\n  type: CONSTANTS.SET,\n  payload,\n})\n\nexport const getList = (\n  query: PageableRow,\n  onStage?: OnStage<Content<MailingTemplateModel[]>>,\n): APIAction<Content<MailingTemplateModel[]>> => {\n  return {\n    type,\n    stageActionTypes: CONSTANTS.GET_LIST,\n    url: `/api/mailing-history${qs.stringify(query, { addQueryPrefix: true })}`,\n    method: 'get',\n    ...onStage,\n  }\n}\n","import React, { FC, useState } from 'react'\n\nimport Portal from '@/components/popup/_popup'\n\nexport type OnChange = (v: boolean) => void\n\nexport type FormRemove = {\n  doNotAskOnRemove: boolean\n}\n\nexport type PopupRemoveProps = {\n  stateRef?: React.MutableRefObject<undefined | boolean>\n  setStateRef?: React.MutableRefObject<undefined | OnChange>\n}\n\nconst PopupRemove: FC<PopupRemoveProps> = ({ stateRef, setStateRef }): JSX.Element => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  stateRef = stateRef || { current: undefined }\n  setStateRef = setStateRef || { current: undefined }\n\n  stateRef.current = isOpen\n  setStateRef.current = setIsOpen\n\n  return (\n    <Portal title=\"Название рассылки\" onClose={() => setIsOpen(false)} isOpen={isOpen}>\n      <div>mailing list</div>\n    </Portal>\n  )\n}\n\nexport default PopupRemove\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport React, { useRef } from 'react'\n\nimport { UseTableOptions } from 'react-table'\n\nimport { Link } from 'react-router-dom'\n\nimport { DateTime } from 'luxon'\n\nimport Skl from '@/components/skelet/_skelet'\nimport { MAILING_TYPE } from '@/constant/keyValue'\n\n// import store from '@/index/redux/store'\n\n// import * as mailingTemplateActions from '@/store/action/mailingTemplate'\n\nimport { MailingTemplateModel } from '@/type/model.d'\n\nimport PopupMailingList, { OnChange } from './popup.mailingList'\n\nconst columns: UseTableOptions<MailingTemplateModel & { skl?: true }>['columns'] = [\n  {\n    Header: 'Шаблон',\n    accessor: 'name',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div title={value} style={{ width: '25rem' }}>\n          <span className=\"bold\">\n            <Skl row={row}>{value}</Skl>\n          </span>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Время',\n    accessor: 'startDate',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div style={{ width: '25rem' }}>\n          <Skl row={row}>{value ? DateTime.fromISO(value).toFormat('MM-dd-yyyy HH:mm') : '—'}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Событие',\n    accessor: 'mailingType',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div style={{ width: '20rem' }}>\n          <Skl row={row}>{MAILING_TYPE[value]}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Текст',\n    accessor: 'text',\n    width: '100%',\n    Cell: ({ value, row }): JSX.Element => {\n      const text = value && value?.length > 60 ? `${value.slice(0, 60)}...` : value\n\n      return (\n        <div className=\"templateText\" style={{ width: '100%' }}>\n          <Skl row={row}>{text}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    accessor: 'id',\n    Cell: (): JSX.Element => {\n      const setModalOpenRef = useRef<undefined | OnChange>(undefined)\n\n      return (\n        <div className=\"actionCell wrap f-top-right\" style={{ width: '19rem' }}>\n          <div>\n            <PopupMailingList setStateRef={setModalOpenRef} />\n          </div>\n          <Link to=\"#\" className=\"underline\" onClick={() => setModalOpenRef.current?.(true)}>\n            Название списка рассылки\n          </Link>\n        </div>\n      )\n    },\n  },\n]\n\nexport default columns\n","import formatString from 'format-string-by-pattern'\n\nexport function numbers(s: string): string {\n  return s.replace(/[^\\d]/g, '')\n}\n\nexport function day(s: string): string {\n  const s1 = s.replace(/[^\\d]\\./g, '')\n  const s2 = s1.replace(/^([4-9])\\./g, '')\n  return s2\n}\n\nexport function addBefore(s: string, add: string): string {\n  if (new RegExp(`^${add.replace('+', '\\\\+')}`, 'i').test(s)) return s\n  return `${add}${s}`\n}\n\nexport function phone(s: string): string {\n  return formatString('+7(999)999-99-99', numbers(addBefore(s, '+7')))\n}\n\nexport function date(s: string): string {\n  return formatString('99.99.9999', day(s))\n}\n","import React, { FC } from 'react'\n\nimport { Form, Field } from 'react-final-form'\n\nimport cx from 'clsx'\n\nimport Button from '@/components/button'\nimport Datepicker from '@/components/datepicker/_datepicker'\n\nimport { PageableRow } from '@/type/type'\n\nimport * as parse from '@/helper/parse'\n\ntype MailingTemplateFilterProps = {\n  onSubmit: (v: Record<string, string>) => void\n  initialValues: PageableRow\n}\n\nconst MailingTemplateFilter: FC<MailingTemplateFilterProps> = ({ onSubmit, initialValues }): JSX.Element => {\n  return (\n    <Form\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit} className=\"fc-center-center fs18\">\n          <div className=\"MailingTemplateFilter filter f-center-center\">\n            <div className=\"f-center-center margin-right-s nowrap\">Период с </div>\n            <Field name=\"startDateRaw\" parse={parse.date}>\n              {({ input, meta }) => (\n                <div\n                  className={cx(\n                    'formField f-center-center margin-right-s',\n                    !meta.pristine || meta.active ? 'white' : 'gray',\n                  )}\n                >\n                  <Datepicker {...input} />\n                  {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Field name=\"endDateRaw\" parse={parse.date}>\n              {({ input, meta }) => (\n                <div\n                  className={cx(\n                    ' formField f-center-center  margin-right',\n                    !meta.pristine || meta.active ? 'white' : 'gray',\n                  )}\n                >\n                  <Datepicker {...input} />\n                  {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                </div>\n              )}\n            </Field>\n            <Button type=\"submit\">Искать</Button>\n          </div>\n        </form>\n      )}\n    />\n  )\n}\n\nexport default MailingTemplateFilter\n","import './_list.history.less'\n\nimport React, { FC, memo } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport cx from 'clsx'\n\nimport ROUTES from '@/constant/routes'\n\n// import useDelayRender from '@/hook/useDelayRender'\nimport Table from '@/components/table'\n\nimport * as MailingHistoryActions from '@/store/action/mailingHistory'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { useListManager } from '@/util/listManager'\n\nimport { RootState } from '@/type/state'\n\nimport columns from './columns'\n\nimport Filter from './filter'\n\nconst MailingHistory: FC = (): JSX.Element | null => {\n  const { mailingHistoryState } = useSelector((s: RootState): RootState => s)\n  const { list } = mailingHistoryState\n\n  const listManager = useListManager({\n    route: ROUTES.MAILING_TEMPLATE_LIST,\n    actions: MailingHistoryActions,\n    state: mailingHistoryState,\n  })\n\n  // useEffect(() => getTemplateList(), [])\n\n  return (\n    <div className={cx('MailingHistory animSwitchFromLeft appear', listManager.isLoading && 'loading')}>\n      <section className=\"first margin-bottom-l f-spaceBetween-center\">\n        <Filter onSubmit={listManager.onFilterChange} initialValues={listManager.state.filter} />\n      </section>\n      <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n      <section className=\"last appear\">\n        <div>\n          <Table columns={columns} data={list} loading={mailingHistoryState.loading.getList} name=\"template\" />\n        </div>\n      </section>\n    </div>\n  )\n\n  // function getTemplateList() {\n  //   if (!list.length) {\n  //     listManager.dispatchAction()\n  //   }\n  // }\n}\n\nconst x = memo(MailingHistory)\nexport default x\n","import { MailingTemplateState, ParamsConfigState, RootState } from '@/type/state'\n\nexport const mailingTemplateState = (s: RootState): MailingTemplateState => s.mailingTemplateState\nexport const paramsConfigState = (s: RootState): ParamsConfigState => s.paramsConfigState\n","import './_one.less'\n\nimport React, { FC, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { sortBy } from 'lodash'\nimport { Form } from 'react-final-form'\nimport { FormApi } from 'final-form'\nimport Skeleton from 'react-loading-skeleton'\nimport { DateTime } from 'luxon'\n\nimport Button from '@/components/button'\nimport CheckboxButton from '@/components/checkboxButton'\nimport DatePicker from '@/components/datepicker/_datepicker'\nimport Field from '@/components/field'\nimport Input from '@/components/input'\nimport Select, { objToOptions } from '@/components/select'\nimport Textarea from '@/components/textarea'\n\nimport { MAILING_TYPE } from '@/constant/keyValue'\nimport ROUTES from '@/constant/routes'\n\nimport { required } from '@/helper/validate'\n\nimport * as mailingTemplateActions from '@/store/action/mailingTemplate'\nimport * as paramConfigActions from '@/store/action/paramsConfig'\nimport * as selector from '@/store/selector'\n\nimport { MailingTemplateModel, ParamsConfigModel } from '@/type/model'\n\nconst MailingTemplate: FC = (): JSX.Element => {\n  const dsp = useDispatch()\n  const history = useHistory()\n  const { id } = useParams<{ id: string }>()\n\n  const isCreate = ROUTES.MAILING_TEMPLATE_CREATE.isCurrent || ROUTES.MAILING_TEMPLATE_CREATE.isPrevious\n\n  const mailingTemplateState = useSelector(selector.mailingTemplateState)\n  const paramsConfigState = useSelector(selector.paramsConfigState)\n\n  const initialValues = useMemo<MailingTemplateModel>(buildInitialValues, [mailingTemplateState.entity])\n  const paramComfigList = useMemo(buildParamConfigList, [paramsConfigState.fullActiveList])\n\n  useEffect(getMailingTemplate, [])\n  useEffect(getFullActiveParamsConfigList, [])\n\n  let fform: FormApi<MailingTemplateModel>\n\n  return (\n    <div className=\"MailingTemplate scrollableContent wrap\">\n      <section className=\"first\">\n        <h1>{isCreate ? 'Создать шаблон рассылки' : 'Редактировать шаблон рассылки'}</h1>\n      </section>\n      <section>\n        <Form<MailingTemplateModel>\n          key={JSON.stringify(initialValues)}\n          onSubmit={onSubmit}\n          validate={formValidate}\n          initialValues={initialValues}\n          render={({ handleSubmit, form }) => {\n            fform = form\n\n            return (\n              <form onSubmit={handleSubmit} className=\"fc-center-center\">\n                <div className=\"fieldRow fs18\">\n                  <Field name=\"name\" validate={required}>\n                    <Input placeholder=\"Название шаблона\" />\n                  </Field>\n                </div>\n\n                <div className=\"fieldRow fs18\">\n                  <Field name=\"startDate\">\n                    <DatePicker\n                      maxDate={form.getFieldState('endDate')?.value as string}\n                      onChange={(dt) => dt && form.change('endDate', dt.plus({ day: 7 }).toString())}\n                    />\n                  </Field>\n                  <Field name=\"endDate\">\n                    <DatePicker minDate={form.getFieldState('startDate')?.value} />\n                  </Field>\n                </div>\n\n                <div className=\"fieldRow fs18\">\n                  <div className=\"formField f-center-center\">\n                    <Field name=\"mailingType\">\n                      <Select allowClear={false} options={objToOptions(MAILING_TYPE)} />\n                    </Field>\n                  </div>\n                </div>\n\n                <div key={JSON.stringify(initialValues)} className=\"paramConfigList margin-bottom-s f-wrap wide fs18\">\n                  <CheckboxButton\n                    className=\"checkboxSelectAll margin-right margin-bottom-s\"\n                    placeholder=\"Выбрать все события\"\n                    onChange={selectAllParamsConfigs}\n                    disabled={!isParamsConfigLoading() && !paramComfigList.length}\n                    checked={isCheckboxAllParamsConfigsChecked()}\n                  />\n                  {isParamsConfigLoading() ? (\n                    <Skeleton className=\"react-loading-skeleton-checkbox margin-right-s\" count={3} />\n                  ) : (\n                    paramComfigList.map((ParamConfig) => {\n                      return (\n                        <CheckboxButton\n                          className=\"margin-right-s margin-bottom-s\"\n                          key={ParamConfig.id}\n                          placeholder={ParamConfig.name}\n                          onChange={onParamConfigCheckboxChange(ParamConfig)}\n                          checked={isParamsConfigChecked(ParamConfig)}\n                        />\n                      )\n                    })\n                  )}\n                </div>\n\n                <div className=\"fieldRow fs18\">\n                  <Field name=\"text\" validate={required}>\n                    <Textarea />\n                  </Field>\n                </div>\n                <div className=\"f wrap fs18\">\n                  <Button type=\"submit\" color=\"primary\">\n                    Сохранить\n                  </Button>\n                </div>\n              </form>\n            )\n          }}\n        />\n      </section>\n    </div>\n  )\n\n  // Requests\n\n  function getMailingTemplate() {\n    if (!mailingTemplateState.entity && id && !isCreate) {\n      dsp(mailingTemplateActions.get(id))\n    }\n  }\n\n  function getFullActiveParamsConfigList() {\n    dsp(paramConfigActions.refreshFullActiveList())\n  }\n\n  // Form\n\n  function buildInitialValues(): MailingTemplateModel {\n    const result = !isCreate\n      ? mailingTemplateState.entity || {}\n      : {\n          mailingType: 'AUTOMATIC',\n          isActive: true,\n          startDate: DateTime.now().toUTC(),\n          endDate: DateTime.now().plus({ day: 7 }).toUTC(),\n          configs: [],\n        }\n\n    return (result as unknown) as MailingTemplateModel\n  }\n\n  function onSubmit(values: MailingTemplateModel) {\n    const action = mailingTemplateActions[isCreate ? 'create' : 'update']\n\n    dsp(action(values, { onSuccess }))\n\n    function onSuccess() {\n      history.push(ROUTES.MAILING_TEMPLATE_LIST.PATH)\n\n      if (isCreate) {\n        dsp(mailingTemplateActions.getList(mailingTemplateState.filter))\n      }\n    }\n  }\n\n  type MailingTemplateErrors = Record<keyof Partial<Partial<MailingTemplateModel>>, string>\n\n  function formValidate(v: Partial<MailingTemplateModel>): any {\n    const err: Record<string, string> = {}\n    const msg = 'Обязательно при \"Автоматическом\" типе рассылки'\n\n    if (v?.mailingType !== 'AUTOMATIC') return\n\n    if (!v.startDate) err.startDate = msg\n    if (!v.endDate) err.endDate = msg\n\n    return err\n  }\n\n  // ParamsConfig\n\n  function buildParamConfigList(): ParamsConfigModel[] {\n    const res = sortBy(paramsConfigState.fullActiveList, (a) => a.name)\n    return (res as unknown) as ParamsConfigModel[]\n  }\n\n  function onParamConfigCheckboxChange(ParamConfig: ParamsConfigModel) {\n    return (e: React.ChangeEvent<HTMLInputElement>) => {\n      const configs = fform?.getState()?.values.configs || []\n\n      const newConfigs = e?.currentTarget?.checked\n        ? [...configs, ParamConfig]\n        : configs?.filter?.((P) => P.id !== ParamConfig.id)\n\n      fform?.change('configs', newConfigs)\n    }\n  }\n\n  function isParamsConfigLoading() {\n    return paramsConfigState.loading.getList\n  }\n\n  function isParamsConfigChecked(ParamConfig: ParamsConfigModel) {\n    return !!fform.getState().values?.configs?.find((P) => {\n      return P.id?.toString() === ParamConfig.id?.toString()\n    })\n  }\n\n  function isCheckboxAllParamsConfigsChecked() {\n    return !isParamsConfigLoading() && fform.getState().values?.configs?.length === paramComfigList?.length\n  }\n\n  function selectAllParamsConfigs(e: React.ChangeEvent<HTMLInputElement>) {\n    const newParamsConfigList = e.currentTarget.checked ? paramComfigList : []\n    fform?.change('configs', newParamsConfigList)\n  }\n}\n\nexport default MailingTemplate\n","import React, { FC, memo } from 'react'\n\nimport cx from 'clsx'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport { Switch, Route, useLocation, useHistory, Link } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\nimport Template from './list.template/_list.template'\nimport History from './list.history/_list.history'\nimport CreateTemplate from './one/_one'\n\nconst MailingTab: FC = (): JSX.Element => {\n  const location = useLocation()\n\n  const history = useHistory()\n\n  const isTemplate = new RegExp(ROUTES.MAILING_TEMPLATE_LIST.PATH, 'i').test(location.pathname)\n  const isHistory = new RegExp(ROUTES.MAILING_HISTORY.PATH, 'i').test(location.pathname)\n\n  ROUTES.MAILING.REDIRECT = isTemplate ? ROUTES.MAILING_TEMPLATE_LIST : ROUTES.MAILING_HISTORY\n\n  redirectToTemplate()\n\n  return (\n    <div className=\"MailingTab wrap\">\n      <SwitchTransition>\n        <CSSTransition key={location.pathname} timeout={200} classNames=\"appear\" unmountOnExit>\n          <Switch location={location}>\n            <Route exact path={ROUTES.MAILING_TEMPLATE.PATH} component={CreateTemplate} />\n            <Route exact path={ROUTES.MAILING_TEMPLATE_CREATE.PATH} component={CreateTemplate} />\n          </Switch>\n        </CSSTransition>\n      </SwitchTransition>\n      <div className=\"MailingContent scrollableContent scrollToTopOnRequest\">\n        <section className=\"first\">\n          <h1 className=\"nowrap\">\n            <Link\n              to={ROUTES.MAILING_TEMPLATE_LIST.REDIRECT_PATH}\n              className={cx('margin-right-l', !isHistory ? 'primary' : 'default')}\n            >\n              Шаблоны\n            </Link>\n            <Link to={ROUTES.MAILING_HISTORY.REDIRECT_PATH} className={cx(isHistory ? 'primary' : 'default')}>\n              История\n            </Link>\n          </h1>\n        </section>\n        <SwitchTransition>\n          <CSSTransition\n            key={String(isTemplate)}\n            timeout={{ appear: 0, enter: 200, exit: 200 }}\n            classNames=\"animSwitchHorizontal\"\n            unmountOnExit\n          >\n            <Switch location={location}>\n              <Route path={ROUTES.MAILING_TEMPLATE_LIST.PATH} component={Template} />\n              <Route path={ROUTES.MAILING_HISTORY.PATH} component={History} />\n            </Switch>\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </div>\n  )\n\n  function redirectToTemplate() {\n    if (!isHistory && !isTemplate) {\n      history.push(ROUTES.MAILING_TEMPLATE_LIST.PATH)\n    }\n  }\n}\n\nconst x = memo(MailingTab)\nexport default x\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useRef, useState } from 'react'\n\nimport { UseTableOptions } from 'react-table'\n\nimport { useSelector } from 'react-redux'\n\nimport { DateTime } from 'luxon'\n\nimport Skeleton from 'react-loading-skeleton'\n\nimport { apply } from '@/util/paramsConfig'\n\nimport Skl from '@/components/skelet/_skelet'\n\nimport store from '@/index/redux/store'\n\nimport Button from '@/components/button'\nimport VisibleIcon from '@/components/svg/visibleFilledIcon'\n\nimport * as paramsConfigActions from '@/store/action/paramsConfig'\n\nimport { ParamsConfigState, RootState } from '@/type/state'\nimport { NotificationModel, ParamsConfigModel } from '@/type/model'\n\nimport PopupViewConfig from '@/template/popup.viewParamConfig/_popup.viewParamsConfig'\n\nconst columns: UseTableOptions<NotificationModel & { skl?: true }>['columns'] = [\n  // <NotificationModel & { skl?: true }>['columns'] = [\n  {\n    Header: <div className=\"wrap f-left\">Событие</div>,\n    accessor: 'message',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div title={value} style={{ width: '25rem' }} className=\"bold\">\n          <Skl row={row}>{value?.replace('Событие', '')}</Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: <div className=\"wrap f-left\">Тип</div>,\n    accessor: 'configType',\n    Cell: ({ value, row }): JSX.Element => (\n      <div title={value} style={{ width: '25rem' }}>\n        <Skl row={row}>{CONFIG_TYPE[value]}</Skl>\n      </div>\n    ),\n  },\n  {\n    Header: <div className=\"wrap f-left\">Дата создания</div>,\n    accessor: 'createdAt',\n    Cell: ({ value, row }): JSX.Element => (\n      <div title={value} style={{ width: '25rem' }}>\n        <Skl row={row}>{getFormattedDate(value)}</Skl>\n      </div>\n    ),\n  },\n  {\n    accessor: 'id',\n    Cell: ({ row }): JSX.Element => {\n      const openPopup = useRef<undefined | ((v: boolean) => void)>(undefined)\n      const [isLoading, setIsLoading] = useState<boolean>(false)\n      const [isApplyLoading, setIsApplyLoading] = useState<boolean>(false)\n      const paramsConfigState = useSelector((s: RootState): ParamsConfigState => s.paramsConfigState)\n\n      // console.log(row)\n\n      return (\n        <div className=\"actionCell wrap f-top-right\">\n          {row.original.skl ? (\n            <>\n              {/* <Skeleton style={{ width: '4rem', height: '4rem' }} /> */}\n              <Skeleton style={{ width: '4rem', height: '4rem' }} />\n            </>\n          ) : (\n            <>\n              <PopupViewConfig setStateRef={openPopup} />\n              <Button\n                color=\"primary\"\n                icon\n                loading={isLoading}\n                onClick={() => navigateToSearch((row.original as unknown) as NotificationModel, 'view')}\n                className=\"fs12\"\n              >\n                <VisibleIcon />\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={() => navigateToSearch((row.original as unknown) as NotificationModel, 'apply')}\n                loading={isApplyLoading}\n              >\n                Применить\n              </Button>\n            </>\n          )}\n        </div>\n      )\n\n      function navigateToSearch(Notification: NotificationModel, action: string): void {\n        const isApply = action === 'apply'\n\n        const ParamsConfig = findParamsConfigLocaly()\n\n        if (ParamsConfig) {\n          doAction(ParamsConfig)\n        } else {\n          if (isApply) {\n            setIsApplyLoading(true)\n          } else {\n            setIsLoading(true)\n          }\n\n          store.dispatch(\n            paramsConfigActions.get(Notification.configId, {\n              onSuccess({ body }) {\n                doAction(body)\n                if (isApply) {\n                  setIsApplyLoading(false)\n                } else {\n                  setIsLoading(false)\n                }\n              },\n              onFail() {\n                if (isApply) {\n                  setIsApplyLoading(false)\n                } else {\n                  setIsLoading(false)\n                }\n              },\n            }),\n          )\n        }\n\n        function findParamsConfigLocaly(): ParamsConfigModel | undefined {\n          return paramsConfigState.list.find((p) => String(p.id) === String(Notification.configId))\n        }\n\n        function doAction(actionParamsConfig: ParamsConfigModel) {\n          if (isApply) {\n            apply(actionParamsConfig)\n          } else {\n            store.dispatch(paramsConfigActions.set({ entity: actionParamsConfig }))\n            openPopup?.current?.(true)\n          }\n        }\n      }\n    },\n  },\n]\n\nconst CONFIG_TYPE = {\n  CAR: 'Атомобиль',\n  CLIENT: 'Клиент',\n}\n\nfunction getFormattedDate(dateStr: string) {\n  if (!dateStr) return ''\n  return DateTime.fromISO(dateStr).toFormat('dd.MM.yyyy HH:mm:ss')\n}\n\nexport default columns\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, { FC, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Form, Field } from 'react-final-form'\n\nimport Button from '@/components/button'\n\nimport DatePicker from '@/components/datepicker/_datepicker'\nimport Select from '@/components/select'\n\nimport * as configTypeActions from '@/store/action/configTypeCatalog'\n\nimport { NotificationFilter, RootState } from '@/type/state'\n\nimport { ListManager } from '@/util/listManager'\n\ntype NotificationFilterListProps = {\n  listManager: ListManager\n}\n\nconst NotificationFilterList: FC<NotificationFilterListProps> = ({ listManager }): JSX.Element => {\n  const dsp = useDispatch()\n\n  const configTypeList = useSelector((s: RootState) => s.configTypeCatalogState)\n\n  useEffect(getParamsConfig, [])\n\n  return (\n    <>\n      <Form<NotificationFilter>\n        initialValues={listManager.state.filter}\n        onSubmit={listManager.onFilterChange}\n        render={({ handleSubmit, form }) => (\n          <form onSubmit={handleSubmit} className=\"f-left fs18\">\n            <Field name=\"configTypeName\">\n              {({ input }) => (\n                <div className=\"formField margin-right-l\">\n                  <Select placeholder=\"Событие\" options={getTemplateOptions()} style={{ width: '33rem' }} {...input} />\n                </div>\n              )}\n            </Field>\n            <div className=\"formField f-center-center margin-right-s\">Дата создания</div>\n            <Field name=\"startCreatedAtTimestamp\">\n              {({ input }) => (\n                <div className=\"formField margin-right-s\">\n                  <DatePicker\n                    maxDate={form.getFieldState('endCreatedAtTimestamp' as keyof NotificationFilter)?.value as string}\n                    {...input}\n                  />\n                </div>\n              )}\n            </Field>\n            <Field name=\"endCreatedAtTimestamp\">\n              {({ input }) => (\n                <div className=\"formField margin-right-l\">\n                  <DatePicker\n                    {...input}\n                    minDate={form.getFieldState('startCreatedAtTimestamp' as keyof NotificationFilter)?.value as string}\n                  />\n                </div>\n              )}\n            </Field>\n\n            <Button type=\"submit\">Искать</Button>\n          </form>\n        )}\n      />\n    </>\n  )\n\n  function getTemplateOptions() {\n    return configTypeList.list.map((item) => ({ value: item.name, label: item.name }))\n  }\n\n  function getParamsConfig() {\n    dsp(configTypeActions.getList())\n  }\n}\n\nexport default NotificationFilterList\n","import './_list.less'\n\nimport React, { FC, useEffect, memo } from 'react'\n\nimport c from 'clsx'\n\nimport { useSelector } from 'react-redux'\n\nimport ROUTES from '@/constant/routes'\nimport Table from '@/components/table'\n\nimport useDelayRender from '@/hook/delayRender'\n\nimport * as notificationActions from '@/store/action/notification'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { RootState } from '@/type/state'\n\nimport { useListManager } from '@/util/listManager'\n\nimport columns from './columns'\nimport Filter from './filter'\n\nconst NotificationList: FC = (): JSX.Element | null => {\n  const renderDelay = useDelayRender()\n\n  const { notificationState } = useSelector((s: RootState): RootState => s)\n  const { list } = notificationState\n\n  const listManager = useListManager({\n    route: ROUTES.USER_LIST,\n    actions: notificationActions,\n    state: notificationState,\n  })\n\n  useEffect(() => getNotificationList(), [])\n\n  return (\n    <div className={c('NotificationList', 'scrollableContent', notificationState.loading.getList && 'loading')}>\n      <section className=\"titleWithButton first\">\n        <h1>Оповещения</h1>\n      </section>\n      <section className=\"first margin-bottom-l f-left-center\">\n        <Filter listManager={listManager} />\n      </section>\n      {!renderDelay && (\n        <>\n          <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n          <section className=\"appear last\">\n            <Table columns={columns} data={list} loading={notificationState.loading.getList} name=\"template\" />\n          </section>\n        </>\n      )}\n    </div>\n  )\n\n  function getNotificationList() {\n    if (!list.length) {\n      listManager.dispatchAction()\n    }\n  }\n}\n\nconst x = memo(NotificationList)\nexport default x\n","import './_tab.notification.less'\n\nimport React, { FC, memo } from 'react'\n\nimport UserList from './list/_list'\n\nconst Users: FC = (): JSX.Element => {\n  return (\n    <div className=\"Notification\">\n      <UserList />\n    </div>\n  )\n}\n\nconst x = memo(Users)\nexport default x\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useState } from 'react'\n\nimport { UseTableOptions } from 'react-table'\n\nimport Skeleton from 'react-loading-skeleton'\n\nimport Checkbox from '@/components/checkboxButton'\nimport Skl from '@/components/skelet/_skelet'\nimport Button from '@/components/button'\nimport PencilIcon from '@/components/svg/pencilFilledIcon'\n\nimport { ROLES, PERMISSIONS } from '@/constant/keyValue'\nimport ROUTES from '@/constant/routes'\n\nimport store from '@/index/redux/store'\n\nimport * as userActions from '@/store/action/user'\n\nimport { UserModel } from '@/type/model'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '@/type/state'\n\nconst columns: UseTableOptions<UserModel & { skl?: true }>['columns'] = [\n  // <UserModel & { skl?: true }>['columns'] = [\n  {\n    Header: 'ФИО',\n    accessor: 'firstName',\n    Cell: ({ value, row }): JSX.Element => {\n      return (\n        <div title={`${row.original.lastName} ${value} ${row.original.middleName}`} style={{ width: '25rem' }}>\n          <p className=\"bold overflow-ellipsis\">\n            <Skl row={row}>{row.original.lastName}</Skl>\n          </p>\n          <p className=\"nowrap overflow-ellipsis\">\n            <Skl row={row}>{value}</Skl>\n            &nbsp;\n            <Skl row={row}>{row.original.middleName}</Skl>\n          </p>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Роль',\n    accessor: 'role',\n    Cell: ({ value, row }): JSX.Element => (\n      <div className=\"overflow-ellipsis\" style={{ width: '25rem' }}>\n        <Skl row={row}>{ROLES[value]}</Skl>\n      </div>\n    ),\n  },\n  {\n    Header: 'Доступ',\n    accessor: 'permissions',\n    Cell: ({ value: permissions, row }): JSX.Element => {\n      return (\n        <div className=\"overflow-ellipsis\" style={{ width: '25rem' }}>\n          <Skl row={row}>\n            {permissions?.map(\n              (iP: string): JSX.Element => (\n                <p key={iP} className=\"nowrap\">\n                  <Skl>{PERMISSIONS[iP as keyof typeof PERMISSIONS]}</Skl>\n                </p>\n              ),\n            )}\n          </Skl>\n        </div>\n      )\n    },\n  },\n  {\n    Header: 'Email',\n    accessor: 'email',\n    Cell: ({ value, row }): JSX.Element => (\n      <div title={value} className=\"overflow-ellipsis\" style={{ width: '25rem' }}>\n        <a href={`mailto:${value}`} className=\"underline\">\n          <Skl row={row}>{value}</Skl>\n        </a>\n      </div>\n    ),\n  },\n  {\n    Header: <span className=\"nowrap\">Последний вход</span>,\n    accessor: 'lastEntry',\n    Cell: ({ value, row }): JSX.Element => (\n      <div className=\"overflow-ellipsis\" style={{ width: '20rem' }}>\n        <Skl row={row}>{value}</Skl>\n      </div>\n    ),\n  },\n  {\n    Header: 'Активность',\n    accessor: 'enabled',\n    width: '1%',\n    Cell: ({ value: status, row }): JSX.Element => {\n      const [changing, setChanging] = useState(false)\n\n      const list = useSelector((s: RootState): UserModel[] => s.userState.list)\n\n      return (\n        <div className=\"wrap f-center\" style={{ width: '10rem' }}>\n          {row.original.skl ? (\n            <Skeleton style={{ width: '4rem', height: '4rem' }} />\n          ) : (\n            <Checkbox\n              color={status ? 'primary' : 'default'}\n              checked={status}\n              type=\"checkbox\"\n              className=\"selectClientCheckbox absolute\"\n              onChange={toggleActive}\n              loading={changing}\n            />\n          )}\n        </div>\n      )\n\n      function toggleActive(e: React.ChangeEvent<HTMLInputElement>) {\n        setChanging(true)\n\n        const entity = {\n          ...row.original,\n          enabled: e.target.checked,\n        }\n\n        store.dispatch(\n          userActions.toggleActive(\n            entity.collaboratorId,\n            e.target.checked ? 'enable' : 'block',\n            function onSuccess() {\n              setChanging(false)\n              store.dispatch(\n                userActions.set({\n                  list: list.map((i) => (String(i.collaboratorId) === String(entity.collaboratorId) ? entity : i)),\n                  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                } as any),\n              )\n            },\n            function onFail() {\n              setChanging(false)\n            },\n          ),\n        )\n      }\n    },\n  },\n  {\n    accessor: 'collaboratorId',\n    Cell: ({ value: id, row }): JSX.Element => {\n      return (\n        <div className=\"actionCell wrap f-top-right\">\n          {row.original.skl ? (\n            <Skeleton style={{ width: '4rem', height: '4rem' }} />\n          ) : (\n            <Button\n              href={ROUTES.USER.PATH.replace(':id', id?.toString())}\n              onClick={() => store.dispatch(userActions.set(row.original))}\n              className=\"fs12\"\n              icon\n            >\n              <PencilIcon />\n            </Button>\n          )}\n        </div>\n      )\n    },\n  },\n]\n\nexport default columns\n","import './_list.less'\n\nimport React, { FC, useEffect, memo } from 'react'\n\nimport c from 'clsx'\n\nimport { useSelector } from 'react-redux'\n\nimport ROUTES from '@/constant/routes'\nimport Table from '@/components/table'\n\nimport useDelayRender from '@/hook/delayRender'\n\nimport * as userActions from '@/store/action/user'\n\nimport { PaginationSection } from '@/template/paginationSection'\n\nimport { RootState } from '@/type/state'\n\nimport { useListManager } from '@/util/listManager'\n\nimport columns from './columns'\n\nconst UserList: FC = (): JSX.Element | null => {\n  const renderDelay = useDelayRender()\n\n  const { userState } = useSelector((s: RootState): RootState => s)\n  const { list } = userState\n\n  const listManager = useListManager({\n    route: ROUTES.USER_LIST,\n    actions: userActions,\n    state: userState,\n  })\n\n  useEffect(getUserList, [])\n\n  return (\n    <div className={c('UserList', 'scrollableContent', userState.loading.getList && 'loading')}>\n      <section className=\"titleWithButton first\">\n        <h1>Пользователи</h1>\n      </section>\n      {!renderDelay && (\n        <>\n          <PaginationSection paginationProps={listManager.paginationProps} list={list} />\n          <section className=\"appear last\">\n            <Table columns={columns} data={list} loading={userState.loading.getList} name=\"template\" />\n          </section>\n        </>\n      )}\n    </div>\n  )\n\n  function getUserList() {\n    if (!list.length) {\n      listManager.dispatchAction()\n    }\n  }\n}\n\nconst x = memo(UserList)\nexport default x\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI KeyOutlinedIconWrapper\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 211 211\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <g clipPath=\"url(#prefix__clip0)\" fill=\"currentColor\">\n          <path d=\"M150.007 70.908c7.283 0 13.188-5.904 13.188-13.187 0-7.284-5.905-13.188-13.188-13.188s-13.187 5.904-13.187 13.188c0 7.283 5.904 13.187 13.187 13.187z\" />\n          <path d=\"M208.724 68.385c-4.402-11.207-12.473-27.377-25.928-40.769C169.388 14.27 153.389 6.43 142.329 2.203c-12.142-4.64-25.94-1.716-35.15 7.452L74.812 41.869c-9.594 9.55-12.36 24.243-6.881 36.562a152.274 152.274 0 005.52 11.17L2.414 160.637A8.244 8.244 0 000 166.466v36.265a8.242 8.242 0 008.242 8.243h36.266a8.242 8.242 0 008.242-8.243v-14.836h14.836a8.242 8.242 0 008.242-8.242v-14.836h14.836a8.242 8.242 0 100-16.484H67.586a8.242 8.242 0 00-8.242 8.242v14.836H44.508a8.242 8.242 0 00-8.242 8.242v14.836H16.484V169.88l73.09-73.09a8.242 8.242 0 001.219-10.103 133.387 133.387 0 01-7.799-14.953c-2.72-6.116-1.334-13.422 3.448-18.182l32.366-32.214a16.626 16.626 0 0117.637-3.737c9.57 3.658 23.363 10.39 34.723 21.698 11.43 11.376 18.388 25.373 22.212 35.11a16.366 16.366 0 01-3.694 17.592l-32.757 32.604c-4.77 4.747-11.89 6.135-18.139 3.536a107.04 107.04 0 01-14.836-7.569 8.241 8.241 0 00-11.336 2.713 8.242 8.242 0 002.713 11.336 123.523 123.523 0 0017.128 8.74c12.422 5.167 26.591 2.39 36.098-7.073l32.757-32.603a32.843 32.843 0 007.41-35.3z\" />\n        </g>\n        <defs>\n          <clipPath id=\"prefix__clip0\">\n            <path fill=\"currentColor\" d=\"M0 0h211v211H0z\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import './_user.less'\n\nimport React, { FC, useEffect, useState } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link, useParams } from 'react-router-dom'\n\nimport { ROLES } from '@/constant/keyValue'\n// import ROUTES from '@/constant/routes'\n\nimport KeyIcon from '@/components/svg/keyFilledIcon'\n\nimport Skl from '@/components/skelet/_skelet'\n\nimport * as userActions from '@/store/action/user'\n\nimport { RootState, UserState } from '@/type/state.d'\n\nconst Users: FC = (): JSX.Element => {\n  const { id } = useParams<{ id: string }>()\n\n  const [dealerInfo, setDealerInfo] = useState<boolean>(false)\n  const [searchByClients, setSearchByClients] = useState<boolean>(false)\n  const [searchByCars, setSearchByCars] = useState<boolean>(false)\n  const [events, setEvents] = useState<boolean>(false)\n  const [newsletters, setNewsletters] = useState<boolean>(false)\n  const [feedback, setFeedback] = useState<boolean>(false)\n\n  const dsp = useDispatch()\n\n  const userState = useSelector((s: RootState): UserState => s.userState)\n\n  const { entity } = userState\n\n  useEffect(() => getUser(), [])\n\n  useEffect(() => {\n    if (entity?.permissions?.includes('PERMISSION_DEALER_DATA')) {\n      setDealerInfo(entity?.permissions?.includes('PERMISSION_DEALER_DATA'))\n    }\n    if (entity?.permissions?.includes('PERMISSION_DEALER_CLIENTS')) {\n      setSearchByClients(entity?.permissions?.includes('PERMISSION_DEALER_CLIENTS'))\n    }\n    if (entity?.permissions?.includes('PERMISSION_DEALER_CARS')) {\n      setSearchByCars(entity?.permissions?.includes('PERMISSION_DEALER_CARS'))\n    }\n    if (entity?.permissions?.includes('PERMISSION_DEALER_DATA')) {\n      setEvents(entity?.permissions?.includes('PERMISSION_DEALER_DATA'))\n    }\n    if (entity?.permissions?.includes('PERMISSION_DEALER_DATA')) {\n      setNewsletters(entity?.permissions?.includes('PERMISSION_DEALER_DATA'))\n    }\n    if (entity?.permissions?.includes('PERMISSION_CLIENT_FEEDBACK')) {\n      setFeedback(entity?.permissions?.includes('PERMISSION_CLIENT_FEEDBACK'))\n    }\n  }, [entity?.permissions])\n\n  return (\n    <div className=\"UserForm scrollableContent\">\n      <section className=\"first\">\n        <h1>Название дилерского центра</h1>\n      </section>\n      <section>\n        <div className=\"userPermissionsWrapper f fs18\">\n          <div className=\"userInfo\">\n            <div className=\"userEditRow\">\n              <div className=\"userEditKey\">Фамилия:</div>\n              <div className=\"userEditValue\">\n                <Skl load={!entity}>{entity?.lastName}</Skl>\n              </div>\n            </div>\n            <div className=\"userEditRow\">\n              <div className=\"userEditKey\">Имя:</div>\n              <div className=\"userEditValue\">\n                <Skl load={!entity}>{entity?.firstName}</Skl>\n              </div>\n            </div>\n            <div className=\"userEditRow\">\n              <div className=\"userEditKey\">Отчество:</div>\n              <div className=\"userEditValue\">\n                <Skl load={!entity}>{entity?.middleName}</Skl>\n              </div>\n            </div>\n            <div className=\"userEditRow\">\n              <div className=\"userEditKey\">Email:</div>\n              <div className=\"userEditValue underline\">\n                <Link to={`mailto:${entity?.email}`}>\n                  <Skl load={!entity}>{entity?.email}</Skl>\n                </Link>\n              </div>\n            </div>\n            <div className=\"userEditRow\">\n              <div className=\"userEditKey\">Роль:</div>\n              <div className=\"userEditValue\">\n                {entity?.role ? ROLES[entity?.role] : <Skl load={!entity}>{entity?.role}</Skl>}\n              </div>\n            </div>\n          </div>\n          <div className=\"userPermissions relative\">\n            <KeyIcon width=\"16rem\" height=\"16rem\" />\n            <div className=\"permissionTitle\">Допуск:</div>\n            <div className=\"permissionRow\">\n              <input\n                type=\"checkbox\"\n                className=\"whiteBg small\"\n                checked={dealerInfo}\n                onChange={(e) => setDealerInfo(e.target.checked)}\n              />\n              <div className=\"permissionType\">Информация о диллере</div>\n            </div>\n            <div className=\"permissionRow\">\n              <input\n                type=\"checkbox\"\n                className=\"whiteBg small\"\n                checked={searchByClients}\n                onChange={(e) => setSearchByClients(e.target.checked)}\n              />\n              <div className=\"permissionType\">Поиск по клиентам</div>\n            </div>\n            <div className=\"permissionRow\">\n              <input\n                type=\"checkbox\"\n                className=\"whiteBg small\"\n                checked={searchByCars}\n                onChange={(e) => setSearchByCars(e.target.checked)}\n              />\n              <div className=\"permissionType\">Поиск по автомобилям</div>\n            </div>\n            <div className=\"permissionRow\">\n              <input\n                type=\"checkbox\"\n                className=\"whiteBg small\"\n                checked={events}\n                onChange={(e) => setEvents(e.target.checked)}\n              />\n              <div className=\"permissionType\">События</div>\n            </div>\n            <div className=\"permissionRow\">\n              <input type=\"checkbox\" className=\"whiteBg small\" checked={newsletters} />\n              <div className=\"permissionType\">Рассылки</div>\n            </div>\n            <div className=\"permissionRow\">\n              <input\n                type=\"checkbox\"\n                className=\"whiteBg small\"\n                checked={feedback}\n                onChange={(e) => setFeedback(e.target.checked)}\n              />\n              <div className=\"permissionType\">Обратная связь</div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n\n  function getUser() {\n    if (!entity && id) {\n      dsp(userActions.get(id))\n    }\n  }\n}\n\nexport default Users\n","import './_tab.users.less'\n\nimport React, { FC, memo } from 'react'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport { Switch, Route, useLocation } from 'react-router-dom'\n\nimport ROUTES from '@/constant/routes'\n\nimport UserList from './list/_list'\nimport User from './user/_user'\n\nconst Users: FC = (): JSX.Element => {\n  const location = useLocation()\n\n  return (\n    <div className=\"Users\">\n      <UserList />\n      <SwitchTransition mode=\"in-out\">\n        <CSSTransition key={location.pathname} timeout={200} classNames=\"appear\" unmountOnExit>\n          <Switch location={location}>\n            <Route path={ROUTES.USER.PATH} component={User} />\n          </Switch>\n        </CSSTransition>\n      </SwitchTransition>\n    </div>\n  )\n}\n\nconst x = memo(Users)\nexport default x\n","import './_main.less'\n\nimport React, { FC, memo } from 'react'\nimport { Switch, Route, useLocation, Redirect } from 'react-router-dom'\n\nimport { CSSTransition, SwitchTransition } from 'react-transition-group'\n\nimport { useSelector } from 'react-redux'\n\nimport Header from '@/template/header/_header'\nimport Sider from '@/components/sider/_sider'\n\nimport ROUTES from '@/constant/routes'\nimport PERMISSIONS from '@/helper/permission'\n\nimport { CSSVariableState, RootState } from '@/type/state'\n\nimport NotFound from '@/page/notFound/_notFound'\n\nimport About from './tab.about/_tab.about'\nimport Search from './tab.search/_tab.search'\nimport Feedback from './tab.feedback/_tab.feedback'\nimport ParamsConfig from './tab.paramsConfig/_tab.paramsConfig'\nimport Mailing from './tab.mailing/_tab.mailing'\nimport Notification from './tab.notifications/_tab.notification'\nimport Users from './tab.users/_tab.users'\n\nconst MainPage: FC = (): JSX.Element => {\n  const location = useLocation()\n\n  const cssVariableState = useSelector((s: RootState): CSSVariableState => s.cssVariableState)\n\n  const [, , smth] = location.pathname.split('/')\n  const appPath = `/${smth}`\n\n  return (\n    <>\n      <Header />\n      <Sider />\n      <main className=\"MainPage\">\n        <SwitchTransition>\n          <CSSTransition key={appPath} timeout={cssVariableState.appPageSwitchAnimation} classNames=\"mainTab\">\n            <Switch location={location}>\n              <Route path={ROUTES.NOTIFICATION.PATH} component={Notification} />\n              {ROUTES.APP.isCurrent && <Redirect to={ROUTES.ABOUT.PATH} />}\n              {PERMISSIONS.PERMISSION_DEALER_DATA.is && <Route path={ROUTES.ABOUT.PATH} component={About} />}\n              <Route path={ROUTES.USER_LIST.PATH} component={Users} />\n              {PERMISSIONS.PERMISSION_CLIENT_FEEDBACK.is && <Route path={ROUTES.FEEDBACK.PATH} component={Feedback} />}\n              {PERMISSIONS.PERMISSION_MAILINGS && <Route path={ROUTES.MAILING.PATH} component={Mailing} />}\n              {PERMISSIONS.PERMISSION_PARAMS_CONFIG.is && (\n                <Route path={ROUTES.PARAMS_CONFIG_LIST.PATH} component={ParamsConfig} />\n              )}\n              {(PERMISSIONS.PERMISSION_DEALER_CARS.is || PERMISSIONS.PERMISSION_DEALER_CLIENTS.is) && (\n                <Route path={ROUTES.SEARCH.PATH} component={Search} />\n              )}\n              <Route component={NotFound} />\n            </Switch>\n          </CSSTransition>\n        </SwitchTransition>\n      </main>\n    </>\n  )\n}\n\nconst x = memo(MainPage)\nexport default x\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 11 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <path\n          d=\"M9.01 6.082V3.987A3.84 3.84 0 005.176.15 3.84 3.84 0 001.34 3.987v2.095A1.477 1.477 0 00.16 7.527v5.311c0 .814.662 1.476 1.475 1.476h7.082c.814 0 1.475-.662 1.475-1.476v-5.31c0-.713-.507-1.309-1.18-1.446zm-3.18 4.532l.227 1.592a.297.297 0 01-.292.337h-1.18a.296.296 0 01-.292-.336l.228-1.593A1.482 1.482 0 013.7 9.298c0-.813.661-1.476 1.475-1.476.814 0 1.475.663 1.475 1.476 0 .56-.327 1.07-.82 1.316zm1.41-4.562H3.11V3.987c0-1.14.926-2.066 2.065-2.066 1.14 0 2.066.927 2.066 2.066v2.065z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","import * as React from 'react'\n\nfunction SvgComponent(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <span className=\"IconWrapperUI\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 469.44 469.44\" width=\"1em\" height=\"1em\" {...props}>\n        <path fill=\"currentColor\" d=\"M231.147 160.373l67.2 67.2.32-3.52c0-35.307-28.693-64-64-64l-3.52.32z\" />\n        <path\n          fill=\"currentColor\"\n          d=\"M234.667 117.387c58.88 0 106.667 47.787 106.667 106.667 0 13.76-2.773 26.88-7.573 38.933l62.4 62.4c32.213-26.88 57.6-61.653 73.28-101.333-37.013-93.653-128-160-234.773-160-29.867 0-58.453 5.333-85.013 14.933l46.08 45.973c12.052-4.693 25.172-7.573 38.932-7.573zM21.333 59.253l48.64 48.64 9.707 9.707C44.48 145.12 16.64 181.707 0 224.053c36.907 93.653 128 160 234.667 160 33.067 0 64.64-6.4 93.547-18.027l9.067 9.067 62.187 62.293 27.2-27.093L48.533 32.053l-27.2 27.2zM139.307 177.12l32.96 32.96c-.96 4.587-1.6 9.173-1.6 13.973 0 35.307 28.693 64 64 64 4.8 0 9.387-.64 13.867-1.6l32.96 32.96c-14.187 7.04-29.973 11.307-46.827 11.307-58.88 0-106.667-47.787-106.667-106.667 0-16.853 4.267-32.64 11.307-46.933z\"\n        />\n      </svg>\n    </span>\n  )\n}\n\nconst MemoSvgComponent = React.memo(SvgComponent)\nexport default MemoSvgComponent\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { FC } from 'react'\n\nimport c from 'clsx'\n\nimport InvisibleIcon from '@/components/svg/invisibleFilledIcon'\nimport VisibleIcon from '@/components/svg/visibleFilledIcon'\n\ntype VisibilitySwitcherProps = {\n  isVisible: boolean\n} & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n\nconst VisibilitySwitcher: FC<VisibilitySwitcherProps> = ({ isVisible, className, ...props }): JSX.Element => {\n  return (\n    <div className={c('VisibilitySwitcher f-center-center', className)} {...props}>\n      {isVisible ? <VisibleIcon className=\"visibilityIcon\" /> : <InvisibleIcon className=\"visibilityIcon\" />}\n    </div>\n  )\n}\n\nexport default VisibilitySwitcher\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport './_login.less'\n\nimport React, { FC, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  // useDispatch,\n  useSelector,\n} from 'react-redux'\nimport { Form, Field } from 'react-final-form'\nimport c from 'clsx'\n\nimport LoadingIcon from '@/components/svg/loadingFilledIcon'\nimport LockIcon from '@/components/svg/lockFilledIcon'\nimport UserIcon from '@/components/svg/userFilledIcon'\nimport IconInCircle from '@/components/IconInCircle/_iconInCircle'\nimport VisibilitySwitcher from '@/components/visibilitySwitcher/_visibilitySwitcher'\nimport Checkbox from '@/components/checkboxButton'\nimport Input from '@/components/input'\nimport Button from '@/components/button'\n\n// import * as parse from '@/helper/parse'\nimport * as validate from '@/helper/validate'\n\nimport ROUTES from '@/constant/routes'\n\nimport * as authActions from '@/store/action/auth'\n\nimport PopupLicense from '@/template/popupLicense/_popupLicense'\nimport { RootState } from '@/type/state'\n\nconst LoginPage: FC = (): JSX.Element => {\n  // const dsp = useDispatch()\n\n  const history = useHistory()\n\n  const logging = useSelector((s: RootState): boolean => s.authState.loading.logging)\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false)\n\n  const togglePopupLicense = useRef<(b: boolean) => void | undefined>()\n\n  return (\n    <main className=\"f-center-center wrap\">\n      <div className=\"loginFormWrapper fc-top-center\">\n        <div className=\"logos fc\" />\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit, form }) => (\n            <form onSubmit={handleSubmit} className=\"fc-center-center\">\n              <PopupLicense setStateRef={togglePopupLicense} onAccept={() => form.change('accept', true)} />\n              <Field\n                name=\"login\"\n                validate={validate.required}\n                // parse={parse.phone}\n                // 3 validate={validate.length(16)}\n              >\n                {({ input, meta }) => (\n                  <div className=\"formField f-center-center\">\n                    <label htmlFor=\"username\" style={{ color: 'white' }}>\n                      <IconInCircle>\n                        <UserIcon />\n                      </IconInCircle>\n                    </label>\n                    <Input\n                      {...input}\n                      type=\"text\"\n                      autoComplete=\"on\"\n                      id=\"username\"\n                      // placeholder=\"+7(999)999-99-99\"\n                      placeholder=\"Логин\"\n                      className=\"borderBottom\"\n                    />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n              <Field name=\"password\" validate={validate.required}>\n                {({ input, meta }) => (\n                  <div className=\"f-center-center formField\">\n                    <label htmlFor=\"password\" className=\"white\">\n                      <IconInCircle>\n                        <LockIcon />\n                      </IconInCircle>\n                    </label>\n                    <Input\n                      className=\"borderBottom\"\n                      placeholder=\"Пароль\"\n                      id=\"password\"\n                      type={isPasswordVisible ? 'text' : 'password'}\n                      {...input}\n                    />\n                    <VisibilitySwitcher\n                      isVisible={isPasswordVisible}\n                      onClick={changePasswordVisibility}\n                      className=\"white\"\n                    />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                  </div>\n                )}\n              </Field>\n              <Field name=\"accept\" validate={validate.required} type=\"checkbox\">\n                {({ input, meta }) => (\n                  <div\n                    className={c(\n                      'f-center-center formField checkboxField',\n                      !meta.pristine || meta.active ? 'white' : 'gray',\n                    )}\n                  >\n                    <Checkbox {...input} id=\"accept\" className=\"transparent checkbox\" />\n                    {meta.touched && meta.error && <span className=\"fieldError\">{meta.error}</span>}\n                    <div className=\"checkboxWrapper\">\n                      <label htmlFor=\"accept\">\n                        Принимаю условия&nbsp;\n                        <br />\n                      </label>\n                      <a style={{ cursor: 'pointer' }} onClick={() => togglePopupLicense?.current?.(true)}>\n                        пользовательского соглашения\n                      </a>\n                    </div>\n                  </div>\n                )}\n              </Field>\n              <Button type=\"submit\" className=\"f-center-center\">\n                {logging && <LoadingIcon className=\"margin-right-s\" />}\n                Войти\n              </Button>\n            </form>\n          )}\n        />\n      </div>\n      <div className=\"fitCover gradient\" />\n    </main>\n  )\n\n  function changePasswordVisibility() {\n    setIsPasswordVisible(!isPasswordVisible)\n  }\n\n  function onSubmit(values: authActions.LoginProps['body'] & { accept: boolean }) {\n    history.push(ROUTES.ABOUT.PATH)\n    // const loginAction = authActions.login({\n    //   body: values,\n    //   onSuccess() {\n    //   },\n    // })\n\n    // dsp(loginAction)\n  }\n}\n\nexport default LoginPage\n","import React, { FC } from 'react'\n\nimport { Redirect, Route } from 'react-router-dom'\n\n// import { TOKEN } from '@/constant/localStorage'\n\ntype ProtectedRouteProps = {\n  component: (() => JSX.Element) | FC\n  path: string\n}\n\nconst ProtectedRoute: FC<ProtectedRouteProps> = (props): JSX.Element => {\n  // const isAuthenticated = Boolean(localStorage.getItem(TOKEN))\n  const isAuthenticated = true\n\n  return isAuthenticated ? <Route {...props} /> : <Redirect to={{ pathname: '/login' }} />\n}\n\nexport default ProtectedRoute\n","import { getСurrent } from '@/util/route-constant'\n\nimport ROUTES from '@/constant/routes'\n\nexport default function setPageTitle(): void {\n  document.title = `Gaz Dealer | ${getСurrent({ ...ROUTES })?.NAME || ''}`\n}\n","import { Route, Routes } from './route'\n\nexport function getСurrent(ROUTES: Routes): Route | null {\n  const keys = Object.keys(ROUTES)\n\n  for (let i = 0; i < keys.length; i += 1) {\n    const route = ROUTES[keys[i]]\n\n    if (route.isCurrent) return route\n  }\n\n  return null\n}\n","import React from 'react'\n\nimport { Route, useLocation, Router, Switch } from 'react-router-dom'\n\nimport { setPreviousRoute } from '@/util/route-constant'\nimport history from '@/index/route/history'\nimport ROUTES from '@/constant/routes'\nimport Main from '@/page/main/_main'\nimport Login from '@/page/login/_login'\nimport NotFound from '@/page/notFound/_notFound'\n\nimport ProtectedRoute from './protectedRoute'\nimport setPageTitle from './util.setPageTitle'\n\nexport default function RouterManager(): JSX.Element {\n  return (\n    <Router history={history}>\n      <RouteList />\n    </Router>\n  )\n}\n\nconst RouteList = () => {\n  const location = useLocation()\n\n  setPreviousRoute({ ...ROUTES })\n  setPageTitle()\n\n  return (\n    <div className=\"ReactRouterDom withHeader\">\n      <Switch location={location}>\n        <Route path={ROUTES.LOGIN.PATH} component={Login} />\n\n        <ProtectedRoute path={ROUTES.APP.PATH} component={Main} />\n        <NotFound />\n      </Switch>\n    </div>\n  )\n}\n","import 'react-toastify/dist/ReactToastify.css'\n\nimport React, { FC } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport setThemeOnce from './helper.setThemeOnce'\nimport NotificationLayer from './notificationLayer'\n\nimport Routes from './route'\nimport store from './redux/store'\nimport '../style/index.less'\n\nconst App: FC = (): JSX.Element | null => {\n  setThemeOnce()\n\n  return (\n    <Provider store={store}>\n      <NotificationLayer>\n        <Routes />\n      </NotificationLayer>\n    </Provider>\n  )\n}\n\nwindow.onload = () => {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n","import * as cssVariableActions from '@/store/action/cssVariable'\nimport { getCurrentThemeName } from '@/util/cssVariables'\n\nimport store from './redux/store'\n\nexport default function setThemeOnce(): void {\n  store.dispatch(cssVariableActions.setTheme(getCurrentThemeName()))\n}\n","export const LOGIN = {\n  START: 'LOGIN_AUTH/START',\n  SUCCESS: 'LOGIN_AUTH/SUCCESS',\n  FAIL: 'LOGIN_AUTH/FAIL',\n}\n\nexport const SIGNUP = {\n  START: 'SIGNUP/START',\n  SUCCESS: 'SIGNUP/SUCCESS',\n  FAIL: 'SIGNUP/FAIL',\n}\n\nexport const REFRESH = {\n  START: 'REFRESH/START',\n  SUCCESS: 'REFRESH/SUCCESS',\n  FAIL: 'REFRESH/FAIL',\n}\n\nexport const LOGOUT = 'LOGOUT'\n","import { StageAction } from '@savchenko91/rc-redux-api-mw'\n\nimport { combine } from '@/util/combine'\nimport { AuthState } from '@/type/state'\n\nimport { TokenResponseBody } from '../action/auth'\nimport * as CONSTANTS from '../constant/auth'\n\nconst initialState = {\n  loading: {\n    logging: false,\n  },\n}\n\nexport default combine(initialState, getCard)\n\nfunction getCard(state: AuthState, action: StageAction<TokenResponseBody>): AuthState | void {\n  switch (action.type) {\n    case CONSTANTS.LOGIN?.START:\n      return {\n        ...state,\n\n        loading: {\n          ...state.loading,\n          logging: true,\n        },\n      }\n    case CONSTANTS.LOGIN?.FAIL:\n      return {\n        ...state,\n\n        loading: {\n          ...state.loading,\n          logging: false,\n        },\n      }\n    case CONSTANTS.LOGIN?.SUCCESS:\n      return {\n        ...state,\n\n        loading: {\n          ...state.loading,\n          logging: false,\n        },\n      }\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line import/prefer-default-export\nexport function combine(initS: any, ...fn: ((s: any, a: any) => any)[]) {\n  return (s = initS, a: any): any => {\n    for (let i = 0; i < fn.length; i += 1) {\n      const newState = fn[i](s, a)\n      if (newState) return newState\n    }\n\n    return s\n  }\n}\n","export const SET = 'TELEMATIC_RECORD.SET'\n\nexport const GET = {\n  START: 'TELEMATIC_RECORD/GET/START',\n  SUCCESS: 'TELEMATIC_RECORD/GET/SUCCESS',\n  FAIL: 'TELEMATIC_RECORD/GET/FAIL',\n}\n","import { ReducerManager } from '@/util/reducerManager'\n\nimport * as CONSTANTS from '../constant/telematicRecord'\n\nconst reducerManager = new ReducerManager(CONSTANTS)\n\nexport default reducerManager.reduce\n"],"sourceRoot":""}